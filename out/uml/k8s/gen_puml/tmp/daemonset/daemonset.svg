<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1538px" preserveAspectRatio="none" style="width:15663px;height:1538px;background:#FFFFFF;" version="1.1" viewBox="0 0 15663 1538" width="15663px" zoomAndPan="magnify"><defs/><g><!--MD5=[c3d15b1312d733955afc1f0ecaa31bf7]
cluster daemonset--><g id="cluster_daemonset"><path d="M170.5,114.532 L249.5,114.532 A3.75,3.75 0 0 1 252,117.032 L259,140.8039 L15563.5,140.8039 A2.5,2.5 0 0 1 15566,143.3039 L15566,1529.032 A2.5,2.5 0 0 1 15563.5,1531.532 L170.5,1531.532 A2.5,2.5 0 0 1 168,1529.032 L168,117.032 A2.5,2.5 0 0 1 170.5,114.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="168" x2="259" y1="140.8039" y2="140.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="78" x="172" y="132.7719">daemonset</text></g><!--MD5=[d33f5f937a764b6be82a1b48de14bd8c]
cluster names--><g id="cluster_names"><path d="M8.5,563.532 L55.5,563.532 A3.75,3.75 0 0 1 58,566.032 L65,589.8039 L157.5,589.8039 A2.5,2.5 0 0 1 160,592.3039 L160,648.032 A2.5,2.5 0 0 1 157.5,650.532 L8.5,650.532 A2.5,2.5 0 0 1 6,648.032 L6,566.032 A2.5,2.5 0 0 1 8.5,563.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="65" y1="589.8039" y2="589.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="46" x="10" y="581.7719">names</text></g><!--MD5=[272379cf1f80536b6294ad33393ecec2]
cluster registry--><g id="cluster_registry"><path d="M15576.5,145.032 L15630.5,145.032 A3.75,3.75 0 0 1 15633,147.532 L15640,171.3039 L15653.5,171.3039 A2.5,2.5 0 0 1 15656,173.8039 L15656,229.532 A2.5,2.5 0 0 1 15653.5,232.032 L15576.5,232.032 A2.5,2.5 0 0 1 15574,229.532 L15574,147.532 A2.5,2.5 0 0 1 15576.5,145.032 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="15574" x2="15640" y1="171.3039" y2="171.3039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="53" x="15578" y="163.2719">registry</text></g><!--MD5=[857233cdc7018b1e8695fe78ce49561f]
cluster __builtin__--><g id="cluster___builtin__"><path d="M2158.5,6.532 L2204.5,6.532 A3.75,3.75 0 0 1 2207,9.032 L2214,32.8039 L2239.5,32.8039 A2.5,2.5 0 0 1 2242,35.3039 L2242,91.032 A2.5,2.5 0 0 1 2239.5,93.532 L2158.5,93.532 A2.5,2.5 0 0 1 2156,91.032 L2156,9.032 A2.5,2.5 0 0 1 2158.5,6.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2156" x2="2214" y1="32.8039" y2="32.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="45" x="2160" y="24.7719">builtin</text></g><!--MD5=[c7d71320c235c8d3f18f83153826beca]
class daemonset.daemonSetStatusStrategy--><g id="elem_daemonset.daemonSetStatusStrategy"><rect codeLine="2" fill="#F1F1F1" height="129.0876" id="daemonset.daemonSetStatusStrategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="663" x="9887.5" y="1165.032"/><ellipse cx="10128.75" cy="1181.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10128.9375,1187.7351 C10131.2344,1187.7351 10132.6875,1186.1101 10132.6875,1184.1101 C10132.6875,1182.282 10131.8594,1181.4382 10130.7188,1180.6414 L10129.7031,1179.9226 C10128.5781,1179.1101 10128.1563,1178.8132 10128.1563,1177.9539 C10128.1563,1177.2664 10128.6406,1176.8601 10129.2188,1176.8601 C10129.9531,1176.8601 10130.4375,1177.2507 10131.1406,1177.8914 L10132.4531,1176.3132 C10131.4844,1175.2976 10130.4688,1174.7039 10129.2031,1174.7039 C10127.0625,1174.7039 10125.6094,1176.2195 10125.6094,1178.1414 C10125.6094,1179.9382 10126.5313,1180.8445 10127.625,1181.5945 L10128.7188,1182.3445 C10129.6563,1182.9539 10130.1094,1183.532 10130.1094,1184.4695 C10130.1094,1185.1414 10129.6406,1185.5632 10128.9375,1185.5632 C10128.2344,1185.5632 10127.4844,1185.0476 10126.8281,1184.2195 L10125.2813,1185.907 C10126.3125,1187.0945 10127.6094,1187.7351 10128.9375,1187.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="10149.25" y="1187.136">daemonSetStatusStrategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="9888.5" x2="10549.5" y1="1197.032" y2="1197.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="9888.5" x2="10549.5" y1="1205.032" y2="1205.032"/><ellipse cx="9898.5" cy="1220.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="9907.5" y="1225.2719">GetResetFields()</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="10020.5" y="1225.2719">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="10050.5" y="1225.2719">[fieldpath.APIVersion]*fieldpath.Set</text><ellipse cx="9898.5" cy="1240.9398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="564" x="9907.5" y="1245.5438">PrepareForUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object)</text><ellipse cx="9898.5" cy="1261.2118" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="637" x="9907.5" y="1265.8157">ValidateUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) field.ErrorList</text><ellipse cx="9898.5" cy="1281.4837" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="623" x="9907.5" y="1286.0876">WarningsOnUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) []string</text></g><!--MD5=[1cd68f9c650f70644321eea9d5fa572a]
class daemonset.daemonSetStrategy--><g id="elem_daemonset.daemonSetStrategy"><rect codeLine="9" fill="#F1F1F1" height="291.2629" id="daemonset.daemonSetStrategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="663" x="10127.5" y="773.532"/><ellipse cx="10389.75" cy="789.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10389.9375,796.2351 C10392.2344,796.2351 10393.6875,794.6101 10393.6875,792.6101 C10393.6875,790.782 10392.8594,789.9382 10391.7188,789.1414 L10390.7031,788.4226 C10389.5781,787.6101 10389.1563,787.3132 10389.1563,786.4539 C10389.1563,785.7664 10389.6406,785.3601 10390.2188,785.3601 C10390.9531,785.3601 10391.4375,785.7507 10392.1406,786.3914 L10393.4531,784.8132 C10392.4844,783.7976 10391.4688,783.2039 10390.2031,783.2039 C10388.0625,783.2039 10386.6094,784.7195 10386.6094,786.6414 C10386.6094,788.4382 10387.5313,789.3445 10388.625,790.0945 L10389.7188,790.8445 C10390.6563,791.4539 10391.1094,792.032 10391.1094,792.9695 C10391.1094,793.6414 10390.6406,794.0632 10389.9375,794.0632 C10389.2344,794.0632 10388.4844,793.5476 10387.8281,792.7195 L10386.2813,794.407 C10387.3125,795.5945 10388.6094,796.2351 10389.9375,796.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="10410.25" y="795.636">daemonSetStrategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="10128.5" x2="10789.5" y1="805.532" y2="805.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="10128.5" x2="10789.5" y1="813.532" y2="813.532"/><ellipse cx="10138.5" cy="829.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="589" x="10147.5" y="833.7719">DefaultGarbageCollectionPolicy(ctx context.Context) daemonset.GarbageCollectionPolicy</text><ellipse cx="10138.5" cy="849.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="10147.5" y="854.0438">NamespaceScoped() bool</text><ellipse cx="10138.5" cy="869.7118" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="10147.5" y="874.3157">GetResetFields()</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="10260.5" y="874.3157">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="10290.5" y="874.3157">[fieldpath.APIVersion]*fieldpath.Set</text><ellipse cx="10138.5" cy="889.9837" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="405" x="10147.5" y="894.5876">PrepareForCreate(ctx context.Context, obj daemonset.Object)</text><ellipse cx="10138.5" cy="910.2556" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="564" x="10147.5" y="914.8596">PrepareForUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object)</text><ellipse cx="10138.5" cy="930.5275" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="435" x="10147.5" y="935.1315">Validate(ctx context.Context, obj daemonset.Object) field.ErrorList</text><ellipse cx="10138.5" cy="950.7994" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="464" x="10147.5" y="955.4034">WarningsOnCreate(ctx context.Context, obj daemonset.Object) []string</text><ellipse cx="10138.5" cy="971.0713" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="10147.5" y="975.6753">Canonicalize(obj daemonset.Object)</text><ellipse cx="10138.5" cy="991.3432" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="10147.5" y="995.9472">AllowCreateOnUpdate() bool</text><ellipse cx="10138.5" cy="1011.6151" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="637" x="10147.5" y="1016.2191">ValidateUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) field.ErrorList</text><ellipse cx="10138.5" cy="1031.8871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="623" x="10147.5" y="1036.491">WarningsOnUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) []string</text><ellipse cx="10138.5" cy="1052.159" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="10147.5" y="1056.7629">AllowUnconditionalUpdate() bool</text></g><!--MD5=[0026194b2e29ce0e261137722ee3a7d3]
class daemonset.ObjectTyper--><g id="elem_daemonset.ObjectTyper"><rect codeLine="341" fill="#F1F1F1" height="88.5438" id="daemonset.ObjectTyper" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="437" x="10762.5" y="574.032"/><ellipse cx="10936.75" cy="590.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10933.1094,596.532 L10939.8906,596.532 L10939.8906,594.4539 L10937.7344,594.4539 L10937.7344,586.0164 L10939.8906,586.0164 L10939.8906,583.907 L10933.1094,583.907 L10933.1094,586.0164 L10935.2031,586.0164 L10935.2031,594.4539 L10933.1094,594.4539 L10933.1094,596.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="80" x="10957.25" y="596.136">ObjectTyper</text><line style="stroke:#181818;stroke-width:0.5;" x1="10763.5" x2="11198.5" y1="606.032" y2="606.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="10763.5" x2="11198.5" y1="614.032" y2="614.032"/><ellipse cx="10773.5" cy="629.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="411" x="10782.5" y="634.2719">ObjectKinds( Object) ([]schema.GroupVersionKind, bool, error)</text><ellipse cx="10773.5" cy="649.9398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="10782.5" y="654.5438">Recognizes(gvk schema.GroupVersionKind) bool</text></g><!--MD5=[3ef9dabaaf3039a027e34759dbc5612d]
class daemonset.ResetFieldsStrategy--><g id="elem_daemonset.ResetFieldsStrategy"><rect codeLine="140" fill="#F1F1F1" height="68.2719" id="daemonset.ResetFieldsStrategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="408" x="9499" y="584.532"/><ellipse cx="9633.25" cy="600.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9629.6094,607.032 L9636.3906,607.032 L9636.3906,604.9539 L9634.2344,604.9539 L9634.2344,596.5164 L9636.3906,596.5164 L9636.3906,594.407 L9629.6094,594.407 L9629.6094,596.5164 L9631.7031,596.5164 L9631.7031,604.9539 L9629.6094,604.9539 L9629.6094,607.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="131" x="9653.75" y="606.636">ResetFieldsStrategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="9500" x2="9906" y1="616.532" y2="616.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="9500" x2="9906" y1="624.532" y2="624.532"/><ellipse cx="9510" cy="640.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="9519" y="644.7719">GetResetFields()</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="9632" y="644.7719">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="9662" y="644.7719">[fieldpath.APIVersion]*fieldpath.Set</text></g><!--MD5=[828cb2111aa3ed792faf41f7c050d72a]
class daemonset.GarbageCollectionDeleteStrategy--><g id="elem_daemonset.GarbageCollectionDeleteStrategy"><rect codeLine="63" fill="#F1F1F1" height="68.2719" id="daemonset.GarbageCollectionDeleteStrategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="536" x="10191" y="584.532"/><ellipse cx="10345.25" cy="600.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10341.6094,607.032 L10348.3906,607.032 L10348.3906,604.9539 L10346.2344,604.9539 L10346.2344,596.5164 L10348.3906,596.5164 L10348.3906,594.407 L10341.6094,594.407 L10341.6094,596.5164 L10343.7031,596.5164 L10343.7031,604.9539 L10341.6094,604.9539 L10341.6094,607.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="219" x="10365.75" y="606.636">GarbageCollectionDeleteStrategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="10192" x2="10726" y1="616.532" y2="616.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="10192" x2="10726" y1="624.532" y2="624.532"/><ellipse cx="10202" cy="640.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="510" x="10211" y="644.7719">DefaultGarbageCollectionPolicy(ctx context.Context) GarbageCollectionPolicy</text></g><!--MD5=[33a12e410859d3ed22f09a8ffa832b6d]
class daemonset.NamespaceScopedStrategy--><g id="elem_daemonset.NamespaceScopedStrategy"><rect codeLine="106" fill="#F1F1F1" height="68.2719" id="daemonset.NamespaceScopedStrategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="213" x="9942.5" y="584.532"/><ellipse cx="9957.5" cy="600.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9953.8594,607.032 L9960.6406,607.032 L9960.6406,604.9539 L9958.4844,604.9539 L9958.4844,596.5164 L9960.6406,596.5164 L9960.6406,594.407 L9953.8594,594.407 L9953.8594,596.5164 L9955.9531,596.5164 L9955.9531,604.9539 L9953.8594,604.9539 L9953.8594,607.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="181" x="9971.5" y="606.636">NamespaceScopedStrategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="9943.5" x2="10154.5" y1="616.532" y2="616.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="9943.5" x2="10154.5" y1="624.532" y2="624.532"/><ellipse cx="9953.5" cy="640.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="9962.5" y="644.7719">NamespaceScoped() bool</text></g><!--MD5=[8a4025e475e3f3f44542f0421c3f9f99]
class daemonset.RESTCreateStrategy--><g id="elem_daemonset.RESTCreateStrategy"><rect codeLine="112" fill="#F1F1F1" height="149.3596" id="daemonset.RESTCreateStrategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="490" x="11465" y="544.032"/><ellipse cx="11640.75" cy="560.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11637.1094,566.532 L11643.8906,566.532 L11643.8906,564.4539 L11641.7344,564.4539 L11641.7344,556.0164 L11643.8906,556.0164 L11643.8906,553.907 L11637.1094,553.907 L11637.1094,556.0164 L11639.2031,556.0164 L11639.2031,564.4539 L11637.1094,564.4539 L11637.1094,566.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="130" x="11661.25" y="566.136">RESTCreateStrategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="11466" x2="11954" y1="576.032" y2="576.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="11466" x2="11954" y1="584.032" y2="584.032"/><ellipse cx="11476" cy="599.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="11485" y="604.2719">NamespaceScoped() bool</text><ellipse cx="11476" cy="619.9398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="405" x="11485" y="624.5438">PrepareForCreate(ctx context.Context, obj daemonset.Object)</text><ellipse cx="11476" cy="640.2118" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="435" x="11485" y="644.8157">Validate(ctx context.Context, obj daemonset.Object) field.ErrorList</text><ellipse cx="11476" cy="660.4837" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="464" x="11485" y="665.0876">WarningsOnCreate(ctx context.Context, obj daemonset.Object) []string</text><ellipse cx="11476" cy="680.7556" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="11485" y="685.3596">Canonicalize(obj daemonset.Object)</text></g><!--MD5=[040f68eb17249edf8e6b63731546ee1d]
class daemonset.RESTUpdateStrategy--><g id="elem_daemonset.RESTUpdateStrategy"><rect codeLine="126" fill="#F1F1F1" height="189.9034" id="daemonset.RESTUpdateStrategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="663" x="11990.5" y="523.532"/><ellipse cx="12249.75" cy="539.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12246.1094,546.032 L12252.8906,546.032 L12252.8906,543.9539 L12250.7344,543.9539 L12250.7344,535.5164 L12252.8906,535.5164 L12252.8906,533.407 L12246.1094,533.407 L12246.1094,535.5164 L12248.2031,535.5164 L12248.2031,543.9539 L12246.1094,543.9539 L12246.1094,546.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="136" x="12270.25" y="545.636">RESTUpdateStrategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="11991.5" x2="12652.5" y1="555.532" y2="555.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="11991.5" x2="12652.5" y1="563.532" y2="563.532"/><ellipse cx="12001.5" cy="579.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="12010.5" y="583.7719">NamespaceScoped() bool</text><ellipse cx="12001.5" cy="599.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="12010.5" y="604.0438">AllowCreateOnUpdate() bool</text><ellipse cx="12001.5" cy="619.7118" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="564" x="12010.5" y="624.3157">PrepareForUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object)</text><ellipse cx="12001.5" cy="639.9837" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="637" x="12010.5" y="644.5876">ValidateUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) field.ErrorList</text><ellipse cx="12001.5" cy="660.2556" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="623" x="12010.5" y="664.8596">WarningsOnUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) []string</text><ellipse cx="12001.5" cy="680.5275" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="12010.5" y="685.1315">Canonicalize(obj daemonset.Object)</text><ellipse cx="12001.5" cy="700.7994" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="12010.5" y="705.4034">AllowUnconditionalUpdate() bool</text></g><!--MD5=[ba7afbcd73d7baf7d3be2cd0fcc2d66d]
class daemonset.Scoper--><g id="elem_daemonset.Scoper"><rect codeLine="153" fill="#F1F1F1" height="68.2719" id="daemonset.Scoper" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="195" x="11234.5" y="584.532"/><ellipse cx="11305.25" cy="600.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11301.6094,607.032 L11308.3906,607.032 L11308.3906,604.9539 L11306.2344,604.9539 L11306.2344,596.5164 L11308.3906,596.5164 L11308.3906,594.407 L11301.6094,594.407 L11301.6094,596.5164 L11303.7031,596.5164 L11303.7031,604.9539 L11301.6094,604.9539 L11301.6094,607.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="45" x="11325.75" y="606.636">Scoper</text><line style="stroke:#181818;stroke-width:0.5;" x1="11235.5" x2="11428.5" y1="616.532" y2="616.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="11235.5" x2="11428.5" y1="624.532" y2="624.532"/><ellipse cx="11245.5" cy="640.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="11254.5" y="644.7719">NamespaceScoped() bool</text></g><!--MD5=[466ca4b5276e2996571a5dc4673c7a1a]
class daemonset.CategoriesProvider--><g id="elem_daemonset.CategoriesProvider"><rect codeLine="38" fill="#F1F1F1" height="68.2719" id="daemonset.CategoriesProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="157" x="11768.5" y="166.032"/><ellipse cx="11783.5" cy="182.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11779.8594,188.532 L11786.6406,188.532 L11786.6406,186.4539 L11784.4844,186.4539 L11784.4844,178.0164 L11786.6406,178.0164 L11786.6406,175.907 L11779.8594,175.907 L11779.8594,178.0164 L11781.9531,178.0164 L11781.9531,186.4539 L11779.8594,186.4539 L11779.8594,188.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="125" x="11797.5" y="188.136">CategoriesProvider</text><line style="stroke:#181818;stroke-width:0.5;" x1="11769.5" x2="11924.5" y1="198.032" y2="198.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="11769.5" x2="11924.5" y1="206.032" y2="206.032"/><ellipse cx="11779.5" cy="221.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="11788.5" y="226.2719">Categories() []string</text></g><!--MD5=[3ec505ed25fed5b557a05f1c833cc5e0]
class daemonset.CollectionDeleter--><g id="elem_daemonset.CollectionDeleter"><rect codeLine="42" fill="#F1F1F1" height="68.2719" id="daemonset.CollectionDeleter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1143" x="5953.5" y="355.032"/><ellipse cx="6463.75" cy="371.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6460.1094,377.532 L6466.8906,377.532 L6466.8906,375.4539 L6464.7344,375.4539 L6464.7344,367.0164 L6466.8906,367.0164 L6466.8906,364.907 L6460.1094,364.907 L6460.1094,367.0164 L6462.2031,367.0164 L6462.2031,375.4539 L6460.1094,375.4539 L6460.1094,377.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114" x="6484.25" y="377.136">CollectionDeleter</text><line style="stroke:#181818;stroke-width:0.5;" x1="5954.5" x2="7095.5" y1="387.032" y2="387.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="5954.5" x2="7095.5" y1="395.032" y2="395.032"/><ellipse cx="5964.5" cy="410.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1117" x="5973.5" y="415.2719">DeleteCollection(ctx context.Context, deleteValidation ValidateObjectFunc, options *v1.DeleteOptions, listOptions *internalversion.ListOptions) (daemonset.Object, error)</text></g><!--MD5=[f17befa07eac44dbd292f45d1a10afe3]
class daemonset.Connecter--><g id="elem_daemonset.Connecter"><rect codeLine="46" fill="#F1F1F1" height="108.8157" id="daemonset.Connecter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="683" x="12054.5" y="145.532"/><ellipse cx="12357.75" cy="161.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12354.1094,168.032 L12360.8906,168.032 L12360.8906,165.9539 L12358.7344,165.9539 L12358.7344,157.5164 L12360.8906,157.5164 L12360.8906,155.407 L12354.1094,155.407 L12354.1094,157.5164 L12356.2031,157.5164 L12356.2031,165.9539 L12354.1094,165.9539 L12354.1094,168.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="68" x="12378.25" y="167.636">Connecter</text><line style="stroke:#181818;stroke-width:0.5;" x1="12055.5" x2="12736.5" y1="177.532" y2="177.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="12055.5" x2="12736.5" y1="185.532" y2="185.532"/><ellipse cx="12065.5" cy="201.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="657" x="12074.5" y="205.7719">Connect(ctx context.Context, id string, options daemonset.Object, r Responder) (http.Handler, error)</text><ellipse cx="12065.5" cy="221.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="362" x="12074.5" y="226.0438">NewConnectOptions() (daemonset.Object, bool, string)</text><ellipse cx="12065.5" cy="241.7118" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="12074.5" y="246.3157">ConnectMethods() []string</text></g><!--MD5=[de8e371ae5c32f4f3e053e39361d3fbd]
class daemonset.CreateUpdateResetFieldsStrategy--><g id="elem_daemonset.CreateUpdateResetFieldsStrategy"><rect codeLine="52" fill="#F1F1F1" height="48" id="daemonset.CreateUpdateResetFieldsStrategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="255" x="9575.5" y="895.032"/><ellipse cx="9590.5" cy="911.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9586.8594,917.532 L9593.6406,917.532 L9593.6406,915.4539 L9591.4844,915.4539 L9591.4844,907.0164 L9593.6406,907.0164 L9593.6406,904.907 L9586.8594,904.907 L9586.8594,907.0164 L9588.9531,907.0164 L9588.9531,915.4539 L9586.8594,915.4539 L9586.8594,917.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="223" x="9604.5" y="917.136">CreateUpdateResetFieldsStrategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="9576.5" x2="9829.5" y1="927.032" y2="927.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="9576.5" x2="9829.5" y1="935.032" y2="935.032"/></g><!--MD5=[3d81ce5649b5da933c1e65058b728bdd]
class daemonset.Creater--><g id="elem_daemonset.Creater"><rect codeLine="54" fill="#F1F1F1" height="88.5438" id="daemonset.Creater" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="960" x="4307" y="155.532"/><ellipse cx="4758.75" cy="171.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4755.1094,178.032 L4761.8906,178.032 L4761.8906,175.9539 L4759.7344,175.9539 L4759.7344,167.5164 L4761.8906,167.5164 L4761.8906,165.407 L4755.1094,165.407 L4755.1094,167.5164 L4757.2031,167.5164 L4757.2031,175.9539 L4755.1094,175.9539 L4755.1094,178.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="48" x="4779.25" y="177.636">Creater</text><line style="stroke:#181818;stroke-width:0.5;" x1="4308" x2="5266" y1="187.532" y2="187.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="4308" x2="5266" y1="195.532" y2="195.532"/><ellipse cx="4318" cy="211.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="4327" y="215.7719">New() daemonset.Object</text><ellipse cx="4318" cy="231.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="934" x="4327" y="236.0438">Create(ctx context.Context, obj daemonset.Object, createValidation ValidateObjectFunc, options *v1.CreateOptions) (daemonset.Object, error)</text></g><!--MD5=[f5377d9c4d169ad774b40f0ec558f8e8]
class daemonset.CreaterUpdater--><g id="elem_daemonset.CreaterUpdater"><rect codeLine="59" fill="#F1F1F1" height="68.2719" id="daemonset.CreaterUpdater" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1580" x="3044" y="355.032"/><ellipse cx="3778.75" cy="371.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3775.1094,377.532 L3781.8906,377.532 L3781.8906,375.4539 L3779.7344,375.4539 L3779.7344,367.0164 L3781.8906,367.0164 L3781.8906,364.907 L3775.1094,364.907 L3775.1094,367.0164 L3777.2031,367.0164 L3777.2031,375.4539 L3775.1094,375.4539 L3775.1094,377.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="102" x="3799.25" y="377.136">CreaterUpdater</text><line style="stroke:#181818;stroke-width:0.5;" x1="3045" x2="4623" y1="387.032" y2="387.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="3045" x2="4623" y1="395.032" y2="395.032"/><ellipse cx="3055" cy="410.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1554" x="3064" y="415.2719">Update(ctx context.Context, name string, objInfo UpdatedObjectInfo, createValidation ValidateObjectFunc, updateValidation ValidateObjectUpdateFunc, forceAllowCreate bool, options *v1.UpdateOptions) (daemonset.Object, bool, error)</text></g><!--MD5=[d278b771a53dbd5a745e5d6b27fbc9dd]
class daemonset.Getter--><g id="elem_daemonset.Getter"><rect codeLine="67" fill="#F1F1F1" height="68.2719" id="daemonset.Getter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="605" x="9377.5" y="355.032"/><ellipse cx="9655.25" cy="371.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9651.6094,377.532 L9658.3906,377.532 L9658.3906,375.4539 L9656.2344,375.4539 L9656.2344,367.0164 L9658.3906,367.0164 L9658.3906,364.907 L9651.6094,364.907 L9651.6094,367.0164 L9653.7031,367.0164 L9653.7031,375.4539 L9651.6094,375.4539 L9651.6094,377.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="41" x="9675.75" y="377.136">Getter</text><line style="stroke:#181818;stroke-width:0.5;" x1="9378.5" x2="9981.5" y1="387.032" y2="387.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="9378.5" x2="9981.5" y1="395.032" y2="395.032"/><ellipse cx="9388.5" cy="410.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="579" x="9397.5" y="415.2719">Get(ctx context.Context, name string, options *v1.GetOptions) (daemonset.Object, error)</text></g><!--MD5=[f56edcd6a803fa204c0a8dfaddaf0935]
class daemonset.GetterWithOptions--><g id="elem_daemonset.GetterWithOptions"><rect codeLine="71" fill="#F1F1F1" height="88.5438" id="daemonset.GetterWithOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="626" x="12773" y="155.532"/><ellipse cx="13020.25" cy="171.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13016.6094,178.032 L13023.3906,178.032 L13023.3906,175.9539 L13021.2344,175.9539 L13021.2344,167.5164 L13023.3906,167.5164 L13023.3906,165.407 L13016.6094,165.407 L13016.6094,167.5164 L13018.7031,167.5164 L13018.7031,175.9539 L13016.6094,175.9539 L13016.6094,178.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="123" x="13040.75" y="177.636">GetterWithOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="12774" x2="13398" y1="187.532" y2="187.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="12774" x2="13398" y1="195.532" y2="195.532"/><ellipse cx="12784" cy="211.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="600" x="12793" y="215.7719">Get(ctx context.Context, name string, options daemonset.Object) (daemonset.Object, error)</text><ellipse cx="12784" cy="231.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="330" x="12793" y="236.0438">NewGetOptions() (daemonset.Object, bool, string)</text></g><!--MD5=[f7dd46c6cc04531cb0f164d79f9ec420]
class daemonset.GracefulDeleter--><g id="elem_daemonset.GracefulDeleter"><rect codeLine="76" fill="#F1F1F1" height="68.2719" id="daemonset.GracefulDeleter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="930" x="8412" y="355.032"/><ellipse cx="8820.75" cy="371.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8817.1094,377.532 L8823.8906,377.532 L8823.8906,375.4539 L8821.7344,375.4539 L8821.7344,367.0164 L8823.8906,367.0164 L8823.8906,364.907 L8817.1094,364.907 L8817.1094,367.0164 L8819.2031,367.0164 L8819.2031,375.4539 L8817.1094,375.4539 L8817.1094,377.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="104" x="8841.25" y="377.136">GracefulDeleter</text><line style="stroke:#181818;stroke-width:0.5;" x1="8413" x2="9341" y1="387.032" y2="387.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="8413" x2="9341" y1="395.032" y2="395.032"/><ellipse cx="8423" cy="410.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="904" x="8432" y="415.2719">Delete(ctx context.Context, name string, deleteValidation ValidateObjectFunc, options *v1.DeleteOptions) (daemonset.Object, bool, error)</text></g><!--MD5=[a3ec45bce68906ae6912f0ed0c79407c]
class daemonset.GroupVersionAcceptor--><g id="elem_daemonset.GroupVersionAcceptor"><rect codeLine="80" fill="#F1F1F1" height="68.2719" id="daemonset.GroupVersionAcceptor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="374" x="13434" y="166.032"/><ellipse cx="13542.75" cy="182.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13539.1094,188.532 L13545.8906,188.532 L13545.8906,186.4539 L13543.7344,186.4539 L13543.7344,178.0164 L13545.8906,178.0164 L13545.8906,175.907 L13539.1094,175.907 L13539.1094,178.0164 L13541.2031,178.0164 L13541.2031,186.4539 L13539.1094,186.4539 L13539.1094,188.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="13563.25" y="188.136">GroupVersionAcceptor</text><line style="stroke:#181818;stroke-width:0.5;" x1="13435" x2="13807" y1="198.032" y2="198.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="13435" x2="13807" y1="206.032" y2="206.032"/><ellipse cx="13445" cy="221.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="348" x="13454" y="226.2719">AcceptsGroupVersion(gv schema.GroupVersion) bool</text></g><!--MD5=[6ccc1e5f614429e4ca7e64fc519334c4]
class daemonset.GroupVersionKindProvider--><g id="elem_daemonset.GroupVersionKindProvider"><rect codeLine="84" fill="#F1F1F1" height="68.2719" id="daemonset.GroupVersionKindProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="575" x="13843.5" y="166.032"/><ellipse cx="14038.75" cy="182.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14035.1094,188.532 L14041.8906,188.532 L14041.8906,186.4539 L14039.7344,186.4539 L14039.7344,178.0164 L14041.8906,178.0164 L14041.8906,175.907 L14035.1094,175.907 L14035.1094,178.0164 L14037.2031,178.0164 L14037.2031,186.4539 L14035.1094,186.4539 L14035.1094,188.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="176" x="14059.25" y="188.136">GroupVersionKindProvider</text><line style="stroke:#181818;stroke-width:0.5;" x1="13844.5" x2="14417.5" y1="198.032" y2="198.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="13844.5" x2="14417.5" y1="206.032" y2="206.032"/><ellipse cx="13854.5" cy="221.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="549" x="13863.5" y="226.2719">GroupVersionKind(containingGV schema.GroupVersion) schema.GroupVersionKind</text></g><!--MD5=[800a9f8e35f271dcfb9b1d0c0a72d699]
class daemonset.KindProvider--><g id="elem_daemonset.KindProvider"><rect codeLine="88" fill="#F1F1F1" height="68.2719" id="daemonset.KindProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="118" x="14454" y="166.032"/><ellipse cx="14469" cy="182.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14465.3594,188.532 L14472.1406,188.532 L14472.1406,186.4539 L14469.9844,186.4539 L14469.9844,178.0164 L14472.1406,178.0164 L14472.1406,175.907 L14465.3594,175.907 L14465.3594,178.0164 L14467.4531,178.0164 L14467.4531,186.4539 L14465.3594,186.4539 L14465.3594,188.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="86" x="14483" y="188.136">KindProvider</text><line style="stroke:#181818;stroke-width:0.5;" x1="14455" x2="14571" y1="198.032" y2="198.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="14455" x2="14571" y1="206.032" y2="206.032"/><ellipse cx="14465" cy="221.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="14474" y="226.2719">Kind() string</text></g><!--MD5=[0206339b0d05ba946be25413469ab989]
class daemonset.Lister--><g id="elem_daemonset.Lister"><rect codeLine="92" fill="#F1F1F1" height="88.5438" id="daemonset.Lister" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="606" x="7771" y="344.532"/><ellipse cx="8051.25" cy="360.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8047.6094,367.032 L8054.3906,367.032 L8054.3906,364.9539 L8052.2344,364.9539 L8052.2344,356.5164 L8054.3906,356.5164 L8054.3906,354.407 L8047.6094,354.407 L8047.6094,356.5164 L8049.7031,356.5164 L8049.7031,364.9539 L8047.6094,364.9539 L8047.6094,367.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="37" x="8071.75" y="366.636">Lister</text><line style="stroke:#181818;stroke-width:0.5;" x1="7772" x2="8376" y1="376.532" y2="376.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="7772" x2="8376" y1="384.532" y2="384.532"/><ellipse cx="7782" cy="400.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="7791" y="404.7719">NewList() daemonset.Object</text><ellipse cx="7782" cy="420.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="580" x="7791" y="425.0438">List(ctx context.Context, options *internalversion.ListOptions) (daemonset.Object, error)</text></g><!--MD5=[7ac92b0b7d8239dad7e0c19a75a8fcb7]
class daemonset.MayReturnFullObjectDeleter--><g id="elem_daemonset.MayReturnFullObjectDeleter"><rect codeLine="97" fill="#F1F1F1" height="68.2719" id="daemonset.MayReturnFullObjectDeleter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="258" x="14607" y="166.032"/><ellipse cx="14639.55" cy="182.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14635.9094,188.532 L14642.6906,188.532 L14642.6906,186.4539 L14640.5344,186.4539 L14640.5344,178.0164 L14642.6906,178.0164 L14642.6906,175.907 L14635.9094,175.907 L14635.9094,178.0164 L14638.0031,178.0164 L14638.0031,186.4539 L14635.9094,186.4539 L14635.9094,188.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="187" x="14657.45" y="188.136">MayReturnFullObjectDeleter</text><line style="stroke:#181818;stroke-width:0.5;" x1="14608" x2="14864" y1="198.032" y2="198.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="14608" x2="14864" y1="206.032" y2="206.032"/><ellipse cx="14618" cy="221.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="14627" y="226.2719">DeleteReturnsDeletedObject() bool</text></g><!--MD5=[aa98e7896c62adb7d02c01ae3cfdcc5c]
class daemonset.NamedCreater--><g id="elem_daemonset.NamedCreater"><rect codeLine="101" fill="#F1F1F1" height="88.5438" id="daemonset.NamedCreater" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1046" x="11873" y="344.532"/><ellipse cx="12343.75" cy="360.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12340.1094,367.032 L12346.8906,367.032 L12346.8906,364.9539 L12344.7344,364.9539 L12344.7344,356.5164 L12346.8906,356.5164 L12346.8906,354.407 L12340.1094,354.407 L12340.1094,356.5164 L12342.2031,356.5164 L12342.2031,364.9539 L12340.1094,364.9539 L12340.1094,367.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="96" x="12364.25" y="366.636">NamedCreater</text><line style="stroke:#181818;stroke-width:0.5;" x1="11874" x2="12918" y1="376.532" y2="376.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="11874" x2="12918" y1="384.532" y2="384.532"/><ellipse cx="11884" cy="400.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="11893" y="404.7719">New() daemonset.Object</text><ellipse cx="11884" cy="420.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1020" x="11893" y="425.0438">Create(ctx context.Context, name string, obj daemonset.Object, createValidation ValidateObjectFunc, options *v1.CreateOptions) (daemonset.Object, error)</text></g><!--MD5=[5afc60e7992ebf9f9265f35398d99800]
class daemonset.Patcher--><g id="elem_daemonset.Patcher"><rect codeLine="110" fill="#F1F1F1" height="48" id="daemonset.Patcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="83" x="9059.5" y="594.532"/><ellipse cx="9074.5" cy="610.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9070.8594,617.032 L9077.6406,617.032 L9077.6406,614.9539 L9075.4844,614.9539 L9075.4844,606.5164 L9077.6406,606.5164 L9077.6406,604.407 L9070.8594,604.407 L9070.8594,606.5164 L9072.9531,606.5164 L9072.9531,614.9539 L9070.8594,614.9539 L9070.8594,617.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="51" x="9088.5" y="616.636">Patcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="9060.5" x2="9141.5" y1="626.532" y2="626.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="9060.5" x2="9141.5" y1="634.532" y2="634.532"/></g><!--MD5=[3e1df7ae043ca9acb64f3e424040fa35]
class daemonset.RESTDeleteStrategy--><g id="elem_daemonset.RESTDeleteStrategy"><rect codeLine="120" fill="#F1F1F1" height="48" id="daemonset.RESTDeleteStrategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="162" x="12954" y="365.032"/><ellipse cx="12969" cy="381.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12965.3594,387.532 L12972.1406,387.532 L12972.1406,385.4539 L12969.9844,385.4539 L12969.9844,377.0164 L12972.1406,377.0164 L12972.1406,374.907 L12965.3594,374.907 L12965.3594,377.0164 L12967.4531,377.0164 L12967.4531,385.4539 L12965.3594,385.4539 L12965.3594,387.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="130" x="12983" y="387.136">RESTDeleteStrategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="12955" x2="13115" y1="397.032" y2="397.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="12955" x2="13115" y1="405.032" y2="405.032"/></g><!--MD5=[0a750c4eb7241bdab4b8b1404fd70644]
class daemonset.RESTGracefulDeleteStrategy--><g id="elem_daemonset.RESTGracefulDeleteStrategy"><rect codeLine="122" fill="#F1F1F1" height="68.2719" id="daemonset.RESTGracefulDeleteStrategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="668" x="13151" y="355.032"/><ellipse cx="13387.75" cy="371.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13384.1094,377.532 L13390.8906,377.532 L13390.8906,375.4539 L13388.7344,375.4539 L13388.7344,367.0164 L13390.8906,367.0164 L13390.8906,364.907 L13384.1094,364.907 L13384.1094,367.0164 L13386.2031,367.0164 L13386.2031,375.4539 L13384.1094,375.4539 L13384.1094,377.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="186" x="13408.25" y="377.136">RESTGracefulDeleteStrategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="13152" x2="13818" y1="387.032" y2="387.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="13152" x2="13818" y1="395.032" y2="395.032"/><ellipse cx="13162" cy="410.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="642" x="13171" y="415.2719">CheckGracefulDelete(ctx context.Context, obj daemonset.Object, options *v1.DeleteOptions) bool</text></g><!--MD5=[cc0d2c899a0489cf999b25da18d93d25]
class daemonset.Redirector--><g id="elem_daemonset.Redirector"><rect codeLine="136" fill="#F1F1F1" height="68.2719" id="daemonset.Redirector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="579" x="13854.5" y="355.032"/><ellipse cx="14105.75" cy="371.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14102.1094,377.532 L14108.8906,377.532 L14108.8906,375.4539 L14106.7344,375.4539 L14106.7344,367.0164 L14108.8906,367.0164 L14108.8906,364.907 L14102.1094,364.907 L14102.1094,367.0164 L14104.2031,367.0164 L14104.2031,375.4539 L14102.1094,375.4539 L14102.1094,377.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="68" x="14126.25" y="377.136">Redirector</text><line style="stroke:#181818;stroke-width:0.5;" x1="13855.5" x2="14432.5" y1="387.032" y2="387.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="13855.5" x2="14432.5" y1="395.032" y2="395.032"/><ellipse cx="13865.5" cy="410.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="553" x="13874.5" y="415.2719">ResourceLocation(ctx context.Context, id string) (*url.URL, http.RoundTripper, error)</text></g><!--MD5=[5d477799585bb15e4fa66fb912c7d3f2]
class daemonset.ResourceStreamer--><g id="elem_daemonset.ResourceStreamer"><rect codeLine="144" fill="#F1F1F1" height="68.2719" id="daemonset.ResourceStreamer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="726" x="14469" y="355.032"/><ellipse cx="14767.25" cy="371.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14763.6094,377.532 L14770.3906,377.532 L14770.3906,375.4539 L14768.2344,375.4539 L14768.2344,367.0164 L14770.3906,367.0164 L14770.3906,364.907 L14763.6094,364.907 L14763.6094,367.0164 L14765.7031,367.0164 L14765.7031,375.4539 L14763.6094,375.4539 L14763.6094,377.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="121" x="14787.75" y="377.136">ResourceStreamer</text><line style="stroke:#181818;stroke-width:0.5;" x1="14470" x2="15194" y1="387.032" y2="387.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="14470" x2="15194" y1="395.032" y2="395.032"/><ellipse cx="14480" cy="410.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="700" x="14489" y="415.2719">InputStream(ctx context.Context, apiVersion string, acceptHeader string) (io.ReadCloser, bool, string, error)</text></g><!--MD5=[951c6d63a7608c11df2ffa47bc123d60]
class daemonset.Responder--><g id="elem_daemonset.Responder"><rect codeLine="148" fill="#F1F1F1" height="88.5438" id="daemonset.Responder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="328" x="15230" y="344.532"/><ellipse cx="15353.75" cy="360.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M15350.1094,367.032 L15356.8906,367.032 L15356.8906,364.9539 L15354.7344,364.9539 L15354.7344,356.5164 L15356.8906,356.5164 L15356.8906,354.407 L15350.1094,354.407 L15350.1094,356.5164 L15352.2031,356.5164 L15352.2031,364.9539 L15350.1094,364.9539 L15350.1094,367.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="72" x="15374.25" y="366.636">Responder</text><line style="stroke:#181818;stroke-width:0.5;" x1="15231" x2="15557" y1="376.532" y2="376.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="15231" x2="15557" y1="384.532" y2="384.532"/><ellipse cx="15241" cy="400.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="302" x="15250" y="404.7719">Object(statusCode int, obj daemonset.Object)</text><ellipse cx="15241" cy="420.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="15250" y="425.0438">Error(err error)</text></g><!--MD5=[48669bf59dbed2d72bf97336d73ac29a]
class daemonset.ShortNamesProvider--><g id="elem_daemonset.ShortNamesProvider"><rect codeLine="157" fill="#F1F1F1" height="68.2719" id="daemonset.ShortNamesProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="168" x="11565" y="166.032"/><ellipse cx="11580" cy="182.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11576.3594,188.532 L11583.1406,188.532 L11583.1406,186.4539 L11580.9844,186.4539 L11580.9844,178.0164 L11583.1406,178.0164 L11583.1406,175.907 L11576.3594,175.907 L11576.3594,178.0164 L11578.4531,178.0164 L11578.4531,186.4539 L11576.3594,186.4539 L11576.3594,188.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="136" x="11594" y="188.136">ShortNamesProvider</text><line style="stroke:#181818;stroke-width:0.5;" x1="11566" x2="11732" y1="198.032" y2="198.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="11566" x2="11732" y1="206.032" y2="206.032"/><ellipse cx="11576" cy="221.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="11585" y="226.2719">ShortNames() []string</text></g><!--MD5=[05d4d195c787f7cb8ca29a89f73bb8ea]
class daemonset.SingularNameProvider--><g id="elem_daemonset.SingularNameProvider"><rect codeLine="161" fill="#F1F1F1" height="68.2719" id="daemonset.SingularNameProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="12689" y="584.532"/><ellipse cx="12709.85" cy="600.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12706.2094,607.032 L12712.9906,607.032 L12712.9906,604.9539 L12710.8344,604.9539 L12710.8344,596.5164 L12712.9906,596.5164 L12712.9906,594.407 L12706.2094,594.407 L12706.2094,596.5164 L12708.3031,596.5164 L12708.3031,604.9539 L12706.2094,604.9539 L12706.2094,607.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="149" x="12725.15" y="606.636">SingularNameProvider</text><line style="stroke:#181818;stroke-width:0.5;" x1="12690" x2="12882" y1="616.532" y2="616.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="12690" x2="12882" y1="624.532" y2="624.532"/><ellipse cx="12700" cy="640.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="12709" y="644.7719">GetSingularName() string</text></g><!--MD5=[0a5f85442f6546ad3d19d0e2cf856739]
class daemonset.StandardStorage--><g id="elem_daemonset.StandardStorage"><rect codeLine="165" fill="#F1F1F1" height="68.2719" id="daemonset.StandardStorage" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="143" x="8281.5" y="584.532"/><ellipse cx="8296.5" cy="600.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8292.8594,607.032 L8299.6406,607.032 L8299.6406,604.9539 L8297.4844,604.9539 L8297.4844,596.5164 L8299.6406,596.5164 L8299.6406,594.407 L8292.8594,594.407 L8292.8594,596.5164 L8294.9531,596.5164 L8294.9531,604.9539 L8292.8594,604.9539 L8292.8594,607.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="111" x="8310.5" y="606.636">StandardStorage</text><line style="stroke:#181818;stroke-width:0.5;" x1="8282.5" x2="8423.5" y1="616.532" y2="616.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="8282.5" x2="8423.5" y1="624.532" y2="624.532"/><ellipse cx="8292.5" cy="640.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="8301.5" y="644.7719">Destroy()</text></g><!--MD5=[674009f326d9027fff99722c5137f7b6]
class daemonset.Storage--><g id="elem_daemonset.Storage"><rect codeLine="169" fill="#F1F1F1" height="88.5438" id="daemonset.Storage" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="190" x="8019" y="574.032"/><ellipse cx="8084.75" cy="590.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8081.1094,596.532 L8087.8906,596.532 L8087.8906,594.4539 L8085.7344,594.4539 L8085.7344,586.0164 L8087.8906,586.0164 L8087.8906,583.907 L8081.1094,583.907 L8081.1094,586.0164 L8083.2031,586.0164 L8083.2031,594.4539 L8081.1094,594.4539 L8081.1094,596.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="50" x="8105.25" y="596.136">Storage</text><line style="stroke:#181818;stroke-width:0.5;" x1="8020" x2="8208" y1="606.032" y2="606.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="8020" x2="8208" y1="614.032" y2="614.032"/><ellipse cx="8030" cy="629.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="8039" y="634.2719">New() daemonset.Object</text><ellipse cx="8030" cy="649.9398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="8039" y="654.5438">Destroy()</text></g><!--MD5=[50a1a0569c50cb62b04026d8cc6285c0]
class daemonset.StorageMetadata--><g id="elem_daemonset.StorageMetadata"><rect codeLine="174" fill="#F1F1F1" height="88.5438" id="daemonset.StorageMetadata" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="292" x="12918" y="574.032"/><ellipse cx="13003.75" cy="590.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13000.1094,596.532 L13006.8906,596.532 L13006.8906,594.4539 L13004.7344,594.4539 L13004.7344,586.0164 L13006.8906,586.0164 L13006.8906,583.907 L13000.1094,583.907 L13000.1094,586.0164 L13002.2031,586.0164 L13002.2031,594.4539 L13000.1094,594.4539 L13000.1094,596.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="112" x="13024.25" y="596.136">StorageMetadata</text><line style="stroke:#181818;stroke-width:0.5;" x1="12919" x2="13209" y1="606.032" y2="606.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="12919" x2="13209" y1="614.032" y2="614.032"/><ellipse cx="12929" cy="629.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266" x="12938" y="634.2719">ProducesMIMETypes(verb string) []string</text><ellipse cx="12929" cy="649.9398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="12938" y="654.5438">ProducesObject(verb string)</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="13126" y="654.5438">interface</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="13185" y="654.5438">{}</text></g><!--MD5=[26998b463f29c3f7845e998b240e2d5d]
class daemonset.StorageVersionProvider--><g id="elem_daemonset.StorageVersionProvider"><rect codeLine="179" fill="#F1F1F1" height="68.2719" id="daemonset.StorageVersionProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="320" x="13245" y="584.532"/><ellipse cx="13323.75" cy="600.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13320.1094,607.032 L13326.8906,607.032 L13326.8906,604.9539 L13324.7344,604.9539 L13324.7344,596.5164 L13326.8906,596.5164 L13326.8906,594.407 L13320.1094,594.407 L13320.1094,596.5164 L13322.2031,596.5164 L13322.2031,604.9539 L13320.1094,604.9539 L13320.1094,607.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="154" x="13344.25" y="606.636">StorageVersionProvider</text><line style="stroke:#181818;stroke-width:0.5;" x1="13246" x2="13564" y1="616.532" y2="616.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="13246" x2="13564" y1="624.532" y2="624.532"/><ellipse cx="13256" cy="640.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="294" x="13265" y="644.7719">StorageVersion() daemonset.GroupVersioner</text></g><!--MD5=[86e3270c3c8b62360e2ba28955d7d3a7]
class daemonset.TableConvertor--><g id="elem_daemonset.TableConvertor"><rect codeLine="183" fill="#F1F1F1" height="68.2719" id="daemonset.TableConvertor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="771" x="9223.5" y="166.032"/><ellipse cx="9554.25" cy="182.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9550.6094,188.532 L9557.3906,188.532 L9557.3906,186.4539 L9555.2344,186.4539 L9555.2344,178.0164 L9557.3906,178.0164 L9557.3906,175.907 L9550.6094,175.907 L9550.6094,178.0164 L9552.7031,178.0164 L9552.7031,186.4539 L9550.6094,186.4539 L9550.6094,188.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="101" x="9574.75" y="188.136">TableConvertor</text><line style="stroke:#181818;stroke-width:0.5;" x1="9224.5" x2="9993.5" y1="198.032" y2="198.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="9224.5" x2="9993.5" y1="206.032" y2="206.032"/><ellipse cx="9234.5" cy="221.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="745" x="9243.5" y="226.2719">ConvertToTable(ctx context.Context, object daemonset.Object, tableOptions daemonset.Object) (*v1.Table, error)</text></g><!--MD5=[9902a584fe2061bb9d29c9021aebd13f]
class daemonset.UpdateResetFieldsStrategy--><g id="elem_daemonset.UpdateResetFieldsStrategy"><rect codeLine="187" fill="#F1F1F1" height="48" id="daemonset.UpdateResetFieldsStrategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="212" x="11521" y="895.032"/><ellipse cx="11536" cy="911.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11532.3594,917.532 L11539.1406,917.532 L11539.1406,915.4539 L11536.9844,915.4539 L11536.9844,907.0164 L11539.1406,907.0164 L11539.1406,904.907 L11532.3594,904.907 L11532.3594,907.0164 L11534.4531,907.0164 L11534.4531,915.4539 L11532.3594,915.4539 L11532.3594,917.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="180" x="11550" y="917.136">UpdateResetFieldsStrategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="11522" x2="11732" y1="927.032" y2="927.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="11522" x2="11732" y1="935.032" y2="935.032"/></g><!--MD5=[55835910a1bb1085e22c21fa6265df87]
class daemonset.UpdatedObjectInfo--><g id="elem_daemonset.UpdatedObjectInfo"><rect codeLine="189" fill="#F1F1F1" height="88.5438" id="daemonset.UpdatedObjectInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="612" x="5304" y="155.532"/><ellipse cx="5542.25" cy="171.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5538.6094,178.032 L5545.3906,178.032 L5545.3906,175.9539 L5543.2344,175.9539 L5543.2344,167.5164 L5545.3906,167.5164 L5545.3906,165.407 L5538.6094,165.407 L5538.6094,167.5164 L5540.7031,167.5164 L5540.7031,175.9539 L5538.6094,175.9539 L5538.6094,178.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="127" x="5562.75" y="177.636">UpdatedObjectInfo</text><line style="stroke:#181818;stroke-width:0.5;" x1="5305" x2="5915" y1="187.532" y2="187.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="5305" x2="5915" y1="195.532" y2="195.532"/><ellipse cx="5315" cy="211.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="5324" y="215.7719">Preconditions() *v1.Preconditions</text><ellipse cx="5315" cy="231.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="586" x="5324" y="236.0438">UpdatedObject(ctx context.Context, oldObj daemonset.Object) (daemonset.Object, error)</text></g><!--MD5=[d393adfe0c03d2f45749b36d241dfc6b]
class daemonset.Updater--><g id="elem_daemonset.Updater"><rect codeLine="194" fill="#F1F1F1" height="88.5438" id="daemonset.Updater" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1580" x="10018" y="344.532"/><ellipse cx="10776.75" cy="360.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10773.1094,367.032 L10779.8906,367.032 L10779.8906,364.9539 L10777.7344,364.9539 L10777.7344,356.5164 L10779.8906,356.5164 L10779.8906,354.407 L10773.1094,354.407 L10773.1094,356.5164 L10775.2031,356.5164 L10775.2031,364.9539 L10773.1094,364.9539 L10773.1094,367.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="54" x="10797.25" y="366.636">Updater</text><line style="stroke:#181818;stroke-width:0.5;" x1="10019" x2="11597" y1="376.532" y2="376.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="10019" x2="11597" y1="384.532" y2="384.532"/><ellipse cx="10029" cy="400.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="10038" y="404.7719">New() daemonset.Object</text><ellipse cx="10029" cy="420.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1554" x="10038" y="425.0438">Update(ctx context.Context, name string, objInfo UpdatedObjectInfo, createValidation ValidateObjectFunc, updateValidation ValidateObjectUpdateFunc, forceAllowCreate bool, options *v1.UpdateOptions) (daemonset.Object, bool, error)</text></g><!--MD5=[6dfe017b97a3f6dd1dc212f36583bae3]
class daemonset.Watcher--><g id="elem_daemonset.Watcher"><rect codeLine="199" fill="#F1F1F1" height="68.2719" id="daemonset.Watcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="604" x="7132" y="355.032"/><ellipse cx="7402.75" cy="371.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7399.1094,377.532 L7405.8906,377.532 L7405.8906,375.4539 L7403.7344,375.4539 L7403.7344,367.0164 L7405.8906,367.0164 L7405.8906,364.907 L7399.1094,364.907 L7399.1094,367.0164 L7401.2031,367.0164 L7401.2031,375.4539 L7399.1094,375.4539 L7399.1094,377.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="54" x="7423.25" y="377.136">Watcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="7133" x2="7735" y1="387.032" y2="387.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="7133" x2="7735" y1="395.032" y2="395.032"/><ellipse cx="7143" cy="410.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="578" x="7152" y="415.2719">Watch(ctx context.Context, options *internalversion.ListOptions) (watch.Interface, error)</text></g><!--MD5=[e21cd9b7f575b34b05338a4f0e62da27]
class daemonset.defaultUpdatedObjectInfo--><g id="elem_daemonset.defaultUpdatedObjectInfo"><rect codeLine="203" fill="#F1F1F1" height="129.0876" id="daemonset.defaultUpdatedObjectInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="612" x="4659" y="324.532"/><ellipse cx="4873.25" cy="340.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4873.4375,347.2351 C4875.7344,347.2351 4877.1875,345.6101 4877.1875,343.6101 C4877.1875,341.782 4876.3594,340.9382 4875.2188,340.1414 L4874.2031,339.4226 C4873.0781,338.6101 4872.6563,338.3132 4872.6563,337.4539 C4872.6563,336.7664 4873.1406,336.3601 4873.7188,336.3601 C4874.4531,336.3601 4874.9375,336.7507 4875.6406,337.3914 L4876.9531,335.8132 C4875.9844,334.7976 4874.9688,334.2039 4873.7031,334.2039 C4871.5625,334.2039 4870.1094,335.7195 4870.1094,337.6414 C4870.1094,339.4382 4871.0313,340.3445 4872.125,341.0945 L4873.2188,341.8445 C4874.1563,342.4539 4874.6094,343.032 4874.6094,343.9695 C4874.6094,344.6414 4874.1406,345.0632 4873.4375,345.0632 C4872.7344,345.0632 4871.9844,344.5476 4871.3281,343.7195 L4869.7813,345.407 C4870.8125,346.5945 4872.1094,347.2351 4873.4375,347.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="4893.75" y="346.636">defaultUpdatedObjectInfo</text><line style="stroke:#181818;stroke-width:0.5;" x1="4660" x2="5270" y1="356.532" y2="356.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4667" y="369.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="4679" y="376.7719">obj daemonset.Object</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4667" y="389.4398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="4679" y="397.0438">transformers []TransformFunc</text><line style="stroke:#181818;stroke-width:0.5;" x1="4660" x2="5270" y1="405.0758" y2="405.0758"/><ellipse cx="4670" cy="420.7118" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="4679" y="425.3157">Preconditions() *v1.Preconditions</text><ellipse cx="4670" cy="440.9837" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="586" x="4679" y="445.5876">UpdatedObject(ctx context.Context, oldObj daemonset.Object) (daemonset.Object, error)</text></g><!--MD5=[b36593da7fcf5c426bafeb6740286fbe]
class daemonset.GarbageCollectionPolicy--><g id="elem_daemonset.GarbageCollectionPolicy"><rect codeLine="211" fill="#F1F1F1" height="48" id="daemonset.GarbageCollectionPolicy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="193" x="4078.5" y="176.032"/><ellipse cx="4093.5" cy="192.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4092.2344,199.032 L4094.7813,199.032 L4094.7813,188.5164 L4097.4063,188.5164 L4097.4063,186.407 L4089.5938,186.407 L4089.5938,188.5164 L4092.2344,188.5164 L4092.2344,199.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="4107.5" y="198.136">GarbageCollectionPolicy</text><line style="stroke:#181818;stroke-width:0.5;" x1="4079.5" x2="4270.5" y1="208.032" y2="208.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="4079.5" x2="4270.5" y1="216.032" y2="216.032"/></g><!--MD5=[a936a265135bfb01f4d86171b9c1f86f]
class daemonset.TransformFunc--><g id="elem_daemonset.TransformFunc"><rect codeLine="213" fill="#F1F1F1" height="48" id="daemonset.TransformFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="2432.5" y="365.032"/><ellipse cx="2447.5" cy="381.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2446.2344,388.032 L2448.7813,388.032 L2448.7813,377.5164 L2451.4063,377.5164 L2451.4063,375.407 L2443.5938,375.407 L2443.5938,377.5164 L2446.2344,377.5164 L2446.2344,388.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="2461.5" y="387.136">TransformFunc</text><line style="stroke:#181818;stroke-width:0.5;" x1="2433.5" x2="2564.5" y1="397.032" y2="397.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="2433.5" x2="2564.5" y1="405.032" y2="405.032"/></g><!--MD5=[2c793e5c0bc21b9829f51e1bb18e8090]
class daemonset.ValidateObjectFunc--><g id="elem_daemonset.ValidateObjectFunc"><rect codeLine="215" fill="#F1F1F1" height="48" id="daemonset.ValidateObjectFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="162" x="2847" y="365.032"/><ellipse cx="2862" cy="381.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2860.7344,388.032 L2863.2813,388.032 L2863.2813,377.5164 L2865.9063,377.5164 L2865.9063,375.407 L2858.0938,375.407 L2858.0938,377.5164 L2860.7344,377.5164 L2860.7344,388.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="2876" y="387.136">ValidateObjectFunc</text><line style="stroke:#181818;stroke-width:0.5;" x1="2848" x2="3008" y1="397.032" y2="397.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="2848" x2="3008" y1="405.032" y2="405.032"/></g><!--MD5=[28ec63ffb763023f72dcfc2a77b772bc]
class daemonset.ValidateObjectUpdateFunc--><g id="elem_daemonset.ValidateObjectUpdateFunc"><rect codeLine="217" fill="#F1F1F1" height="48" id="daemonset.ValidateObjectUpdateFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="211" x="2600.5" y="365.032"/><ellipse cx="2615.5" cy="381.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2614.2344,388.032 L2616.7813,388.032 L2616.7813,377.5164 L2619.4063,377.5164 L2619.4063,375.407 L2611.5938,375.407 L2611.5938,377.5164 L2614.2344,377.5164 L2614.2344,388.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="2629.5" y="387.136">ValidateObjectUpdateFunc</text><line style="stroke:#181818;stroke-width:0.5;" x1="2601.5" x2="2810.5" y1="397.032" y2="397.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="2601.5" x2="2810.5" y1="405.032" y2="405.032"/></g><!--MD5=[91a041606b4315a6012de5e7d70d1abc]
class daemonset.wrappedUpdatedObjectInfo--><g id="elem_daemonset.wrappedUpdatedObjectInfo"><rect codeLine="219" fill="#F1F1F1" height="129.0876" id="daemonset.wrappedUpdatedObjectInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="612" x="5306" y="324.532"/><ellipse cx="5514.75" cy="340.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5514.9375,347.2351 C5517.2344,347.2351 5518.6875,345.6101 5518.6875,343.6101 C5518.6875,341.782 5517.8594,340.9382 5516.7188,340.1414 L5515.7031,339.4226 C5514.5781,338.6101 5514.1563,338.3132 5514.1563,337.4539 C5514.1563,336.7664 5514.6406,336.3601 5515.2188,336.3601 C5515.9531,336.3601 5516.4375,336.7507 5517.1406,337.3914 L5518.4531,335.8132 C5517.4844,334.7976 5516.4688,334.2039 5515.2031,334.2039 C5513.0625,334.2039 5511.6094,335.7195 5511.6094,337.6414 C5511.6094,339.4382 5512.5313,340.3445 5513.625,341.0945 L5514.7188,341.8445 C5515.6563,342.4539 5516.1094,343.032 5516.1094,343.9695 C5516.1094,344.6414 5515.6406,345.0632 5514.9375,345.0632 C5514.2344,345.0632 5513.4844,344.5476 5512.8281,343.7195 L5511.2813,345.407 C5512.3125,346.5945 5513.6094,347.2351 5514.9375,347.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="5535.25" y="346.636">wrappedUpdatedObjectInfo</text><line style="stroke:#181818;stroke-width:0.5;" x1="5307" x2="5917" y1="356.532" y2="356.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5314" y="369.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="5326" y="376.7719">objInfo UpdatedObjectInfo</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5314" y="389.4398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="5326" y="397.0438">transformers []TransformFunc</text><line style="stroke:#181818;stroke-width:0.5;" x1="5307" x2="5917" y1="405.0758" y2="405.0758"/><ellipse cx="5317" cy="420.7118" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="5326" y="425.3157">Preconditions() *v1.Preconditions</text><ellipse cx="5317" cy="440.9837" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="586" x="5326" y="445.5876">UpdatedObject(ctx context.Context, oldObj daemonset.Object) (daemonset.Object, error)</text></g><!--MD5=[92789aacde18c98ad36c79f2c5b6f026]
class daemonset.fontcolorbluefuncfontcontextContextruntimeObjecterror--><g id="elem_daemonset.fontcolorbluefuncfontcontextContextruntimeObjecterror"><rect codeLine="227" fill="#F1F1F1" height="48" id="daemonset.fontcolorbluefuncfontcontextContextruntimeObjecterror" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="339" x="3704.5" y="176.032"/><ellipse cx="3719.5" cy="192.032" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3719.7344,198.7351 C3720.8906,198.7351 3721.9844,198.2507 3722.8125,197.2195 L3721.3906,195.7039 C3721,196.2507 3720.5313,196.5632 3719.9688,196.5632 C3718.7813,196.5632 3717.7656,195.4226 3717.7656,192.1882 C3717.7656,189.032 3718.8281,187.8601 3719.8594,187.8601 C3720.4531,187.8601 3720.8281,188.157 3721.25,188.657 L3722.6719,187.0945 C3722,186.3445 3721.0313,185.7039 3719.75,185.7039 C3717.3281,185.7039 3715.1875,187.6726 3715.1875,192.2976 C3715.1875,196.9382 3717.3281,198.7351 3719.7344,198.7351 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="3733.5" y="198.136">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="3763.5" y="198.136">(context.Context, daemonset.Object) error</text><line style="stroke:#181818;stroke-width:0.5;" x1="3705.5" x2="4042.5" y1="208.032" y2="208.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="3705.5" x2="4042.5" y1="216.032" y2="216.032"/></g><!--MD5=[aa5c347b5eb5d7b42b2b2c0f2dce2580]
class daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjecterror--><g id="elem_daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjecterror"><rect codeLine="230" fill="#F1F1F1" height="48" id="daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjecterror" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="468" x="3201" y="176.032"/><ellipse cx="3216" cy="192.032" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3216.2344,198.7351 C3217.3906,198.7351 3218.4844,198.2507 3219.3125,197.2195 L3217.8906,195.7039 C3217.5,196.2507 3217.0313,196.5632 3216.4688,196.5632 C3215.2813,196.5632 3214.2656,195.4226 3214.2656,192.1882 C3214.2656,189.032 3215.3281,187.8601 3216.3594,187.8601 C3216.9531,187.8601 3217.3281,188.157 3217.75,188.657 L3219.1719,187.0945 C3218.5,186.3445 3217.5313,185.7039 3216.25,185.7039 C3213.8281,185.7039 3211.6875,187.6726 3211.6875,192.2976 C3211.6875,196.9382 3213.8281,198.7351 3216.2344,198.7351 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="3230" y="198.136">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="406" x="3260" y="198.136">(context.Context, daemonset.Object, daemonset.Object) error</text><line style="stroke:#181818;stroke-width:0.5;" x1="3202" x2="3668" y1="208.032" y2="208.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="3202" x2="3668" y1="216.032" y2="216.032"/></g><!--MD5=[447680de9376a909f45ffeecf0840045]
class daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjectruntimeObjecterror--><g id="elem_daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjectruntimeObjecterror"><rect codeLine="233" fill="#F1F1F1" height="48" id="daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjectruntimeObjecterror" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="607" x="2558.5" y="176.032"/><ellipse cx="2573.5" cy="192.032" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2573.7344,198.7351 C2574.8906,198.7351 2575.9844,198.2507 2576.8125,197.2195 L2575.3906,195.7039 C2575,196.2507 2574.5313,196.5632 2573.9688,196.5632 C2572.7813,196.5632 2571.7656,195.4226 2571.7656,192.1882 C2571.7656,189.032 2572.8281,187.8601 2573.8594,187.8601 C2574.4531,187.8601 2574.8281,188.157 2575.25,188.657 L2576.6719,187.0945 C2576,186.3445 2575.0313,185.7039 2573.75,185.7039 C2571.3281,185.7039 2569.1875,187.6726 2569.1875,192.2976 C2569.1875,196.9382 2571.3281,198.7351 2573.7344,198.7351 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="2587.5" y="198.136">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="545" x="2617.5" y="198.136">(context.Context, daemonset.Object, daemonset.Object) (daemonset.Object, error)</text><line style="stroke:#181818;stroke-width:0.5;" x1="2559.5" x2="3164.5" y1="208.032" y2="208.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="2559.5" x2="3164.5" y1="216.032" y2="216.032"/></g><!--MD5=[bbfdf0c9f5a74864d4935e1321ec51fc]
class daemonset.RESTCreateUpdateStrategy--><g id="elem_daemonset.RESTCreateUpdateStrategy"><rect fill="#F1F1F1" height="48" id="daemonset.RESTCreateUpdateStrategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="211" x="9252.5" y="594.532"/><ellipse cx="9267.5" cy="610.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9267.7344,617.2351 C9268.8906,617.2351 9269.9844,616.7507 9270.8125,615.7195 L9269.3906,614.2039 C9269,614.7507 9268.5313,615.0632 9267.9688,615.0632 C9266.7813,615.0632 9265.7656,613.9226 9265.7656,610.6882 C9265.7656,607.532 9266.8281,606.3601 9267.8594,606.3601 C9268.4531,606.3601 9268.8281,606.657 9269.25,607.157 L9270.6719,605.5945 C9270,604.8445 9269.0313,604.2039 9267.75,604.2039 C9265.3281,604.2039 9263.1875,606.1726 9263.1875,610.7976 C9263.1875,615.4382 9265.3281,617.2351 9267.7344,617.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="9281.5" y="616.636">RESTCreateUpdateStrategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="9253.5" x2="9462.5" y1="626.532" y2="626.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="9253.5" x2="9462.5" y1="634.532" y2="634.532"/></g><!--MD5=[c0326139ba5bf644c44e758f817dfd21]
class daemonset.CacheableObject--><g id="elem_daemonset.CacheableObject"><rect codeLine="256" fill="#F1F1F1" height="88.5438" id="daemonset.CacheableObject" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="551" x="13600.5" y="574.032"/><ellipse cx="13815.25" cy="590.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13811.6094,596.532 L13818.3906,596.532 L13818.3906,594.4539 L13816.2344,594.4539 L13816.2344,586.0164 L13818.3906,586.0164 L13818.3906,583.907 L13811.6094,583.907 L13811.6094,586.0164 L13813.7031,586.0164 L13813.7031,594.4539 L13811.6094,594.4539 L13811.6094,596.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="113" x="13835.75" y="596.136">CacheableObject</text><line style="stroke:#181818;stroke-width:0.5;" x1="13601.5" x2="14150.5" y1="606.032" y2="606.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="13601.5" x2="14150.5" y1="614.032" y2="614.032"/><ellipse cx="13611.5" cy="629.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="13620.5" y="634.2719">CacheEncode(id Identifier, encode</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="13851.5" y="634.2719">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="13881.5" y="634.2719">(Object, io.Writer) error, w io.Writer) error</text><ellipse cx="13611.5" cy="649.9398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="13620.5" y="654.5438">GetObject() Object</text></g><!--MD5=[fb63ef1481c1f4f78bba8860d48e70b8]
class daemonset.ClientNegotiator--><g id="elem_daemonset.ClientNegotiator"><rect codeLine="261" fill="#F1F1F1" height="108.8157" id="daemonset.ClientNegotiator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="666" x="14187" y="564.032"/><ellipse cx="14461.75" cy="580.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14458.1094,586.532 L14464.8906,586.532 L14464.8906,584.4539 L14462.7344,584.4539 L14462.7344,576.0164 L14464.8906,576.0164 L14464.8906,573.907 L14458.1094,573.907 L14458.1094,576.0164 L14460.2031,576.0164 L14460.2031,584.4539 L14458.1094,584.4539 L14458.1094,586.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="108" x="14482.25" y="586.136">ClientNegotiator</text><line style="stroke:#181818;stroke-width:0.5;" x1="14188" x2="14852" y1="596.032" y2="596.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="14188" x2="14852" y1="604.032" y2="604.032"/><ellipse cx="14198" cy="619.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="14207" y="624.2719">Encoder(contentType string, params</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="14450" y="624.2719">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="14480" y="624.2719">[string]string) (Encoder, error)</text><ellipse cx="14198" cy="639.9398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="14207" y="644.5438">Decoder(contentType string, params</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="14451" y="644.5438">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="14481" y="644.5438">[string]string) (Decoder, error)</text><ellipse cx="14198" cy="660.2118" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="14207" y="664.8157">StreamDecoder(contentType string, params</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="14498" y="664.8157">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="319" x="14528" y="664.8157">[string]string) (Decoder, Serializer, Framer, error)</text></g><!--MD5=[9691bdfa88f9bea684255a195ce19061]
class daemonset.Decoder--><g id="elem_daemonset.Decoder"><rect codeLine="267" fill="#F1F1F1" height="68.2719" id="daemonset.Decoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="771" x="1752.5" y="166.032"/><ellipse cx="2106.25" cy="182.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2102.6094,188.532 L2109.3906,188.532 L2109.3906,186.4539 L2107.2344,186.4539 L2107.2344,178.0164 L2109.3906,178.0164 L2109.3906,175.907 L2102.6094,175.907 L2102.6094,178.0164 L2104.7031,178.0164 L2104.7031,186.4539 L2102.6094,186.4539 L2102.6094,188.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="55" x="2126.75" y="188.136">Decoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="1753.5" x2="2522.5" y1="198.032" y2="198.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="1753.5" x2="2522.5" y1="206.032" y2="206.032"/><ellipse cx="1763.5" cy="221.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="745" x="1772.5" y="226.2719">Decode(data []byte, defaults *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)</text></g><!--MD5=[d4bc38207aa9f438f42bb179172e85e6]
class daemonset.Encoder--><g id="elem_daemonset.Encoder"><rect codeLine="271" fill="#F1F1F1" height="88.5438" id="daemonset.Encoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="262" x="1455" y="155.532"/><ellipse cx="1554.75" cy="171.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1551.1094,178.032 L1557.8906,178.032 L1557.8906,175.9539 L1555.7344,175.9539 L1555.7344,167.5164 L1557.8906,167.5164 L1557.8906,165.407 L1551.1094,165.407 L1551.1094,167.5164 L1553.2031,167.5164 L1553.2031,175.9539 L1551.1094,175.9539 L1551.1094,178.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="54" x="1575.25" y="177.636">Encoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="1456" x2="1716" y1="187.532" y2="187.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="1456" x2="1716" y1="195.532" y2="195.532"/><ellipse cx="1466" cy="211.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="1475" y="215.7719">Encode(obj Object, w io.Writer) error</text><ellipse cx="1466" cy="231.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="1475" y="236.0438">Identifier() Identifier</text></g><!--MD5=[2aa799a1340c1a4ac553ad3a6c5e409a]
class daemonset.EncoderWithAllocator--><g id="elem_daemonset.EncoderWithAllocator"><rect codeLine="276" fill="#F1F1F1" height="68.2719" id="daemonset.EncoderWithAllocator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="536" x="1733" y="355.032"/><ellipse cx="1925.75" cy="371.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1922.1094,377.532 L1928.8906,377.532 L1928.8906,375.4539 L1926.7344,375.4539 L1926.7344,367.0164 L1928.8906,367.0164 L1928.8906,364.907 L1922.1094,364.907 L1922.1094,367.0164 L1924.2031,367.0164 L1924.2031,375.4539 L1922.1094,375.4539 L1922.1094,377.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="142" x="1946.25" y="377.136">EncoderWithAllocator</text><line style="stroke:#181818;stroke-width:0.5;" x1="1734" x2="2268" y1="387.032" y2="387.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="1734" x2="2268" y1="395.032" y2="395.032"/><ellipse cx="1744" cy="410.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="510" x="1753" y="415.2719">EncodeWithAllocator(obj Object, w io.Writer, memAlloc MemoryAllocator) error</text></g><!--MD5=[e7a37a79a9db2010f9c3aded4b179c3c]
class daemonset.EquivalentResourceMapper--><g id="elem_daemonset.EquivalentResourceMapper"><rect codeLine="280" fill="#F1F1F1" height="88.5438" id="daemonset.EquivalentResourceMapper" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="813" x="606.5" y="155.532"/><ellipse cx="917.75" cy="171.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M914.1094,178.032 L920.8906,178.032 L920.8906,175.9539 L918.7344,175.9539 L918.7344,167.5164 L920.8906,167.5164 L920.8906,165.407 L914.1094,165.407 L914.1094,167.5164 L916.2031,167.5164 L916.2031,175.9539 L914.1094,175.9539 L914.1094,178.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="182" x="938.25" y="177.636">EquivalentResourceMapper</text><line style="stroke:#181818;stroke-width:0.5;" x1="607.5" x2="1418.5" y1="187.532" y2="187.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="607.5" x2="1418.5" y1="195.532" y2="195.532"/><ellipse cx="617.5" cy="211.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="787" x="626.5" y="215.7719">EquivalentResourcesFor(resource schema.GroupVersionResource, subresource string) []schema.GroupVersionResource</text><ellipse cx="617.5" cy="231.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="639" x="626.5" y="236.0438">KindFor(resource schema.GroupVersionResource, subresource string) schema.GroupVersionKind</text></g><!--MD5=[8547438e6ec520480cfbf5278248663f]
class daemonset.EquivalentResourceRegistry--><g id="elem_daemonset.EquivalentResourceRegistry"><rect codeLine="285" fill="#F1F1F1" height="68.2719" id="daemonset.EquivalentResourceRegistry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="756" x="942" y="355.032"/><ellipse cx="1223.25" cy="371.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1219.6094,377.532 L1226.3906,377.532 L1226.3906,375.4539 L1224.2344,375.4539 L1224.2344,367.0164 L1226.3906,367.0164 L1226.3906,364.907 L1219.6094,364.907 L1219.6094,367.0164 L1221.7031,367.0164 L1221.7031,375.4539 L1219.6094,375.4539 L1219.6094,377.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="185" x="1243.75" y="377.136">EquivalentResourceRegistry</text><line style="stroke:#181818;stroke-width:0.5;" x1="943" x2="1697" y1="387.032" y2="387.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="943" x2="1697" y1="395.032" y2="395.032"/><ellipse cx="953" cy="410.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="730" x="962" y="415.2719">RegisterKindFor(resource schema.GroupVersionResource, subresource string, kind schema.GroupVersionKind)</text></g><!--MD5=[fabb5400468452fe522c725410dee75c]
class daemonset.Framer--><g id="elem_daemonset.Framer"><rect codeLine="289" fill="#F1F1F1" height="88.5438" id="daemonset.Framer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="347" x="559.5" y="344.532"/><ellipse cx="705.25" cy="360.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M701.6094,367.032 L708.3906,367.032 L708.3906,364.9539 L706.2344,364.9539 L706.2344,356.5164 L708.3906,356.5164 L708.3906,354.407 L701.6094,354.407 L701.6094,356.5164 L703.7031,356.5164 L703.7031,364.9539 L701.6094,364.9539 L701.6094,367.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="47" x="725.75" y="366.636">Framer</text><line style="stroke:#181818;stroke-width:0.5;" x1="560.5" x2="905.5" y1="376.532" y2="376.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="560.5" x2="905.5" y1="384.532" y2="384.532"/><ellipse cx="570.5" cy="400.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="321" x="579.5" y="404.7719">NewFrameReader(r io.ReadCloser) io.ReadCloser</text><ellipse cx="570.5" cy="420.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="579.5" y="425.0438">NewFrameWriter(w io.Writer) io.Writer</text></g><!--MD5=[e81bd22f320ef860a51ea1ac2017e87d]
class daemonset.GroupVersioner--><g id="elem_daemonset.GroupVersioner"><rect codeLine="294" fill="#F1F1F1" height="88.5438" id="daemonset.GroupVersioner" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="669" x="14888.5" y="574.032"/><ellipse cx="15167.25" cy="590.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M15163.6094,596.532 L15170.3906,596.532 L15170.3906,594.4539 L15168.2344,594.4539 L15168.2344,586.0164 L15170.3906,586.0164 L15170.3906,583.907 L15163.6094,583.907 L15163.6094,586.0164 L15165.7031,586.0164 L15165.7031,594.4539 L15163.6094,594.4539 L15163.6094,596.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="15187.75" y="596.136">GroupVersioner</text><line style="stroke:#181818;stroke-width:0.5;" x1="14889.5" x2="15556.5" y1="606.032" y2="606.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="14889.5" x2="15556.5" y1="614.032" y2="614.032"/><ellipse cx="14899.5" cy="629.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="643" x="14908.5" y="634.2719">KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)</text><ellipse cx="14899.5" cy="649.9398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="14908.5" y="654.5438">Identifier() string</text></g><!--MD5=[b24bb44ea704bb6e5659f29cafe75a77]
class daemonset.MemoryAllocator--><g id="elem_daemonset.MemoryAllocator"><rect codeLine="299" fill="#F1F1F1" height="68.2719" id="daemonset.MemoryAllocator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="12693" y="885.032"/><ellipse cx="12727.8" cy="901.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12724.1594,907.532 L12730.9406,907.532 L12730.9406,905.4539 L12728.7844,905.4539 L12728.7844,897.0164 L12730.9406,897.0164 L12730.9406,894.907 L12724.1594,894.907 L12724.1594,897.0164 L12726.2531,897.0164 L12726.2531,905.4539 L12724.1594,905.4539 L12724.1594,907.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="110" x="12746.2" y="907.136">MemoryAllocator</text><line style="stroke:#181818;stroke-width:0.5;" x1="12694" x2="12878" y1="917.032" y2="917.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="12694" x2="12878" y1="925.032" y2="925.032"/><ellipse cx="12704" cy="940.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="12713" y="945.2719">Allocate(n uint64) []byte</text></g><!--MD5=[f47c229bc50c0465faff7dac7496a7dd]
class daemonset.Namer--><g id="elem_daemonset.Namer"><rect codeLine="303" fill="#F1F1F1" height="88.5438" id="daemonset.Namer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="270" x="12914" y="874.532"/><ellipse cx="13022.75" cy="890.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13019.1094,897.032 L13025.8906,897.032 L13025.8906,894.9539 L13023.7344,894.9539 L13023.7344,886.5164 L13025.8906,886.5164 L13025.8906,884.407 L13019.1094,884.407 L13019.1094,886.5164 L13021.2031,886.5164 L13021.2031,894.9539 L13019.1094,894.9539 L13019.1094,897.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="44" x="13043.25" y="896.636">Namer</text><line style="stroke:#181818;stroke-width:0.5;" x1="12915" x2="13183" y1="906.532" y2="906.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="12915" x2="13183" y1="914.532" y2="914.532"/><ellipse cx="12925" cy="930.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="12934" y="934.7719">Name(obj Object) (string, error)</text><ellipse cx="12925" cy="950.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="12934" y="955.0438">Namespace(obj Object) (string, error)</text></g><!--MD5=[e69c41adf8ce5fe538a35f2a6d7691ae]
class daemonset.NegotiatedSerializer--><g id="elem_daemonset.NegotiatedSerializer"><rect codeLine="308" fill="#F1F1F1" height="108.8157" id="daemonset.NegotiatedSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="462" x="13219" y="864.532"/><ellipse cx="13378.75" cy="880.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13375.1094,887.032 L13381.8906,887.032 L13381.8906,884.9539 L13379.7344,884.9539 L13379.7344,876.5164 L13381.8906,876.5164 L13381.8906,874.407 L13375.1094,874.407 L13375.1094,876.5164 L13377.2031,876.5164 L13377.2031,884.9539 L13375.1094,884.9539 L13375.1094,887.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="134" x="13399.25" y="886.636">NegotiatedSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="13220" x2="13680" y1="896.532" y2="896.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="13220" x2="13680" y1="904.532" y2="904.532"/><ellipse cx="13230" cy="920.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="259" x="13239" y="924.7719">SupportedMediaTypes() []SerializerInfo</text><ellipse cx="13230" cy="940.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="436" x="13239" y="945.0438">EncoderForVersion(serializer Encoder, gv GroupVersioner) Encoder</text><ellipse cx="13230" cy="960.7118" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="434" x="13239" y="965.3157">DecoderToVersion(serializer Decoder, gv GroupVersioner) Decoder</text></g><!--MD5=[6a5d39ff5cc67663d18779927995f542]
class daemonset.NestedObjectDecoder--><g id="elem_daemonset.NestedObjectDecoder"><rect codeLine="314" fill="#F1F1F1" height="68.2719" id="daemonset.NestedObjectDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="284" x="13716" y="885.032"/><ellipse cx="13781.25" cy="901.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13777.6094,907.532 L13784.3906,907.532 L13784.3906,905.4539 L13782.2344,905.4539 L13782.2344,897.0164 L13784.3906,897.0164 L13784.3906,894.907 L13777.6094,894.907 L13777.6094,897.0164 L13779.7031,897.0164 L13779.7031,905.4539 L13777.6094,905.4539 L13777.6094,907.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="145" x="13801.75" y="907.136">NestedObjectDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="13717" x2="13999" y1="917.032" y2="917.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="13717" x2="13999" y1="925.032" y2="925.032"/><ellipse cx="13727" cy="940.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="13736" y="945.2719">DecodeNestedObjects(d Decoder) error</text></g><!--MD5=[496c3b9ec2fe41048029bfcce29600d2]
class daemonset.NestedObjectEncoder--><g id="elem_daemonset.NestedObjectEncoder"><rect codeLine="318" fill="#F1F1F1" height="68.2719" id="daemonset.NestedObjectEncoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="281" x="14035.5" y="885.032"/><ellipse cx="14099.75" cy="901.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14096.1094,907.532 L14102.8906,907.532 L14102.8906,905.4539 L14100.7344,905.4539 L14100.7344,897.0164 L14102.8906,897.0164 L14102.8906,894.907 L14096.1094,894.907 L14096.1094,897.0164 L14098.2031,897.0164 L14098.2031,905.4539 L14096.1094,905.4539 L14096.1094,907.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="144" x="14120.25" y="907.136">NestedObjectEncoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="14036.5" x2="14315.5" y1="917.032" y2="917.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="14036.5" x2="14315.5" y1="925.032" y2="925.032"/><ellipse cx="14046.5" cy="940.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="255" x="14055.5" y="945.2719">EncodeNestedObjects(e Encoder) error</text></g><!--MD5=[826e0e5cdcf5b2b3e46bf45dbe92baf4]
class daemonset.Object--><g id="elem_daemonset.Object"><rect codeLine="322" fill="#F1F1F1" height="88.5438" id="daemonset.Object" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="266" x="305" y="155.532"/><ellipse cx="412.25" cy="171.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M408.6094,178.032 L415.3906,178.032 L415.3906,175.9539 L413.2344,175.9539 L413.2344,167.5164 L415.3906,167.5164 L415.3906,165.407 L408.6094,165.407 L408.6094,167.5164 L410.7031,167.5164 L410.7031,175.9539 L408.6094,175.9539 L408.6094,178.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="43" x="432.75" y="177.636">Object</text><line style="stroke:#181818;stroke-width:0.5;" x1="306" x2="570" y1="187.532" y2="187.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="306" x2="570" y1="195.532" y2="195.532"/><ellipse cx="316" cy="211.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="325" y="215.7719">GetObjectKind() schema.ObjectKind</text><ellipse cx="316" cy="231.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="325" y="236.0438">DeepCopyObject() Object</text></g><!--MD5=[6145f0cec241030055113dc0180d02bc]
class daemonset.ObjectConvertor--><g id="elem_daemonset.ObjectConvertor"><rect codeLine="327" fill="#F1F1F1" height="108.8157" id="daemonset.ObjectConvertor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="659" x="14351.5" y="864.532"/><ellipse cx="14623.25" cy="880.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14619.6094,887.032 L14626.3906,887.032 L14626.3906,884.9539 L14624.2344,884.9539 L14624.2344,876.5164 L14626.3906,876.5164 L14626.3906,874.407 L14619.6094,874.407 L14619.6094,876.5164 L14621.7031,876.5164 L14621.7031,884.9539 L14619.6094,884.9539 L14619.6094,887.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="107" x="14643.75" y="886.636">ObjectConvertor</text><line style="stroke:#181818;stroke-width:0.5;" x1="14352.5" x2="15009.5" y1="896.532" y2="896.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="14352.5" x2="15009.5" y1="904.532" y2="904.532"/><ellipse cx="14362.5" cy="920.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="14371.5" y="924.7719">Convert(in</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="14443.5" y="924.7719">interface</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="14502.5" y="924.7719">{}, out</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="14544.5" y="924.7719">interface</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="14603.5" y="924.7719">{}, context</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="14672.5" y="924.7719">interface</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="49" x="14731.5" y="924.7719">{}) error</text><ellipse cx="14362.5" cy="940.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="407" x="14371.5" y="945.0438">ConvertToVersion(in Object, gv GroupVersioner) (Object, error)</text><ellipse cx="14362.5" cy="960.7118" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="633" x="14371.5" y="965.3157">ConvertFieldLabel(gvk schema.GroupVersionKind, label string, value string) (string, string, error)</text></g><!--MD5=[d9c53e49fb4ccd480afb30c315b57937]
class daemonset.ObjectCreater--><g id="elem_daemonset.ObjectCreater"><rect codeLine="333" fill="#F1F1F1" height="68.2719" id="daemonset.ObjectCreater" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="369" x="12601.5" y="1195.532"/><ellipse cx="12736.25" cy="1211.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12732.6094,1218.032 L12739.3906,1218.032 L12739.3906,1215.9539 L12737.2344,1215.9539 L12737.2344,1207.5164 L12739.3906,1207.5164 L12739.3906,1205.407 L12732.6094,1205.407 L12732.6094,1207.5164 L12734.7031,1207.5164 L12734.7031,1215.9539 L12732.6094,1215.9539 L12732.6094,1218.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="91" x="12756.75" y="1217.636">ObjectCreater</text><line style="stroke:#181818;stroke-width:0.5;" x1="12602.5" x2="12969.5" y1="1227.532" y2="1227.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="12602.5" x2="12969.5" y1="1235.532" y2="1235.532"/><ellipse cx="12612.5" cy="1251.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="12621.5" y="1255.7719">New(kind schema.GroupVersionKind) (Object, error)</text></g><!--MD5=[c0007aa865250800c0a324c0016478bb]
class daemonset.ObjectDefaulter--><g id="elem_daemonset.ObjectDefaulter"><rect codeLine="337" fill="#F1F1F1" height="68.2719" id="daemonset.ObjectDefaulter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="144" x="13006" y="1195.532"/><ellipse cx="13024.15" cy="1211.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13020.5094,1218.032 L13027.2906,1218.032 L13027.2906,1215.9539 L13025.1344,1215.9539 L13025.1344,1207.5164 L13027.2906,1207.5164 L13027.2906,1205.407 L13020.5094,1205.407 L13020.5094,1207.5164 L13022.6031,1207.5164 L13022.6031,1215.9539 L13020.5094,1215.9539 L13020.5094,1218.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="105" x="13038.85" y="1217.636">ObjectDefaulter</text><line style="stroke:#181818;stroke-width:0.5;" x1="13007" x2="13149" y1="1227.532" y2="1227.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="13007" x2="13149" y1="1235.532" y2="1235.532"/><ellipse cx="13017" cy="1251.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="13026" y="1255.7719">Default(in Object)</text></g><!--MD5=[050237a955dc348e6bfbd78cb0abebae]
class daemonset.ObjectVersioner--><g id="elem_daemonset.ObjectVersioner"><rect codeLine="346" fill="#F1F1F1" height="68.2719" id="daemonset.ObjectVersioner" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="433" x="13185.5" y="1195.532"/><ellipse cx="13345.25" cy="1211.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13341.6094,1218.032 L13348.3906,1218.032 L13348.3906,1215.9539 L13346.2344,1215.9539 L13346.2344,1207.5164 L13348.3906,1207.5164 L13348.3906,1205.407 L13341.6094,1205.407 L13341.6094,1207.5164 L13343.7031,1207.5164 L13343.7031,1215.9539 L13341.6094,1215.9539 L13341.6094,1218.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="105" x="13365.75" y="1217.636">ObjectVersioner</text><line style="stroke:#181818;stroke-width:0.5;" x1="13186.5" x2="13617.5" y1="1227.532" y2="1227.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="13186.5" x2="13617.5" y1="1235.532" y2="1235.532"/><ellipse cx="13196.5" cy="1251.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="407" x="13205.5" y="1255.7719">ConvertToVersion(in Object, gv GroupVersioner) (Object, error)</text></g><!--MD5=[44ac56512ca556fe2f6e50992eb80031]
class daemonset.ParameterCodec--><g id="elem_daemonset.ParameterCodec"><rect codeLine="350" fill="#F1F1F1" height="88.5438" id="daemonset.ParameterCodec" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="607" x="13653.5" y="1185.032"/><ellipse cx="13897.75" cy="1201.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13894.1094,1207.532 L13900.8906,1207.532 L13900.8906,1205.4539 L13898.7344,1205.4539 L13898.7344,1197.0164 L13900.8906,1197.0164 L13900.8906,1194.907 L13894.1094,1194.907 L13894.1094,1197.0164 L13896.2031,1197.0164 L13896.2031,1205.4539 L13894.1094,1205.4539 L13894.1094,1207.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="110" x="13918.25" y="1207.136">ParameterCodec</text><line style="stroke:#181818;stroke-width:0.5;" x1="13654.5" x2="14259.5" y1="1217.032" y2="1217.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="13654.5" x2="14259.5" y1="1225.032" y2="1225.032"/><ellipse cx="13664.5" cy="1240.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="581" x="13673.5" y="1245.2719">DecodeParameters(parameters url.Values, from schema.GroupVersion, into Object) error</text><ellipse cx="13664.5" cy="1260.9398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="488" x="13673.5" y="1265.5438">EncodeParameters(obj Object, to schema.GroupVersion) (url.Values, error)</text></g><!--MD5=[7cc79b558e3dfda6403a6e7202cd83cf]
class daemonset.ResourceVersioner--><g id="elem_daemonset.ResourceVersioner"><rect codeLine="355" fill="#F1F1F1" height="88.5438" id="daemonset.ResourceVersioner" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="364" x="14296" y="1185.032"/><ellipse cx="14412.25" cy="1201.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14408.6094,1207.532 L14415.3906,1207.532 L14415.3906,1205.4539 L14413.2344,1205.4539 L14413.2344,1197.0164 L14415.3906,1197.0164 L14415.3906,1194.907 L14408.6094,1194.907 L14408.6094,1197.0164 L14410.7031,1197.0164 L14410.7031,1205.4539 L14408.6094,1205.4539 L14408.6094,1207.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="123" x="14432.75" y="1207.136">ResourceVersioner</text><line style="stroke:#181818;stroke-width:0.5;" x1="14297" x2="14659" y1="1217.032" y2="1217.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="14297" x2="14659" y1="1225.032" y2="1225.032"/><ellipse cx="14307" cy="1240.6679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="338" x="14316" y="1245.2719">SetResourceVersion(obj Object, version string) error</text><ellipse cx="14307" cy="1260.9398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="14316" y="1265.5438">ResourceVersion(obj Object) (string, error)</text></g><!--MD5=[fed49024c52fbe8cc638a6c9da8e50bd]
class daemonset.Serializer--><g id="elem_daemonset.Serializer"><rect codeLine="360" fill="#F1F1F1" height="48" id="daemonset.Serializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="93" x="2304.5" y="365.032"/><ellipse cx="2319.5" cy="381.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2315.8594,387.532 L2322.6406,387.532 L2322.6406,385.4539 L2320.4844,385.4539 L2320.4844,377.0164 L2322.6406,377.0164 L2322.6406,374.907 L2315.8594,374.907 L2315.8594,377.0164 L2317.9531,377.0164 L2317.9531,385.4539 L2315.8594,385.4539 L2315.8594,387.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="61" x="2333.5" y="387.136">Serializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="2305.5" x2="2396.5" y1="397.032" y2="397.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="2305.5" x2="2396.5" y1="405.032" y2="405.032"/></g><!--MD5=[bba9e0cffb10bea3bead9f69783776fd]
class daemonset.SerializerInfo--><g id="elem_daemonset.SerializerInfo"><rect codeLine="362" fill="#F1F1F1" height="210.1753" id="daemonset.SerializerInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="278" x="14695" y="1124.532"/><ellipse cx="14786.25" cy="1140.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14786.4375,1147.2351 C14788.7344,1147.2351 14790.1875,1145.6101 14790.1875,1143.6101 C14790.1875,1141.782 14789.3594,1140.9382 14788.2188,1140.1414 L14787.2031,1139.4226 C14786.0781,1138.6101 14785.6563,1138.3132 14785.6563,1137.4539 C14785.6563,1136.7664 14786.1406,1136.3601 14786.7188,1136.3601 C14787.4531,1136.3601 14787.9375,1136.7507 14788.6406,1137.3914 L14789.9531,1135.8132 C14788.9844,1134.7976 14787.9688,1134.2039 14786.7031,1134.2039 C14784.5625,1134.2039 14783.1094,1135.7195 14783.1094,1137.6414 C14783.1094,1139.4382 14784.0313,1140.3445 14785.125,1141.0945 L14786.2188,1141.8445 C14787.1563,1142.4539 14787.6094,1143.032 14787.6094,1143.9695 C14787.6094,1144.6414 14787.1406,1145.0632 14786.4375,1145.0632 C14785.7344,1145.0632 14784.9844,1144.5476 14784.3281,1143.7195 L14782.7813,1145.407 C14783.8125,1146.5945 14785.1094,1147.2351 14786.4375,1147.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="14806.75" y="1146.636">SerializerInfo</text><line style="stroke:#181818;stroke-width:0.5;" x1="14696" x2="14972" y1="1156.532" y2="1156.532"/><ellipse cx="14706" cy="1172.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="14715" y="1176.7719">MediaType string</text><ellipse cx="14706" cy="1192.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="14715" y="1197.0438">MediaTypeType string</text><ellipse cx="14706" cy="1212.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="14715" y="1217.3157">MediaTypeSubType string</text><ellipse cx="14706" cy="1232.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="14715" y="1237.5876">EncodesAsText bool</text><ellipse cx="14706" cy="1253.2556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="14715" y="1257.8596">Serializer Serializer</text><ellipse cx="14706" cy="1273.5275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="14715" y="1278.1315">PrettySerializer Serializer</text><ellipse cx="14706" cy="1293.7994" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="14715" y="1298.4034">StrictSerializer Serializer</text><ellipse cx="14706" cy="1314.0713" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="14715" y="1318.6753">StreamSerializer *StreamSerializerInfo</text><line style="stroke:#181818;stroke-width:0.5;" x1="14696" x2="14972" y1="1326.7073" y2="1326.7073"/></g><!--MD5=[72197e42d1920f7fea6638bba296e15f]
class daemonset.StorageSerializer--><g id="elem_daemonset.StorageSerializer"><rect codeLine="373" fill="#F1F1F1" height="129.0876" id="daemonset.StorageSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="462" x="12555" y="1394.532"/><ellipse cx="12726.25" cy="1410.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12722.6094,1417.032 L12729.3906,1417.032 L12729.3906,1414.9539 L12727.2344,1414.9539 L12727.2344,1406.5164 L12729.3906,1406.5164 L12729.3906,1404.407 L12722.6094,1404.407 L12722.6094,1406.5164 L12724.7031,1406.5164 L12724.7031,1414.9539 L12722.6094,1414.9539 L12722.6094,1417.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="111" x="12746.75" y="1416.636">StorageSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="12556" x2="13016" y1="1426.532" y2="1426.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="12556" x2="13016" y1="1434.532" y2="1434.532"/><ellipse cx="12566" cy="1450.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="259" x="12575" y="1454.7719">SupportedMediaTypes() []SerializerInfo</text><ellipse cx="12566" cy="1470.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="12575" y="1475.0438">UniversalDeserializer() Decoder</text><ellipse cx="12566" cy="1490.7118" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="436" x="12575" y="1495.3157">EncoderForVersion(serializer Encoder, gv GroupVersioner) Encoder</text><ellipse cx="12566" cy="1510.9837" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="434" x="12575" y="1515.5876">DecoderToVersion(serializer Decoder, gv GroupVersioner) Decoder</text></g><!--MD5=[cb5dce821ac4a38fa52a5d80ea051eee]
class daemonset.StreamSerializerInfo--><g id="elem_daemonset.StreamSerializerInfo"><rect codeLine="380" fill="#F1F1F1" height="68.2719" id="daemonset.StreamSerializerInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="166" x="1381" y="584.532"/><ellipse cx="1396" cy="600.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1396.1875,607.2351 C1398.4844,607.2351 1399.9375,605.6101 1399.9375,603.6101 C1399.9375,601.782 1399.1094,600.9382 1397.9688,600.1414 L1396.9531,599.4226 C1395.8281,598.6101 1395.4063,598.3132 1395.4063,597.4539 C1395.4063,596.7664 1395.8906,596.3601 1396.4688,596.3601 C1397.2031,596.3601 1397.6875,596.7507 1398.3906,597.3914 L1399.7031,595.8132 C1398.7344,594.7976 1397.7188,594.2039 1396.4531,594.2039 C1394.3125,594.2039 1392.8594,595.7195 1392.8594,597.6414 C1392.8594,599.4382 1393.7813,600.3445 1394.875,601.0945 L1395.9688,601.8445 C1396.9063,602.4539 1397.3594,603.032 1397.3594,603.9695 C1397.3594,604.6414 1396.8906,605.0632 1396.1875,605.0632 C1395.4844,605.0632 1394.7344,604.5476 1394.0781,603.7195 L1392.5313,605.407 C1393.5625,606.5945 1394.8594,607.2351 1396.1875,607.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="1410" y="606.636">StreamSerializerInfo</text><line style="stroke:#181818;stroke-width:0.5;" x1="1382" x2="1546" y1="616.532" y2="616.532"/><ellipse cx="1392" cy="632.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="1401" y="636.7719">EncodesAsText bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="1382" x2="1546" y1="644.8039" y2="644.8039"/></g><!--MD5=[368572df5da435555782661d0bc89855]
class daemonset.Unstructured--><g id="elem_daemonset.Unstructured"><rect codeLine="384" fill="#F1F1F1" height="149.3596" id="daemonset.Unstructured" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="348" x="176" y="314.532"/><ellipse cx="301.75" cy="330.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M298.1094,337.032 L304.8906,337.032 L304.8906,334.9539 L302.7344,334.9539 L302.7344,326.5164 L304.8906,326.5164 L304.8906,324.407 L298.1094,324.407 L298.1094,326.5164 L300.2031,326.5164 L300.2031,334.9539 L298.1094,334.9539 L298.1094,337.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="88" x="322.25" y="336.636">Unstructured</text><line style="stroke:#181818;stroke-width:0.5;" x1="177" x2="523" y1="346.532" y2="346.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="177" x2="523" y1="354.532" y2="354.532"/><ellipse cx="187" cy="370.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="196" y="374.7719">NewEmptyInstance() Unstructured</text><ellipse cx="187" cy="390.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="196" y="395.0438">UnstructuredContent()</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="350" y="395.0438">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="380" y="395.0438">[string]</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="428" y="395.0438">interface</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="487" y="395.0438">{}</text><ellipse cx="187" cy="410.7118" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="196" y="415.3157">SetUnstructuredContent(</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="366" y="415.3157">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="396" y="415.3157">[string]</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="444" y="415.3157">interface</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="15" x="503" y="415.3157">{})</text><ellipse cx="187" cy="430.9837" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="196" y="435.5876">IsList() bool</text><ellipse cx="187" cy="451.2556" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="196" y="455.8596">EachListItem(</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="290" y="455.8596">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="320" y="455.8596">(Object) error) error</text></g><!--MD5=[18226846988494b7fa3c65bd34d147ca]
class daemonset.Codec--><g id="elem_daemonset.Codec"><rect codeLine="392" fill="#F1F1F1" height="48" id="daemonset.Codec" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="73" x="2314.5" y="594.532"/><ellipse cx="2329.5" cy="610.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2328.2344,617.532 L2330.7813,617.532 L2330.7813,607.0164 L2333.4063,607.0164 L2333.4063,604.907 L2325.5938,604.907 L2325.5938,607.0164 L2328.2344,607.0164 L2328.2344,617.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="2343.5" y="616.636">Codec</text><line style="stroke:#181818;stroke-width:0.5;" x1="2315.5" x2="2386.5" y1="626.532" y2="626.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="2315.5" x2="2386.5" y1="634.532" y2="634.532"/></g><!--MD5=[6df3aa87789d97949d566a4782b747fb]
class daemonset.Identifier--><g id="elem_daemonset.Identifier"><rect codeLine="394" fill="#F1F1F1" height="48" id="daemonset.Identifier" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="93" x="176.5" y="176.032"/><ellipse cx="191.5" cy="192.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M190.2344,199.032 L192.7813,199.032 L192.7813,188.5164 L195.4063,188.5164 L195.4063,186.407 L187.5938,186.407 L187.5938,188.5164 L190.2344,188.5164 L190.2344,199.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="205.5" y="198.136">Identifier</text><line style="stroke:#181818;stroke-width:0.5;" x1="177.5" x2="268.5" y1="208.032" y2="208.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="177.5" x2="268.5" y1="216.032" y2="216.032"/></g><!--MD5=[3ee6794065a458bf92e3d494e967c519]
class daemonset.REST--><g id="elem_daemonset.REST"><rect codeLine="407" fill="#F1F1F1" height="88.5438" id="daemonset.REST" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="168" x="11670" y="344.532"/><ellipse cx="11733.25" cy="360.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11733.4375,367.2351 C11735.7344,367.2351 11737.1875,365.6101 11737.1875,363.6101 C11737.1875,361.782 11736.3594,360.9382 11735.2188,360.1414 L11734.2031,359.4226 C11733.0781,358.6101 11732.6563,358.3132 11732.6563,357.4539 C11732.6563,356.7664 11733.1406,356.3601 11733.7188,356.3601 C11734.4531,356.3601 11734.9375,356.7507 11735.6406,357.3914 L11736.9531,355.8132 C11735.9844,354.7976 11734.9688,354.2039 11733.7031,354.2039 C11731.5625,354.2039 11730.1094,355.7195 11730.1094,357.6414 C11730.1094,359.4382 11731.0313,360.3445 11732.125,361.0945 L11733.2188,361.8445 C11734.1563,362.4539 11734.6094,363.032 11734.6094,363.9695 C11734.6094,364.6414 11734.1406,365.0632 11733.4375,365.0632 C11732.7344,365.0632 11731.9844,364.5476 11731.3281,363.7195 L11729.7813,365.407 C11730.8125,366.5945 11732.1094,367.2351 11733.4375,367.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="11753.75" y="366.636">REST</text><line style="stroke:#181818;stroke-width:0.5;" x1="11671" x2="11837" y1="376.532" y2="376.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="11671" x2="11837" y1="384.532" y2="384.532"/><ellipse cx="11681" cy="400.1679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="11690" y="404.7719">ShortNames() []string</text><ellipse cx="11681" cy="420.4398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="11690" y="425.0438">Categories() []string</text></g><!--MD5=[e92e0f4b379ad9f0b467940cf8c3d453]
class daemonset.StatusREST--><g id="elem_daemonset.StatusREST"><rect codeLine="412" fill="#F1F1F1" height="189.9034" id="daemonset.StatusREST" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1817" x="7723.5" y="824.032"/><ellipse cx="8590.25" cy="840.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8590.4375,846.7351 C8592.7344,846.7351 8594.1875,845.1101 8594.1875,843.1101 C8594.1875,841.282 8593.3594,840.4382 8592.2188,839.6414 L8591.2031,838.9226 C8590.0781,838.1101 8589.6563,837.8132 8589.6563,836.9539 C8589.6563,836.2664 8590.1406,835.8601 8590.7188,835.8601 C8591.4531,835.8601 8591.9375,836.2507 8592.6406,836.8914 L8593.9531,835.3132 C8592.9844,834.2976 8591.9688,833.7039 8590.7031,833.7039 C8588.5625,833.7039 8587.1094,835.2195 8587.1094,837.1414 C8587.1094,838.9382 8588.0313,839.8445 8589.125,840.5945 L8590.2188,841.3445 C8591.1563,841.9539 8591.6094,842.532 8591.6094,843.4695 C8591.6094,844.1414 8591.1406,844.5632 8590.4375,844.5632 C8589.7344,844.5632 8588.9844,844.0476 8588.3281,843.2195 L8586.7813,844.907 C8587.8125,846.0945 8589.1094,846.7351 8590.4375,846.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="8610.75" y="846.136">StatusREST</text><line style="stroke:#181818;stroke-width:0.5;" x1="7724.5" x2="9539.5" y1="856.032" y2="856.032"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7731.5" y="868.6679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="7743.5" y="876.2719">store *registry.Store</text><line style="stroke:#181818;stroke-width:0.5;" x1="7724.5" x2="9539.5" y1="884.3039" y2="884.3039"/><ellipse cx="7734.5" cy="899.9398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="7743.5" y="904.5438">New() daemonset.Object</text><ellipse cx="7734.5" cy="920.2118" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="7743.5" y="924.8157">Destroy()</text><ellipse cx="7734.5" cy="940.4837" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="579" x="7743.5" y="945.0876">Get(ctx context.Context, name string, options *v1.GetOptions) (daemonset.Object, error)</text><ellipse cx="7734.5" cy="960.7556" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1791" x="7743.5" y="965.3596">Update(ctx context.Context, name string, objInfo daemonset.UpdatedObjectInfo, createValidation daemonset.ValidateObjectFunc, updateValidation daemonset.ValidateObjectUpdateFunc, forceAllowCreate bool, options *v1.UpdateOptions) (daemonset.Object, bool, error)</text><ellipse cx="7734.5" cy="981.0275" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="7743.5" y="985.6315">GetResetFields()</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="7856.5" y="985.6315">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="7886.5" y="985.6315">[fieldpath.APIVersion]*fieldpath.Set</text><ellipse cx="7734.5" cy="1001.2994" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="745" x="7743.5" y="1005.9034">ConvertToTable(ctx context.Context, object daemonset.Object, tableOptions daemonset.Object) (*v1.Table, error)</text></g><!--MD5=[8c5646eae4cf05b6a6cc29a6abfada22]
class names.NameGenerator--><g id="elem_names.NameGenerator"><rect fill="#F1F1F1" height="48" id="names.NameGenerator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="137" x="14.5" y="594.532"/><ellipse cx="29.5" cy="610.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M29.7344,617.2351 C30.8906,617.2351 31.9844,616.7507 32.8125,615.7195 L31.3906,614.2039 C31,614.7507 30.5313,615.0632 29.9688,615.0632 C28.7813,615.0632 27.7656,613.9226 27.7656,610.6882 C27.7656,607.532 28.8281,606.3601 29.8594,606.3601 C30.4531,606.3601 30.8281,606.657 31.25,607.157 L32.6719,605.5945 C32,604.8445 31.0313,604.2039 29.75,604.2039 C27.3281,604.2039 25.1875,606.1726 25.1875,610.7976 C25.1875,615.4382 27.3281,617.2351 29.7344,617.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="43.5" y="616.636">NameGenerator</text><line style="stroke:#181818;stroke-width:0.5;" x1="15.5" x2="150.5" y1="626.532" y2="626.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="15.5" x2="150.5" y1="634.532" y2="634.532"/></g><!--MD5=[3306cb27de4da2263cda2a3249fb58ff]
class registry.Store--><g id="elem_registry.Store"><rect fill="#F1F1F1" height="48" id="registry.Store" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="66" x="15582" y="176.032"/><ellipse cx="15597" cy="192.032" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M15597.2344,198.7351 C15598.3906,198.7351 15599.4844,198.2507 15600.3125,197.2195 L15598.8906,195.7039 C15598.5,196.2507 15598.0313,196.5632 15597.4688,196.5632 C15596.2813,196.5632 15595.2656,195.4226 15595.2656,192.1882 C15595.2656,189.032 15596.3281,187.8601 15597.3594,187.8601 C15597.9531,187.8601 15598.3281,188.157 15598.75,188.657 L15600.1719,187.0945 C15599.5,186.3445 15598.5313,185.7039 15597.25,185.7039 C15594.8281,185.7039 15592.6875,187.6726 15592.6875,192.2976 C15592.6875,196.9382 15594.8281,198.7351 15597.2344,198.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="15611" y="198.136">Store</text><line style="stroke:#181818;stroke-width:0.5;" x1="15583" x2="15647" y1="208.032" y2="208.032"/><line style="stroke:#181818;stroke-width:0.5;" x1="15583" x2="15647" y1="216.032" y2="216.032"/></g><!--MD5=[aaadaf5c3ad6e0e0dd8a1e035309d301]
class __builtin__.string--><g id="elem___builtin__.string"><rect fill="#F1F1F1" height="48" id="__builtin__.string" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="70" x="2164" y="37.532"/><ellipse cx="2179" cy="53.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2179.2344,60.2351 C2180.3906,60.2351 2181.4844,59.7507 2182.3125,58.7195 L2180.8906,57.2039 C2180.5,57.7507 2180.0313,58.0632 2179.4688,58.0632 C2178.2813,58.0632 2177.2656,56.9226 2177.2656,53.6882 C2177.2656,50.532 2178.3281,49.3601 2179.3594,49.3601 C2179.9531,49.3601 2180.3281,49.657 2180.75,50.157 L2182.1719,48.5945 C2181.5,47.8445 2180.5313,47.2039 2179.25,47.2039 C2176.8281,47.2039 2174.6875,49.1726 2174.6875,53.7976 C2174.6875,58.4382 2176.8281,60.2351 2179.2344,60.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="38" x="2193" y="59.636">string</text><line style="stroke:#181818;stroke-width:0.5;" x1="2165" x2="2233" y1="69.532" y2="69.532"/><line style="stroke:#181818;stroke-width:0.5;" x1="2165" x2="2233" y1="77.532" y2="77.532"/></g><!--MD5=[9ecf6f15f2d33c2c32c36f319358a8c5]
reverse link daemonset.daemonSetStrategy to daemonset.daemonSetStatusStrategy--><g id="link_daemonset.daemonSetStrategy_daemonset.daemonSetStatusStrategy"><path codeLine="25" d="M10338.4127,1075.0418 C10313.865,1106.8004 10289.3501,1138.5166 10268.977,1164.8743 " fill="none" id="daemonset.daemonSetStrategy-backto-daemonset.daemonSetStatusStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="10346.3787,1064.7358,10339.5446,1067.0368,10339.04,1074.2302,10345.8742,1071.9292,10346.3787,1064.7358" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[aecd9a639def0b0775a1d08bd136224e]
reverse link names.NameGenerator to daemonset.daemonSetStrategy--><g id="link_names.NameGenerator_daemonset.daemonSetStrategy"><path codeLine="26" d="M101.2782,654.2247 C114.4166,675.7003 134.3281,701.1965 160,713.532 C281.2833,771.8094 9714.4093,757.4255 9848,773.532 C9939.6138,784.5775 10037.4253,804.2198 10127.3258,825.5684 " fill="none" id="names.NameGenerator-backto-daemonset.daemonSetStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="94.6824,642.8166,94.2227,650.013,100.6888,653.2052,101.1485,646.0087,94.6824,642.8166" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[39635bbc4614e9a736aa531bbdad3c7a]
reverse link daemonset.ObjectTyper to daemonset.daemonSetStrategy--><g id="link_daemonset.ObjectTyper_daemonset.daemonSetStrategy"><path codeLine="27" d="M10892.2655,669.6138 C10842.1241,698.4788 10776.6554,736.1672 10711.8566,773.4699 " fill="none" id="daemonset.ObjectTyper-backto-daemonset.daemonSetStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="10903.6962,663.0335,10896.5006,662.5604,10893.2964,669.0204,10900.4919,669.4936,10903.6962,663.0335" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9276ba59a191bfe23c5208312aa2ba07]
reverse link daemonset.ResetFieldsStrategy to daemonset.daemonSetStatusStrategy--><g id="link_daemonset.ResetFieldsStrategy_daemonset.daemonSetStatusStrategy"><path codeLine="29" d="M9750.4375,667.4911 C9779.1968,697.5998 9816.3291,737.2413 9848,773.532 C9966.7776,909.6352 10098.6618,1075.5207 10168.748,1164.9419 " fill="none" id="daemonset.ResetFieldsStrategy-backto-daemonset.daemonSetStatusStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9745.0271,671.9627,9736.2347,652.6833,9755.1308,662.2718,9745.0271,671.9627" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c6cf5dd86c0672cc106404f3433c1568]
reverse link daemonset.GarbageCollectionDeleteStrategy to daemonset.daemonSetStrategy--><g id="link_daemonset.GarbageCollectionDeleteStrategy_daemonset.daemonSetStrategy"><path codeLine="30" d="M10459,672.7503 C10459,701.1414 10459,737.4072 10459,773.3264 " fill="none" id="daemonset.GarbageCollectionDeleteStrategy-backto-daemonset.daemonSetStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="10452.0001,672.7106,10459,652.7106,10466.0001,672.7106,10452.0001,672.7106" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[17013f5a9ebf5cea184c7b9f12d29625]
reverse link daemonset.NamespaceScopedStrategy to daemonset.daemonSetStrategy--><g id="link_daemonset.NamespaceScopedStrategy_daemonset.daemonSetStrategy"><path codeLine="31" d="M10109.4392,664.9496 C10129.8601,680.5036 10152.8434,697.8688 10174,713.532 C10200.3518,733.0414 10228.2017,753.4176 10255.7589,773.4364 " fill="none" id="daemonset.NamespaceScopedStrategy-backto-daemonset.daemonSetStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="10104.9907,670.3603,10093.3413,652.6602,10113.486,659.2323,10104.9907,670.3603" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[47cf236f156a11bbdb079cf527036b3c]
reverse link daemonset.RESTCreateStrategy to daemonset.daemonSetStrategy--><g id="link_daemonset.RESTCreateStrategy_daemonset.daemonSetStrategy"><path codeLine="32" d="M11493.903,699.3251 C11478.1117,704.3862 11462.3592,709.1843 11447,713.532 C11231.0131,774.6712 10983.7413,826.0869 10790.6024,862.1974 " fill="none" id="daemonset.RESTCreateStrategy-backto-daemonset.daemonSetStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="11491.9753,692.5909,11513.1603,693.034,11496.3229,705.8987,11491.9753,692.5909" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a3446b9a46995d10a5b96ef2db80131c]
reverse link daemonset.RESTUpdateStrategy to daemonset.daemonSetStrategy--><g id="link_daemonset.RESTUpdateStrategy_daemonset.daemonSetStrategy"><path codeLine="33" d="M11970.3853,713.91 C11763.4537,754.0584 11705.9874,746.5507 11504,773.532 C11265.2472,805.4243 10996.0432,842.9437 10790.6688,871.8942 " fill="none" id="daemonset.RESTUpdateStrategy-backto-daemonset.daemonSetStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="11969.2362,707.002,11990.2115,710.0081,11971.9397,720.7385,11969.2362,707.002" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[adc8c557c71f02faca7821f94ba944eb]
reverse link daemonset.ResetFieldsStrategy to daemonset.daemonSetStrategy--><g id="link_daemonset.ResetFieldsStrategy_daemonset.daemonSetStrategy"><path codeLine="34" d="M9799.0794,660.5648 C9838.0297,677.3646 9883.5276,696.6852 9925,713.532 C9990.2282,740.0289 10060.2694,767.6055 10127.4589,793.633 " fill="none" id="daemonset.ResetFieldsStrategy-backto-daemonset.daemonSetStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9796.1083,666.9065,9780.5306,652.542,9801.6661,654.0569,9796.1083,666.9065" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b89cbb8bea5d7162ff14962d34cd593b]
reverse link daemonset.Scoper to daemonset.daemonSetStrategy--><g id="link_daemonset.Scoper_daemonset.daemonSetStrategy"><path codeLine="35" d="M11283.613,666.3186 C11264.2209,683.2771 11240.8361,701.1954 11217,713.532 C11084.8597,781.9223 10927.6413,829.3477 10790.7354,861.2547 " fill="none" id="daemonset.Scoper-backto-daemonset.daemonSetStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="11279.0492,661.0074,11298.5625,652.747,11288.4595,671.3731,11279.0492,661.0074" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4eb83f4a32f3e5e0cfd60fbb0228bf28]
reverse link daemonset.RESTCreateUpdateStrategy to daemonset.CreateUpdateResetFieldsStrategy--><g id="link_daemonset.RESTCreateUpdateStrategy_daemonset.CreateUpdateResetFieldsStrategy"><path codeLine="237" d="M9399.9104,650.5573 C9454.1589,692.0808 9543.489,760.7221 9558,773.532 C9603.7175,813.8901 9653.0557,865.2518 9680.7792,894.9099 " fill="none" id="daemonset.RESTCreateUpdateStrategy-backto-daemonset.CreateUpdateResetFieldsStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="9389.561,642.6387,9391.8955,649.4614,9399.0913,649.9307,9396.7568,643.1079,9389.561,642.6387" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[797f27b5083291cf57f06f295019b08b]
reverse link daemonset.ResetFieldsStrategy to daemonset.CreateUpdateResetFieldsStrategy--><g id="link_daemonset.ResetFieldsStrategy_daemonset.CreateUpdateResetFieldsStrategy"><path codeLine="238" d="M9703,665.7713 C9703,730.6888 9703,845.0786 9703,894.8098 " fill="none" id="daemonset.ResetFieldsStrategy-backto-daemonset.CreateUpdateResetFieldsStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="9703,652.7106,9699,658.7106,9703,664.7106,9707,658.7106,9703,652.7106" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[17262398ee0229e61e7178d2b01a72fc]
reverse link daemonset.Creater to daemonset.CreaterUpdater--><g id="link_daemonset.Creater_daemonset.CreaterUpdater"><path codeLine="239" d="M4549.5254,247.1282 C4380.6079,280.6281 4157.6091,324.8535 4005.7546,354.9694 " fill="none" id="daemonset.Creater-backto-daemonset.CreaterUpdater" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4562.3591,244.583,4555.6956,241.8266,4550.5884,246.9175,4557.2519,249.6738,4562.3591,244.583" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ce1a7b9beb69b0f81c5db3af5e9c8f85]
reverse link daemonset.TableConvertor to daemonset.Lister--><g id="link_daemonset.TableConvertor_daemonset.Lister"><path codeLine="240" d="M9210.1752,224.1276 C8972.4685,241.8455 8665.331,270.6165 8395,314.532 C8346.5769,322.3984 8294.5776,333.3537 8246.831,344.446 " fill="none" id="daemonset.TableConvertor-backto-daemonset.Lister" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="9223.2246,223.1608,9216.9454,219.6151,9211.2574,224.0475,9217.5366,227.5932,9223.2246,223.1608" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4d4c18bf2aa00c5695c609048770a3d1]
reverse link daemonset.Getter to daemonset.Patcher--><g id="link_daemonset.Getter_daemonset.Patcher"><path codeLine="241" d="M9517.6054,426.0906 C9379.5828,458.5313 9199.2414,503.5166 9170,523.532 C9143.9272,541.3786 9124.1321,572.4403 9112.5708,594.1721 " fill="none" id="daemonset.Getter-backto-daemonset.Patcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="9530.4023,423.0901,9523.6476,420.5653,9518.7191,425.8294,9525.4738,428.3541,9530.4023,423.0901" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[abe7483ed130fda1c96b0508d592275b]
reverse link daemonset.Updater to daemonset.Patcher--><g id="link_daemonset.Updater_daemonset.Patcher"><path codeLine="242" d="M10329.2456,434.7513 C10221.0051,444.649 10106.5825,454.7669 10000,463.532 C9815.6964,478.6888 9331.6276,433.6762 9170,523.532 C9141.8504,539.1816 9122.1645,571.7011 9111.2176,594.3056 " fill="none" id="daemonset.Updater-backto-daemonset.Patcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="10342.4141,433.5455,10336.0743,430.1093,10330.4641,434.6399,10336.8039,438.076,10342.4141,433.5455" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[044bb7738ed945c1a15967a7fb355482]
reverse link daemonset.CollectionDeleter to daemonset.StandardStorage--><g id="link_daemonset.CollectionDeleter_daemonset.StandardStorage"><path codeLine="243" d="M6775.4939,424.7626 C6880.2286,438.6347 7003.3266,453.5535 7115,463.532 C7367.4562,486.0901 8021.4141,422.8006 8254,523.532 C8283.9466,536.5017 8310.1938,562.797 8328.1247,584.441 " fill="none" id="daemonset.CollectionDeleter-backto-daemonset.StandardStorage" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6762.4867,423.0328,6767.907,427.7889,6774.382,424.6148,6768.9617,419.8587,6762.4867,423.0328" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f96e2266980eb0872e0030e293eaeb78]
reverse link daemonset.CreaterUpdater to daemonset.StandardStorage--><g id="link_daemonset.CreaterUpdater_daemonset.StandardStorage"><path codeLine="244" d="M4156.7209,424.3992 C4304.4504,439.1443 4481.9018,454.8339 4642,463.532 C4842.3988,474.4196 8068.4291,447.1011 8254,523.532 C8284.1753,535.9603 8310.4064,562.2937 8328.2729,584.09 " fill="none" id="daemonset.CreaterUpdater-backto-daemonset.StandardStorage" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4143.4275,423.0669,4148.9987,427.6453,4155.3677,424.2636,4149.7965,419.6852,4143.4275,423.0669" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[33128c9cab2b9776f149ef6ae31b8592]
reverse link daemonset.Getter to daemonset.StandardStorage--><g id="link_daemonset.Getter_daemonset.StandardStorage"><path codeLine="245" d="M9536.8501,426.1711 C9481.8484,439.4351 9418.2887,453.5506 9360,463.532 C9121.5521,504.3641 9057.9892,485.998 8819,523.532 C8678.5008,545.5978 8516.1,580.9789 8424.8787,601.767 " fill="none" id="daemonset.Getter-backto-daemonset.StandardStorage" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="9549.5408,423.0893,9542.7663,420.6181,9537.8797,425.921,9544.6542,428.3922,9549.5408,423.0893" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a5c51234a30422aac0dc123400fed0be]
reverse link daemonset.GracefulDeleter to daemonset.StandardStorage--><g id="link_daemonset.GracefulDeleter_daemonset.StandardStorage"><path codeLine="246" d="M8786.9269,428.4819 C8684.3282,473.4178 8518.7493,545.9376 8424.5677,587.187 " fill="none" id="daemonset.GracefulDeleter-backto-daemonset.StandardStorage" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="8799.1177,423.1427,8792.017,421.8859,8788.1258,427.957,8795.2265,429.2138,8799.1177,423.1427" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1293b74137beb82b705d4eece5165d33]
reverse link daemonset.Lister to daemonset.StandardStorage--><g id="link_daemonset.Lister_daemonset.StandardStorage"><path codeLine="247" d="M8148.0595,441.2074 C8181.197,465.3499 8220.3042,494.9626 8254,523.532 C8276.7115,542.7882 8300.8472,565.8893 8319.6015,584.4894 " fill="none" id="daemonset.Lister-backto-daemonset.StandardStorage" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="8137.5248,433.5694,8140.0345,440.3297,8147.24,440.6132,8144.7303,433.8529,8137.5248,433.5694" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[bc562122f4efb3abfb876d4897d74622]
reverse link daemonset.Watcher to daemonset.StandardStorage--><g id="link_daemonset.Watcher_daemonset.StandardStorage"><path codeLine="248" d="M7578.3068,426.1599 C7633.0584,439.314 7696.1475,453.3579 7754,463.532 C7974.4337,502.2982 8051.7028,427.7735 8254,523.532 C8283.0662,537.2906 8309.0077,562.9569 8327.037,584.1458 " fill="none" id="daemonset.Watcher-backto-daemonset.StandardStorage" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="7565.6704,423.1044,7570.5622,428.4025,7577.3342,425.9248,7572.4425,420.6266,7565.6704,423.1044" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[142a08bde29c95f7bf735d55b9ad0417]
reverse link daemonset.RESTUpdateStrategy to daemonset.UpdateResetFieldsStrategy--><g id="link_daemonset.RESTUpdateStrategy_daemonset.UpdateResetFieldsStrategy"><path codeLine="249" d="M12089.967,718.8571 C11945.2539,781.4272 11770.3984,857.0302 11682.7731,894.9172 " fill="none" id="daemonset.RESTUpdateStrategy-backto-daemonset.UpdateResetFieldsStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="12102.0977,713.6121,12095.003,712.3218,12091.0832,718.3745,12098.1779,719.6648,12102.0977,713.6121" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f52b62ba828863e896a2ef8d78088a55]
reverse link daemonset.ResetFieldsStrategy to daemonset.UpdateResetFieldsStrategy--><g id="link_daemonset.ResetFieldsStrategy_daemonset.UpdateResetFieldsStrategy"><path codeLine="250" d="M9778.3798,658.3144 C9820.3582,678.5197 9874.2534,701.3232 9925,713.532 C10307.4372,805.5402 10417.5663,725.7273 10808,773.532 C11065.6598,805.0799 11365.2659,864.0585 11520.8838,896.3934 " fill="none" id="daemonset.ResetFieldsStrategy-backto-daemonset.UpdateResetFieldsStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="9766.5902,652.5576,9770.2267,658.7846,9777.3734,657.8229,9773.7369,651.5959,9766.5902,652.5576" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a6497aee79ca67e97f463a1920de8e96]
reverse link daemonset.UpdatedObjectInfo to daemonset.defaultUpdatedObjectInfo--><g id="link_daemonset.UpdatedObjectInfo_daemonset.defaultUpdatedObjectInfo"><path codeLine="252" d="M5438.5535,250.2698 C5360.8785,273.0304 5268.1011,300.2163 5185.3352,324.4687 " fill="none" id="daemonset.UpdatedObjectInfo-backto-daemonset.defaultUpdatedObjectInfo" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5436.7993,243.4895,5457.9608,244.583,5440.7362,256.9246,5436.7993,243.4895" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6c56c85de4ba24b741bb734ebed46e1b]
reverse link daemonset.UpdatedObjectInfo to daemonset.wrappedUpdatedObjectInfo--><g id="link_daemonset.UpdatedObjectInfo_daemonset.wrappedUpdatedObjectInfo"><path codeLine="253" d="M5610.686,264.8552 C5610.8901,284.1418 5611.1136,305.2639 5611.3174,324.5299 " fill="none" id="daemonset.UpdatedObjectInfo-backto-daemonset.wrappedUpdatedObjectInfo" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5603.6861,264.8953,5610.474,244.8224,5617.6853,264.7471,5603.6861,264.8953" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f337330d750e509d59b643f23825aac2]
reverse link daemonset.Encoder to daemonset.EncoderWithAllocator--><g id="link_daemonset.Encoder_daemonset.EncoderWithAllocator"><path codeLine="397" d="M1695.7673,250.0224 C1768.4886,283.1413 1861.9664,325.7131 1926.2066,354.9694 " fill="none" id="daemonset.Encoder-backto-daemonset.EncoderWithAllocator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1683.8237,244.583,1687.6262,250.7101,1694.7445,249.5566,1690.942,243.4296,1683.8237,244.583" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fa42c719d51603850ebc31bc43d9f1fd]
reverse link daemonset.EquivalentResourceMapper to daemonset.EquivalentResourceRegistry--><g id="link_daemonset.EquivalentResourceMapper_daemonset.EquivalentResourceRegistry"><path codeLine="398" d="M1096.5217,251.4509 C1149.8811,284.3008 1217.5944,325.9875 1264.4275,354.8196 " fill="none" id="daemonset.EquivalentResourceMapper-backto-daemonset.EquivalentResourceRegistry" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1085.366,244.583,1088.3783,251.1348,1095.5847,250.8741,1092.5724,244.3223,1085.366,244.583" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3d32e9a799c40aa4bc4d2bf1225cc188]
reverse link daemonset.Decoder to daemonset.Serializer--><g id="link_daemonset.Decoder_daemonset.Serializer"><path codeLine="399" d="M2198.5466,242.151 C2226.5529,262.7204 2259.6044,288.5908 2287,314.532 C2303.467,330.1248 2320.0982,349.6242 2332.2783,364.7623 " fill="none" id="daemonset.Decoder-backto-daemonset.Serializer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2187.6854,234.252,2190.1852,241.0159,2197.3903,241.3099,2194.8905,234.546,2187.6854,234.252" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b33420363ff1710873d85a223bcd045f]
reverse link daemonset.Encoder to daemonset.Serializer--><g id="link_daemonset.Encoder_daemonset.Serializer"><path codeLine="400" d="M1711.7344,248.4182 C1719.5496,250.6785 1727.3473,252.7445 1735,254.532 C1975.31,310.6629 2068.6432,199.5543 2287,314.532 C2308.5751,325.8925 2326.0165,347.8072 2337.2103,364.9403 " fill="none" id="daemonset.Encoder-backto-daemonset.Serializer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1699.0276,244.5841,1703.6163,250.1468,1710.516,248.0506,1705.9273,242.4879,1699.0276,244.5841" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[15f79758a31a0ec359dd50bdc6b8bd71]
reverse link daemonset.Framer to daemonset.StreamSerializerInfo--><g id="link_daemonset.Framer_daemonset.StreamSerializerInfo"><path codeLine="401" d="M855.1274,438.3142 C878.2027,447.0857 902.2391,455.8608 925,463.532 C1084.3951,517.2532 1274.1088,569.0528 1380.6405,597.0616 " fill="none" id="daemonset.Framer-backto-daemonset.StreamSerializerInfo" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="842.7921,433.5916,846.9653,439.4724,853.9988,437.8821,849.8257,432.0013,842.7921,433.5916" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8674b910506c9f3de3bd0bb52df6de13]
reverse link daemonset.Serializer to daemonset.StreamSerializerInfo--><g id="link_daemonset.Serializer_daemonset.StreamSerializerInfo"><path codeLine="402" d="M2328.8347,424.0278 C2317.9479,438.4305 2303.5918,453.9525 2287,463.532 C2161.1647,536.185 1730.1325,589.8749 1547.1834,609.9246 " fill="none" id="daemonset.Serializer-backto-daemonset.StreamSerializerInfo" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2336.4632,413.3491,2329.7207,415.9062,2329.4879,423.1135,2336.2303,420.5564,2336.4632,413.3491" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[19c0b8d389bcaddda94c3499a64a35c4]
reverse link daemonset.Object to daemonset.Unstructured--><g id="link_daemonset.Object_daemonset.Unstructured"><path codeLine="403" d="M411.6339,256.6592 C403.2057,274.7607 393.7431,295.0838 384.8095,314.2706 " fill="none" id="daemonset.Object-backto-daemonset.Unstructured" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="417.1452,244.8224,410.9864,248.5733,412.08,255.701,418.2388,251.9501,417.1452,244.8224" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[51afba68b1d75225231a537131dc76d3]
reverse link registry.Store to daemonset.REST--><g id="link_registry.Store_daemonset.REST"><path codeLine="424" d="M15596.1735,234.8976 C15590.1795,242.743 15582.7772,250.0626 15574,254.532 C15389.9097,348.2713 12051.8677,248.8651 11856,314.532 C11836.8718,320.9449 11818.3187,332.3703 11802.3977,344.3771 " fill="none" id="registry.Store-backto-daemonset.REST" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="15603.4711,224.0916,15596.7983,226.8253,15596.7552,234.0363,15603.428,231.3026,15603.4711,224.0916" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6674fe8be7230ae6aed7387a7916cea3]
reverse link daemonset.CategoriesProvider to daemonset.REST--><g id="link_daemonset.CategoriesProvider_daemonset.REST"><path codeLine="426" d="M11821.1468,252.5725 C11806.9441,281.436 11789.5169,316.8525 11775.9762,344.3707 " fill="none" id="daemonset.CategoriesProvider-backto-daemonset.REST" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="11815.0474,249.1131,11830.1584,234.2585,11827.609,255.2942,11815.0474,249.1131" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9b64049f047c0a9439f435c2716950a5]
reverse link daemonset.ShortNamesProvider to daemonset.REST--><g id="link_daemonset.ShortNamesProvider_daemonset.REST"><path codeLine="427" d="M11677.7298,251.7457 C11693.8475,280.7574 11713.754,316.5892 11729.1882,344.3707 " fill="none" id="daemonset.ShortNamesProvider-backto-daemonset.REST" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="11671.6085,255.1412,11668.0147,234.2585,11683.8467,248.3421,11671.6085,255.1412" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[008cad4c99ae752feb5b5cfe585dc542]
reverse link daemonset.CreaterUpdater to daemonset.StatusREST--><g id="link_daemonset.CreaterUpdater_daemonset.StatusREST"><path codeLine="428" d="M4163.4295,425.058 C4309.8027,439.6052 4484.3183,454.9553 4642,463.532 C4741.4503,468.9413 8150.6701,459.5526 8227,523.532 C8292.9327,578.7965 8213.5299,643.861 8264,713.532 C8296.6257,758.5698 8342.3135,794.9781 8390.4323,823.9113 " fill="none" id="daemonset.CreaterUpdater-backto-daemonset.StatusREST" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4162.6321,432.0133,4143.428,423.0578,4164.0253,418.0827,4162.6321,432.0133" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[91daab52eb77fadc731f96a7be3ec322]
reverse link daemonset.Getter to daemonset.StatusREST--><g id="link_daemonset.Getter_daemonset.StatusREST"><path codeLine="429" d="M9520.068,427.6643 C9469.0191,439.6199 9412.224,452.5311 9360,463.532 C9219.2615,493.1782 9169.7763,457.506 9042,523.532 C8901.8578,595.9479 8777.1891,731.6549 8703.1139,823.6754 " fill="none" id="daemonset.Getter-backto-daemonset.StatusREST" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9518.6276,420.8121,9539.699,423.0478,9521.8325,434.4404,9518.6276,420.8121" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[76c4e637f16d942ebbcd2ab916b70d62]
reverse link daemonset.ResetFieldsStrategy to daemonset.StatusREST--><g id="link_daemonset.ResetFieldsStrategy_daemonset.StatusREST"><path codeLine="430" d="M9613.3696,660.9314 C9573.4416,678.7598 9525.4743,698.7485 9481,713.532 C9354.4492,755.5981 9214.6615,793.0126 9085.6632,824.0074 " fill="none" id="daemonset.ResetFieldsStrategy-backto-daemonset.StatusREST" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9610.581,654.51,9631.6891,652.6528,9616.3464,667.2679,9610.581,654.51" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[dc9e6bf6f122019ed7e644f80cc5d1f4]
reverse link daemonset.StandardStorage to daemonset.StatusREST--><g id="link_daemonset.StandardStorage_daemonset.StatusREST"><path codeLine="431" d="M8398.5465,667.5883 C8437.7666,709.8308 8495.4993,772.0124 8543.7384,823.9688 " fill="none" id="daemonset.StandardStorage-backto-daemonset.StatusREST" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="8393.2115,672.1302,8384.7332,652.7106,8403.4712,662.6045,8393.2115,672.1302" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[14fe486a45422cbfd3e0aea369012794]
reverse link daemonset.Storage to daemonset.StatusREST--><g id="link_daemonset.Storage_daemonset.StatusREST"><path codeLine="432" d="M8182.5898,675.4637 C8199.6055,688.5913 8218.104,702.0575 8236,713.532 C8297.5363,752.9876 8367.5198,791.2808 8431.3593,823.9064 " fill="none" id="daemonset.Storage-backto-daemonset.StatusREST" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="8178.2006,680.9174,8166.7981,663.0572,8186.8496,669.9085,8178.2006,680.9174" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8382a1cb6af74c1c1169526e4431e538]
reverse link daemonset.TableConvertor to daemonset.StatusREST--><g id="link_daemonset.TableConvertor_daemonset.StatusREST"><path codeLine="433" d="M10014.8887,209.0788 C10585.5179,223.8162 11561.9053,257.2632 11616,314.532 C11661.4731,362.6733 11662.2326,416.1197 11616,463.532 C11523.6218,558.2674 9337.3275,439.6415 9235,523.532 C9168.0447,578.4235 9249.1434,648.4879 9192,713.532 C9151.0746,760.1158 9098.6593,796.1503 9042.3676,824.0221 " fill="none" id="daemonset.TableConvertor-backto-daemonset.StatusREST" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="10014.5768,216.0732,9994.763,208.5625,10014.936,202.0779,10014.5768,216.0732" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c7e7fa427bab31c3ad1b9947a3bb08c7]
reverse link daemonset.Updater to daemonset.StatusREST--><g id="link_daemonset.Updater_daemonset.StatusREST"><path codeLine="434" d="M10319.5119,435.3745 C10214.1586,445.0049 10103.3857,454.8552 10000,463.532 C9911.9466,470.922 9274.475,466.4782 9207,523.532 C9140.5736,579.6991 9217.4293,648.1938 9160,713.532 C9119.1696,759.9853 9066.5455,796.0165 9010.3839,823.9427 " fill="none" id="daemonset.Updater-backto-daemonset.StatusREST" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="10318.9088,428.4005,10339.4638,433.5474,10320.1855,442.3422,10318.9088,428.4005" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[63fc6da105c2bee231d06e43030044ff]
reverse link __builtin__.string to daemonset.GarbageCollectionPolicy--><g id="link___builtin__.string_daemonset.GarbageCollectionPolicy"><path codeLine="436" d="M2239.5857,61.9906 C2503.8693,65.064 3972.1169,83.4923 4061,114.532 C4096.7352,127.0114 4130.4757,155.114 4151.8414,175.7077 " fill="none" id="__builtin__.string-backto-daemonset.GarbageCollectionPolicy" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#181818;stroke-width:1.5;" width="10" x="2229.3004" y="56.9294"/></g><!--MD5=[3d5b1604e137abdff40ca49f5aa6968e]
reverse link __builtin__.string to daemonset.Identifier--><g id="link___builtin__.string_daemonset.Identifier"><path codeLine="437" d="M2158.4883,61.6579 C1889.8037,62.6167 372.9763,69.9932 287,114.532 C261.8105,127.581 243.87,155.5724 233.5112,175.9843 " fill="none" id="__builtin__.string-backto-daemonset.Identifier" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#181818;stroke-width:1.5;" width="10" x="2158.8581" y="56.639"/></g><!--MD5=[87520af1c01bb30e8dd6953a2efa2e39]
reverse link daemonset.fontcolorbluefuncfontcontextContextruntimeObjecterror to daemonset.ValidateObjectFunc--><g id="link_daemonset.fontcolorbluefuncfontcontextContextruntimeObjecterror_daemonset.ValidateObjectFunc"><path codeLine="438" d="M3798.376,225.6789 C3764.6517,236.1754 3724.2101,247.4867 3687,254.532 C3397.5988,309.3271 3301.8348,208.601 3027,314.532 C2998.2982,325.5947 2970.7711,347.5443 2952.0619,364.7662 " fill="none" id="daemonset.fontcolorbluefuncfontcontextContextruntimeObjecterror-backto-daemonset.ValidateObjectFunc" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#181818;stroke-width:1.5;" width="10" x="3798.3018" y="219.1368"/></g><!--MD5=[8b41f13fc7a1bf078ee6223b63d56691]
reverse link daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjectruntimeObjecterror to daemonset.TransformFunc--><g id="link_daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjectruntimeObjecterror_daemonset.TransformFunc"><path codeLine="439" d="M2779.2492,225.7546 C2721.8037,245.5421 2644.798,276.004 2583,314.532 C2560.3385,328.6603 2537.875,349.0031 2521.8875,364.8628 " fill="none" id="daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjectruntimeObjecterror-backto-daemonset.TransformFunc" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#181818;stroke-width:1.5;" width="10" x="2779.0468" y="219.1112"/></g><!--MD5=[08ec8af317c6ef2b3b34fdaa12dad5ba]
reverse link daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjecterror to daemonset.ValidateObjectUpdateFunc--><g id="link_daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjecterror_daemonset.ValidateObjectUpdateFunc"><path codeLine="440" d="M3323.8157,225.1968 C3280.0224,234.8154 3229.2338,245.6079 3183,254.532 C3026.7451,284.6925 2979.2334,259.2634 2830,314.532 C2796.7928,326.8303 2762.5488,348.1815 2738.4838,364.8826 " fill="none" id="daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjecterror-backto-daemonset.ValidateObjectUpdateFunc" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#181818;stroke-width:1.5;" width="10" x="3323.8472" y="219.0901"/></g><!--MD5=[7a9b9aa77db91380c20f84378559c45f]
reverse link daemonset.Serializer to daemonset.Codec--><g id="link_daemonset.Serializer_daemonset.Codec"><path codeLine="441" d="M2351,418.2631 C2351,464.0751 2351,551.9274 2351,594.3841 " fill="none" id="daemonset.Serializer-backto-daemonset.Codec" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#181818;stroke-width:1.5;" width="10" x="2346" y="408.1588"/></g><!--MD5=[e307b9577b0879adb3756ce50895f2ca]
@startuml
namespace daemonset {
    class daemonSetStatusStrategy << (S,Aquamarine) >> {
        + GetResetFields() <font color=blue>map</font>[fieldpath.APIVersion]*fieldpath.Set
        + PrepareForUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) 
        + ValidateUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) field.ErrorList
        + WarningsOnUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) []string

    }
    class daemonSetStrategy << (S,Aquamarine) >> {
        + DefaultGarbageCollectionPolicy(ctx context.Context) daemonset.GarbageCollectionPolicy
        + NamespaceScoped() bool
        + GetResetFields() <font color=blue>map</font>[fieldpath.APIVersion]*fieldpath.Set
        + PrepareForCreate(ctx context.Context, obj daemonset.Object) 
        + PrepareForUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) 
        + Validate(ctx context.Context, obj daemonset.Object) field.ErrorList
        + WarningsOnCreate(ctx context.Context, obj daemonset.Object) []string
        + Canonicalize(obj daemonset.Object) 
        + AllowCreateOnUpdate() bool
        + ValidateUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) field.ErrorList
        + WarningsOnUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) []string
        + AllowUnconditionalUpdate() bool

    }
}
"daemonset.daemonSetStrategy" *- - "daemonset.daemonSetStatusStrategy"
"names.NameGenerator" *- - "daemonset.daemonSetStrategy"
"daemonset.ObjectTyper" *- - "daemonset.daemonSetStrategy"

"daemonset.ResetFieldsStrategy" <|- - "daemonset.daemonSetStatusStrategy"
"daemonset.GarbageCollectionDeleteStrategy" <|- - "daemonset.daemonSetStrategy"
"daemonset.NamespaceScopedStrategy" <|- - "daemonset.daemonSetStrategy"
"daemonset.RESTCreateStrategy" <|- - "daemonset.daemonSetStrategy"
"daemonset.RESTUpdateStrategy" <|- - "daemonset.daemonSetStrategy"
"daemonset.ResetFieldsStrategy" <|- - "daemonset.daemonSetStrategy"
"daemonset.Scoper" <|- - "daemonset.daemonSetStrategy"

namespace daemonset {
    interface CategoriesProvider  {
        + Categories() []string

    }
    interface CollectionDeleter  {
        + DeleteCollection(ctx context.Context, deleteValidation ValidateObjectFunc, options *v1.DeleteOptions, listOptions *internalversion.ListOptions) (daemonset.Object, error)

    }
    interface Connecter  {
        + Connect(ctx context.Context, id string, options daemonset.Object, r Responder) (http.Handler, error)
        + NewConnectOptions() (daemonset.Object, bool, string)
        + ConnectMethods() []string

    }
    interface CreateUpdateResetFieldsStrategy  {
    }
    interface Creater  {
        + New() daemonset.Object
        + Create(ctx context.Context, obj daemonset.Object, createValidation ValidateObjectFunc, options *v1.CreateOptions) (daemonset.Object, error)

    }
    interface CreaterUpdater  {
        + Update(ctx context.Context, name string, objInfo UpdatedObjectInfo, createValidation ValidateObjectFunc, updateValidation ValidateObjectUpdateFunc, forceAllowCreate bool, options *v1.UpdateOptions) (daemonset.Object, bool, error)

    }
    interface GarbageCollectionDeleteStrategy  {
        + DefaultGarbageCollectionPolicy(ctx context.Context) GarbageCollectionPolicy

    }
    interface Getter  {
        + Get(ctx context.Context, name string, options *v1.GetOptions) (daemonset.Object, error)

    }
    interface GetterWithOptions  {
        + Get(ctx context.Context, name string, options daemonset.Object) (daemonset.Object, error)
        + NewGetOptions() (daemonset.Object, bool, string)

    }
    interface GracefulDeleter  {
        + Delete(ctx context.Context, name string, deleteValidation ValidateObjectFunc, options *v1.DeleteOptions) (daemonset.Object, bool, error)

    }
    interface GroupVersionAcceptor  {
        + AcceptsGroupVersion(gv schema.GroupVersion) bool

    }
    interface GroupVersionKindProvider  {
        + GroupVersionKind(containingGV schema.GroupVersion) schema.GroupVersionKind

    }
    interface KindProvider  {
        + Kind() string

    }
    interface Lister  {
        + NewList() daemonset.Object
        + List(ctx context.Context, options *internalversion.ListOptions) (daemonset.Object, error)

    }
    interface MayReturnFullObjectDeleter  {
        + DeleteReturnsDeletedObject() bool

    }
    interface NamedCreater  {
        + New() daemonset.Object
        + Create(ctx context.Context, name string, obj daemonset.Object, createValidation ValidateObjectFunc, options *v1.CreateOptions) (daemonset.Object, error)

    }
    interface NamespaceScopedStrategy  {
        + NamespaceScoped() bool

    }
    interface Patcher  {
    }
    interface RESTCreateStrategy  {
        + NamespaceScoped() bool
        + PrepareForCreate(ctx context.Context, obj daemonset.Object) 
        + Validate(ctx context.Context, obj daemonset.Object) field.ErrorList
        + WarningsOnCreate(ctx context.Context, obj daemonset.Object) []string
        + Canonicalize(obj daemonset.Object) 

    }
    interface RESTDeleteStrategy  {
    }
    interface RESTGracefulDeleteStrategy  {
        + CheckGracefulDelete(ctx context.Context, obj daemonset.Object, options *v1.DeleteOptions) bool

    }
    interface RESTUpdateStrategy  {
        + NamespaceScoped() bool
        + AllowCreateOnUpdate() bool
        + PrepareForUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) 
        + ValidateUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) field.ErrorList
        + WarningsOnUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) []string
        + Canonicalize(obj daemonset.Object) 
        + AllowUnconditionalUpdate() bool

    }
    interface Redirector  {
        + ResourceLocation(ctx context.Context, id string) (*url.URL, http.RoundTripper, error)

    }
    interface ResetFieldsStrategy  {
        + GetResetFields() <font color=blue>map</font>[fieldpath.APIVersion]*fieldpath.Set

    }
    interface ResourceStreamer  {
        + InputStream(ctx context.Context, apiVersion string, acceptHeader string) (io.ReadCloser, bool, string, error)

    }
    interface Responder  {
        + Object(statusCode int, obj daemonset.Object) 
        + Error(err error) 

    }
    interface Scoper  {
        + NamespaceScoped() bool

    }
    interface ShortNamesProvider  {
        + ShortNames() []string

    }
    interface SingularNameProvider  {
        + GetSingularName() string

    }
    interface StandardStorage  {
        + Destroy() 

    }
    interface Storage  {
        + New() daemonset.Object
        + Destroy() 

    }
    interface StorageMetadata  {
        + ProducesMIMETypes(verb string) []string
        + ProducesObject(verb string) <font color=blue>interface</font>{}

    }
    interface StorageVersionProvider  {
        + StorageVersion() daemonset.GroupVersioner

    }
    interface TableConvertor  {
        + ConvertToTable(ctx context.Context, object daemonset.Object, tableOptions daemonset.Object) (*v1.Table, error)

    }
    interface UpdateResetFieldsStrategy  {
    }
    interface UpdatedObjectInfo  {
        + Preconditions() *v1.Preconditions
        + UpdatedObject(ctx context.Context, oldObj daemonset.Object) (daemonset.Object, error)

    }
    interface Updater  {
        + New() daemonset.Object
        + Update(ctx context.Context, name string, objInfo UpdatedObjectInfo, createValidation ValidateObjectFunc, updateValidation ValidateObjectUpdateFunc, forceAllowCreate bool, options *v1.UpdateOptions) (daemonset.Object, bool, error)

    }
    interface Watcher  {
        + Watch(ctx context.Context, options *internalversion.ListOptions) (watch.Interface, error)

    }
    class defaultUpdatedObjectInfo << (S,Aquamarine) >> {
        - obj daemonset.Object
        - transformers []TransformFunc

        + Preconditions() *v1.Preconditions
        + UpdatedObject(ctx context.Context, oldObj daemonset.Object) (daemonset.Object, error)

    }
    class daemonset.GarbageCollectionPolicy << (T, #FF7700) >>  {
    }
    class daemonset.TransformFunc << (T, #FF7700) >>  {
    }
    class daemonset.ValidateObjectFunc << (T, #FF7700) >>  {
    }
    class daemonset.ValidateObjectUpdateFunc << (T, #FF7700) >>  {
    }
    class wrappedUpdatedObjectInfo << (S,Aquamarine) >> {
        - objInfo UpdatedObjectInfo
        - transformers []TransformFunc

        + Preconditions() *v1.Preconditions
        + UpdatedObject(ctx context.Context, oldObj daemonset.Object) (daemonset.Object, error)

    }
    class "<font color=blue>func</font>(context.Context, daemonset.Object) error" as fontcolorbluefuncfontcontextContextruntimeObjecterror {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
    class "<font color=blue>func</font>(context.Context, daemonset.Object, daemonset.Object) error" as fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjecterror {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
    class "<font color=blue>func</font>(context.Context, daemonset.Object, daemonset.Object) (daemonset.Object, error)" as fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjectruntimeObjecterror {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}
"daemonset.RESTCreateUpdateStrategy" *- - "daemonset.CreateUpdateResetFieldsStrategy"
"daemonset.ResetFieldsStrategy" *- - "daemonset.CreateUpdateResetFieldsStrategy"
"daemonset.Creater" *- - "daemonset.CreaterUpdater"
"daemonset.TableConvertor" *- - "daemonset.Lister"
"daemonset.Getter" *- - "daemonset.Patcher"
"daemonset.Updater" *- - "daemonset.Patcher"
"daemonset.CollectionDeleter" *- - "daemonset.StandardStorage"
"daemonset.CreaterUpdater" *- - "daemonset.StandardStorage"
"daemonset.Getter" *- - "daemonset.StandardStorage"
"daemonset.GracefulDeleter" *- - "daemonset.StandardStorage"
"daemonset.Lister" *- - "daemonset.StandardStorage"
"daemonset.Watcher" *- - "daemonset.StandardStorage"
"daemonset.RESTUpdateStrategy" *- - "daemonset.UpdateResetFieldsStrategy"
"daemonset.ResetFieldsStrategy" *- - "daemonset.UpdateResetFieldsStrategy"

"daemonset.UpdatedObjectInfo" <|- - "daemonset.defaultUpdatedObjectInfo"
"daemonset.UpdatedObjectInfo" <|- - "daemonset.wrappedUpdatedObjectInfo"

namespace daemonset {
    interface CacheableObject  {
        + CacheEncode(id Identifier, encode <font color=blue>func</font>(Object, io.Writer) error, w io.Writer) error
        + GetObject() Object

    }
    interface ClientNegotiator  {
        + Encoder(contentType string, params <font color=blue>map</font>[string]string) (Encoder, error)
        + Decoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, error)
        + StreamDecoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, Serializer, Framer, error)

    }
    interface Decoder  {
        + Decode(data []byte, defaults *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    interface Encoder  {
        + Encode(obj Object, w io.Writer) error
        + Identifier() Identifier

    }
    interface EncoderWithAllocator  {
        + EncodeWithAllocator(obj Object, w io.Writer, memAlloc MemoryAllocator) error

    }
    interface EquivalentResourceMapper  {
        + EquivalentResourcesFor(resource schema.GroupVersionResource, subresource string) []schema.GroupVersionResource
        + KindFor(resource schema.GroupVersionResource, subresource string) schema.GroupVersionKind

    }
    interface EquivalentResourceRegistry  {
        + RegisterKindFor(resource schema.GroupVersionResource, subresource string, kind schema.GroupVersionKind) 

    }
    interface Framer  {
        + NewFrameReader(r io.ReadCloser) io.ReadCloser
        + NewFrameWriter(w io.Writer) io.Writer

    }
    interface GroupVersioner  {
        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    interface MemoryAllocator  {
        + Allocate(n uint64) []byte

    }
    interface Namer  {
        + Name(obj Object) (string, error)
        + Namespace(obj Object) (string, error)

    }
    interface NegotiatedSerializer  {
        + SupportedMediaTypes() []SerializerInfo
        + EncoderForVersion(serializer Encoder, gv GroupVersioner) Encoder
        + DecoderToVersion(serializer Decoder, gv GroupVersioner) Decoder

    }
    interface NestedObjectDecoder  {
        + DecodeNestedObjects(d Decoder) error

    }
    interface NestedObjectEncoder  {
        + EncodeNestedObjects(e Encoder) error

    }
    interface Object  {
        + GetObjectKind() schema.ObjectKind
        + DeepCopyObject() Object

    }
    interface ObjectConvertor  {
        + Convert(in <font color=blue>interface</font>{}, out <font color=blue>interface</font>{}, context <font color=blue>interface</font>{}) error
        + ConvertToVersion(in Object, gv GroupVersioner) (Object, error)
        + ConvertFieldLabel(gvk schema.GroupVersionKind, label string, value string) (string, string, error)

    }
    interface ObjectCreater  {
        + New(kind schema.GroupVersionKind) (Object, error)

    }
    interface ObjectDefaulter  {
        + Default(in Object) 

    }
    interface ObjectTyper  {
        + ObjectKinds( Object) ([]schema.GroupVersionKind, bool, error)
        + Recognizes(gvk schema.GroupVersionKind) bool

    }
    interface ObjectVersioner  {
        + ConvertToVersion(in Object, gv GroupVersioner) (Object, error)

    }
    interface ParameterCodec  {
        + DecodeParameters(parameters url.Values, from schema.GroupVersion, into Object) error
        + EncodeParameters(obj Object, to schema.GroupVersion) (url.Values, error)

    }
    interface ResourceVersioner  {
        + SetResourceVersion(obj Object, version string) error
        + ResourceVersion(obj Object) (string, error)

    }
    interface Serializer  {
    }
    class SerializerInfo << (S,Aquamarine) >> {
        + MediaType string
        + MediaTypeType string
        + MediaTypeSubType string
        + EncodesAsText bool
        + Serializer Serializer
        + PrettySerializer Serializer
        + StrictSerializer Serializer
        + StreamSerializer *StreamSerializerInfo

    }
    interface StorageSerializer  {
        + SupportedMediaTypes() []SerializerInfo
        + UniversalDeserializer() Decoder
        + EncoderForVersion(serializer Encoder, gv GroupVersioner) Encoder
        + DecoderToVersion(serializer Decoder, gv GroupVersioner) Decoder

    }
    class StreamSerializerInfo << (S,Aquamarine) >> {
        + EncodesAsText bool

    }
    interface Unstructured  {
        + NewEmptyInstance() Unstructured
        + UnstructuredContent() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + SetUnstructuredContent( <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 
        + IsList() bool
        + EachListItem( <font color=blue>func</font>(Object) error) error

    }
    class daemonset.Codec << (T, #FF7700) >>  {
    }
    class daemonset.Identifier << (T, #FF7700) >>  {
    }
}
"daemonset.Encoder" *- - "daemonset.EncoderWithAllocator"
"daemonset.EquivalentResourceMapper" *- - "daemonset.EquivalentResourceRegistry"
"daemonset.Decoder" *- - "daemonset.Serializer"
"daemonset.Encoder" *- - "daemonset.Serializer"
"daemonset.Framer" *- - "daemonset.StreamSerializerInfo"
"daemonset.Serializer" *- - "daemonset.StreamSerializerInfo"
"daemonset.Object" *- - "daemonset.Unstructured"


namespace daemonset {
    class REST << (S,Aquamarine) >> {
        + ShortNames() []string
        + Categories() []string

    }
    class StatusREST << (S,Aquamarine) >> {
        - store *registry.Store

        + New() daemonset.Object
        + Destroy() 
        + Get(ctx context.Context, name string, options *v1.GetOptions) (daemonset.Object, error)
        + Update(ctx context.Context, name string, objInfo daemonset.UpdatedObjectInfo, createValidation daemonset.ValidateObjectFunc, updateValidation daemonset.ValidateObjectUpdateFunc, forceAllowCreate bool, options *v1.UpdateOptions) (daemonset.Object, bool, error)
        + GetResetFields() <font color=blue>map</font>[fieldpath.APIVersion]*fieldpath.Set
        + ConvertToTable(ctx context.Context, object daemonset.Object, tableOptions daemonset.Object) (*v1.Table, error)

    }
}
"registry.Store" *- - "daemonset.REST"

"daemonset.CategoriesProvider" <|- - "daemonset.REST"
"daemonset.ShortNamesProvider" <|- - "daemonset.REST"
"daemonset.CreaterUpdater" <|- - "daemonset.StatusREST"
"daemonset.Getter" <|- - "daemonset.StatusREST"
"daemonset.ResetFieldsStrategy" <|- - "daemonset.StatusREST"
"daemonset.StandardStorage" <|- - "daemonset.StatusREST"
"daemonset.Storage" <|- - "daemonset.StatusREST"
"daemonset.TableConvertor" <|- - "daemonset.StatusREST"
"daemonset.Updater" <|- - "daemonset.StatusREST"

"__builtin__.string" #.. "daemonset.GarbageCollectionPolicy"
"__builtin__.string" #.. "daemonset.Identifier"
"daemonset.fontcolorbluefuncfontcontextContextruntimeObjecterror" #.. "daemonset.ValidateObjectFunc"
"daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjectruntimeObjecterror" #.. "daemonset.TransformFunc"
"daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjecterror" #.. "daemonset.ValidateObjectUpdateFunc"
"daemonset.Serializer" #.. "daemonset.Codec"
@enduml

@startuml
namespace daemonset {
    class daemonSetStatusStrategy << (S,Aquamarine) >> {
        + GetResetFields() <font color=blue>map</font>[fieldpath.APIVersion]*fieldpath.Set
        + PrepareForUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) 
        + ValidateUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) field.ErrorList
        + WarningsOnUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) []string

    }
    class daemonSetStrategy << (S,Aquamarine) >> {
        + DefaultGarbageCollectionPolicy(ctx context.Context) daemonset.GarbageCollectionPolicy
        + NamespaceScoped() bool
        + GetResetFields() <font color=blue>map</font>[fieldpath.APIVersion]*fieldpath.Set
        + PrepareForCreate(ctx context.Context, obj daemonset.Object) 
        + PrepareForUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) 
        + Validate(ctx context.Context, obj daemonset.Object) field.ErrorList
        + WarningsOnCreate(ctx context.Context, obj daemonset.Object) []string
        + Canonicalize(obj daemonset.Object) 
        + AllowCreateOnUpdate() bool
        + ValidateUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) field.ErrorList
        + WarningsOnUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) []string
        + AllowUnconditionalUpdate() bool

    }
}
"daemonset.daemonSetStrategy" *- - "daemonset.daemonSetStatusStrategy"
"names.NameGenerator" *- - "daemonset.daemonSetStrategy"
"daemonset.ObjectTyper" *- - "daemonset.daemonSetStrategy"

"daemonset.ResetFieldsStrategy" <|- - "daemonset.daemonSetStatusStrategy"
"daemonset.GarbageCollectionDeleteStrategy" <|- - "daemonset.daemonSetStrategy"
"daemonset.NamespaceScopedStrategy" <|- - "daemonset.daemonSetStrategy"
"daemonset.RESTCreateStrategy" <|- - "daemonset.daemonSetStrategy"
"daemonset.RESTUpdateStrategy" <|- - "daemonset.daemonSetStrategy"
"daemonset.ResetFieldsStrategy" <|- - "daemonset.daemonSetStrategy"
"daemonset.Scoper" <|- - "daemonset.daemonSetStrategy"

namespace daemonset {
    interface CategoriesProvider  {
        + Categories() []string

    }
    interface CollectionDeleter  {
        + DeleteCollection(ctx context.Context, deleteValidation ValidateObjectFunc, options *v1.DeleteOptions, listOptions *internalversion.ListOptions) (daemonset.Object, error)

    }
    interface Connecter  {
        + Connect(ctx context.Context, id string, options daemonset.Object, r Responder) (http.Handler, error)
        + NewConnectOptions() (daemonset.Object, bool, string)
        + ConnectMethods() []string

    }
    interface CreateUpdateResetFieldsStrategy  {
    }
    interface Creater  {
        + New() daemonset.Object
        + Create(ctx context.Context, obj daemonset.Object, createValidation ValidateObjectFunc, options *v1.CreateOptions) (daemonset.Object, error)

    }
    interface CreaterUpdater  {
        + Update(ctx context.Context, name string, objInfo UpdatedObjectInfo, createValidation ValidateObjectFunc, updateValidation ValidateObjectUpdateFunc, forceAllowCreate bool, options *v1.UpdateOptions) (daemonset.Object, bool, error)

    }
    interface GarbageCollectionDeleteStrategy  {
        + DefaultGarbageCollectionPolicy(ctx context.Context) GarbageCollectionPolicy

    }
    interface Getter  {
        + Get(ctx context.Context, name string, options *v1.GetOptions) (daemonset.Object, error)

    }
    interface GetterWithOptions  {
        + Get(ctx context.Context, name string, options daemonset.Object) (daemonset.Object, error)
        + NewGetOptions() (daemonset.Object, bool, string)

    }
    interface GracefulDeleter  {
        + Delete(ctx context.Context, name string, deleteValidation ValidateObjectFunc, options *v1.DeleteOptions) (daemonset.Object, bool, error)

    }
    interface GroupVersionAcceptor  {
        + AcceptsGroupVersion(gv schema.GroupVersion) bool

    }
    interface GroupVersionKindProvider  {
        + GroupVersionKind(containingGV schema.GroupVersion) schema.GroupVersionKind

    }
    interface KindProvider  {
        + Kind() string

    }
    interface Lister  {
        + NewList() daemonset.Object
        + List(ctx context.Context, options *internalversion.ListOptions) (daemonset.Object, error)

    }
    interface MayReturnFullObjectDeleter  {
        + DeleteReturnsDeletedObject() bool

    }
    interface NamedCreater  {
        + New() daemonset.Object
        + Create(ctx context.Context, name string, obj daemonset.Object, createValidation ValidateObjectFunc, options *v1.CreateOptions) (daemonset.Object, error)

    }
    interface NamespaceScopedStrategy  {
        + NamespaceScoped() bool

    }
    interface Patcher  {
    }
    interface RESTCreateStrategy  {
        + NamespaceScoped() bool
        + PrepareForCreate(ctx context.Context, obj daemonset.Object) 
        + Validate(ctx context.Context, obj daemonset.Object) field.ErrorList
        + WarningsOnCreate(ctx context.Context, obj daemonset.Object) []string
        + Canonicalize(obj daemonset.Object) 

    }
    interface RESTDeleteStrategy  {
    }
    interface RESTGracefulDeleteStrategy  {
        + CheckGracefulDelete(ctx context.Context, obj daemonset.Object, options *v1.DeleteOptions) bool

    }
    interface RESTUpdateStrategy  {
        + NamespaceScoped() bool
        + AllowCreateOnUpdate() bool
        + PrepareForUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) 
        + ValidateUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) field.ErrorList
        + WarningsOnUpdate(ctx context.Context, obj daemonset.Object, old daemonset.Object) []string
        + Canonicalize(obj daemonset.Object) 
        + AllowUnconditionalUpdate() bool

    }
    interface Redirector  {
        + ResourceLocation(ctx context.Context, id string) (*url.URL, http.RoundTripper, error)

    }
    interface ResetFieldsStrategy  {
        + GetResetFields() <font color=blue>map</font>[fieldpath.APIVersion]*fieldpath.Set

    }
    interface ResourceStreamer  {
        + InputStream(ctx context.Context, apiVersion string, acceptHeader string) (io.ReadCloser, bool, string, error)

    }
    interface Responder  {
        + Object(statusCode int, obj daemonset.Object) 
        + Error(err error) 

    }
    interface Scoper  {
        + NamespaceScoped() bool

    }
    interface ShortNamesProvider  {
        + ShortNames() []string

    }
    interface SingularNameProvider  {
        + GetSingularName() string

    }
    interface StandardStorage  {
        + Destroy() 

    }
    interface Storage  {
        + New() daemonset.Object
        + Destroy() 

    }
    interface StorageMetadata  {
        + ProducesMIMETypes(verb string) []string
        + ProducesObject(verb string) <font color=blue>interface</font>{}

    }
    interface StorageVersionProvider  {
        + StorageVersion() daemonset.GroupVersioner

    }
    interface TableConvertor  {
        + ConvertToTable(ctx context.Context, object daemonset.Object, tableOptions daemonset.Object) (*v1.Table, error)

    }
    interface UpdateResetFieldsStrategy  {
    }
    interface UpdatedObjectInfo  {
        + Preconditions() *v1.Preconditions
        + UpdatedObject(ctx context.Context, oldObj daemonset.Object) (daemonset.Object, error)

    }
    interface Updater  {
        + New() daemonset.Object
        + Update(ctx context.Context, name string, objInfo UpdatedObjectInfo, createValidation ValidateObjectFunc, updateValidation ValidateObjectUpdateFunc, forceAllowCreate bool, options *v1.UpdateOptions) (daemonset.Object, bool, error)

    }
    interface Watcher  {
        + Watch(ctx context.Context, options *internalversion.ListOptions) (watch.Interface, error)

    }
    class defaultUpdatedObjectInfo << (S,Aquamarine) >> {
        - obj daemonset.Object
        - transformers []TransformFunc

        + Preconditions() *v1.Preconditions
        + UpdatedObject(ctx context.Context, oldObj daemonset.Object) (daemonset.Object, error)

    }
    class daemonset.GarbageCollectionPolicy << (T, #FF7700) >>  {
    }
    class daemonset.TransformFunc << (T, #FF7700) >>  {
    }
    class daemonset.ValidateObjectFunc << (T, #FF7700) >>  {
    }
    class daemonset.ValidateObjectUpdateFunc << (T, #FF7700) >>  {
    }
    class wrappedUpdatedObjectInfo << (S,Aquamarine) >> {
        - objInfo UpdatedObjectInfo
        - transformers []TransformFunc

        + Preconditions() *v1.Preconditions
        + UpdatedObject(ctx context.Context, oldObj daemonset.Object) (daemonset.Object, error)

    }
    class "<font color=blue>func</font>(context.Context, daemonset.Object) error" as fontcolorbluefuncfontcontextContextruntimeObjecterror {
    }
    class "<font color=blue>func</font>(context.Context, daemonset.Object, daemonset.Object) error" as fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjecterror {
    }
    class "<font color=blue>func</font>(context.Context, daemonset.Object, daemonset.Object) (daemonset.Object, error)" as fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjectruntimeObjecterror {
    }
}
"daemonset.RESTCreateUpdateStrategy" *- - "daemonset.CreateUpdateResetFieldsStrategy"
"daemonset.ResetFieldsStrategy" *- - "daemonset.CreateUpdateResetFieldsStrategy"
"daemonset.Creater" *- - "daemonset.CreaterUpdater"
"daemonset.TableConvertor" *- - "daemonset.Lister"
"daemonset.Getter" *- - "daemonset.Patcher"
"daemonset.Updater" *- - "daemonset.Patcher"
"daemonset.CollectionDeleter" *- - "daemonset.StandardStorage"
"daemonset.CreaterUpdater" *- - "daemonset.StandardStorage"
"daemonset.Getter" *- - "daemonset.StandardStorage"
"daemonset.GracefulDeleter" *- - "daemonset.StandardStorage"
"daemonset.Lister" *- - "daemonset.StandardStorage"
"daemonset.Watcher" *- - "daemonset.StandardStorage"
"daemonset.RESTUpdateStrategy" *- - "daemonset.UpdateResetFieldsStrategy"
"daemonset.ResetFieldsStrategy" *- - "daemonset.UpdateResetFieldsStrategy"

"daemonset.UpdatedObjectInfo" <|- - "daemonset.defaultUpdatedObjectInfo"
"daemonset.UpdatedObjectInfo" <|- - "daemonset.wrappedUpdatedObjectInfo"

namespace daemonset {
    interface CacheableObject  {
        + CacheEncode(id Identifier, encode <font color=blue>func</font>(Object, io.Writer) error, w io.Writer) error
        + GetObject() Object

    }
    interface ClientNegotiator  {
        + Encoder(contentType string, params <font color=blue>map</font>[string]string) (Encoder, error)
        + Decoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, error)
        + StreamDecoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, Serializer, Framer, error)

    }
    interface Decoder  {
        + Decode(data []byte, defaults *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    interface Encoder  {
        + Encode(obj Object, w io.Writer) error
        + Identifier() Identifier

    }
    interface EncoderWithAllocator  {
        + EncodeWithAllocator(obj Object, w io.Writer, memAlloc MemoryAllocator) error

    }
    interface EquivalentResourceMapper  {
        + EquivalentResourcesFor(resource schema.GroupVersionResource, subresource string) []schema.GroupVersionResource
        + KindFor(resource schema.GroupVersionResource, subresource string) schema.GroupVersionKind

    }
    interface EquivalentResourceRegistry  {
        + RegisterKindFor(resource schema.GroupVersionResource, subresource string, kind schema.GroupVersionKind) 

    }
    interface Framer  {
        + NewFrameReader(r io.ReadCloser) io.ReadCloser
        + NewFrameWriter(w io.Writer) io.Writer

    }
    interface GroupVersioner  {
        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    interface MemoryAllocator  {
        + Allocate(n uint64) []byte

    }
    interface Namer  {
        + Name(obj Object) (string, error)
        + Namespace(obj Object) (string, error)

    }
    interface NegotiatedSerializer  {
        + SupportedMediaTypes() []SerializerInfo
        + EncoderForVersion(serializer Encoder, gv GroupVersioner) Encoder
        + DecoderToVersion(serializer Decoder, gv GroupVersioner) Decoder

    }
    interface NestedObjectDecoder  {
        + DecodeNestedObjects(d Decoder) error

    }
    interface NestedObjectEncoder  {
        + EncodeNestedObjects(e Encoder) error

    }
    interface Object  {
        + GetObjectKind() schema.ObjectKind
        + DeepCopyObject() Object

    }
    interface ObjectConvertor  {
        + Convert(in <font color=blue>interface</font>{}, out <font color=blue>interface</font>{}, context <font color=blue>interface</font>{}) error
        + ConvertToVersion(in Object, gv GroupVersioner) (Object, error)
        + ConvertFieldLabel(gvk schema.GroupVersionKind, label string, value string) (string, string, error)

    }
    interface ObjectCreater  {
        + New(kind schema.GroupVersionKind) (Object, error)

    }
    interface ObjectDefaulter  {
        + Default(in Object) 

    }
    interface ObjectTyper  {
        + ObjectKinds( Object) ([]schema.GroupVersionKind, bool, error)
        + Recognizes(gvk schema.GroupVersionKind) bool

    }
    interface ObjectVersioner  {
        + ConvertToVersion(in Object, gv GroupVersioner) (Object, error)

    }
    interface ParameterCodec  {
        + DecodeParameters(parameters url.Values, from schema.GroupVersion, into Object) error
        + EncodeParameters(obj Object, to schema.GroupVersion) (url.Values, error)

    }
    interface ResourceVersioner  {
        + SetResourceVersion(obj Object, version string) error
        + ResourceVersion(obj Object) (string, error)

    }
    interface Serializer  {
    }
    class SerializerInfo << (S,Aquamarine) >> {
        + MediaType string
        + MediaTypeType string
        + MediaTypeSubType string
        + EncodesAsText bool
        + Serializer Serializer
        + PrettySerializer Serializer
        + StrictSerializer Serializer
        + StreamSerializer *StreamSerializerInfo

    }
    interface StorageSerializer  {
        + SupportedMediaTypes() []SerializerInfo
        + UniversalDeserializer() Decoder
        + EncoderForVersion(serializer Encoder, gv GroupVersioner) Encoder
        + DecoderToVersion(serializer Decoder, gv GroupVersioner) Decoder

    }
    class StreamSerializerInfo << (S,Aquamarine) >> {
        + EncodesAsText bool

    }
    interface Unstructured  {
        + NewEmptyInstance() Unstructured
        + UnstructuredContent() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + SetUnstructuredContent( <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 
        + IsList() bool
        + EachListItem( <font color=blue>func</font>(Object) error) error

    }
    class daemonset.Codec << (T, #FF7700) >>  {
    }
    class daemonset.Identifier << (T, #FF7700) >>  {
    }
}
"daemonset.Encoder" *- - "daemonset.EncoderWithAllocator"
"daemonset.EquivalentResourceMapper" *- - "daemonset.EquivalentResourceRegistry"
"daemonset.Decoder" *- - "daemonset.Serializer"
"daemonset.Encoder" *- - "daemonset.Serializer"
"daemonset.Framer" *- - "daemonset.StreamSerializerInfo"
"daemonset.Serializer" *- - "daemonset.StreamSerializerInfo"
"daemonset.Object" *- - "daemonset.Unstructured"


namespace daemonset {
    class REST << (S,Aquamarine) >> {
        + ShortNames() []string
        + Categories() []string

    }
    class StatusREST << (S,Aquamarine) >> {
        - store *registry.Store

        + New() daemonset.Object
        + Destroy() 
        + Get(ctx context.Context, name string, options *v1.GetOptions) (daemonset.Object, error)
        + Update(ctx context.Context, name string, objInfo daemonset.UpdatedObjectInfo, createValidation daemonset.ValidateObjectFunc, updateValidation daemonset.ValidateObjectUpdateFunc, forceAllowCreate bool, options *v1.UpdateOptions) (daemonset.Object, bool, error)
        + GetResetFields() <font color=blue>map</font>[fieldpath.APIVersion]*fieldpath.Set
        + ConvertToTable(ctx context.Context, object daemonset.Object, tableOptions daemonset.Object) (*v1.Table, error)

    }
}
"registry.Store" *- - "daemonset.REST"

"daemonset.CategoriesProvider" <|- - "daemonset.REST"
"daemonset.ShortNamesProvider" <|- - "daemonset.REST"
"daemonset.CreaterUpdater" <|- - "daemonset.StatusREST"
"daemonset.Getter" <|- - "daemonset.StatusREST"
"daemonset.ResetFieldsStrategy" <|- - "daemonset.StatusREST"
"daemonset.StandardStorage" <|- - "daemonset.StatusREST"
"daemonset.Storage" <|- - "daemonset.StatusREST"
"daemonset.TableConvertor" <|- - "daemonset.StatusREST"
"daemonset.Updater" <|- - "daemonset.StatusREST"

"__builtin__.string" #.. "daemonset.GarbageCollectionPolicy"
"__builtin__.string" #.. "daemonset.Identifier"
"daemonset.fontcolorbluefuncfontcontextContextruntimeObjecterror" #.. "daemonset.ValidateObjectFunc"
"daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjectruntimeObjecterror" #.. "daemonset.TransformFunc"
"daemonset.fontcolorbluefuncfontcontextContextruntimeObjectruntimeObjecterror" #.. "daemonset.ValidateObjectUpdateFunc"
"daemonset.Serializer" #.. "daemonset.Codec"
@enduml

PlantUML version 1.2022.7(Tue Aug 23 01:01:30 CST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: zh
Country: CN
--></g></svg>