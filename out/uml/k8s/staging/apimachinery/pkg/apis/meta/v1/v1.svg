<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1564px" preserveAspectRatio="none" style="width:6878px;height:1564px;background:#FFFFFF;" version="1.1" viewBox="0 0 6878 1564" width="6878px" zoomAndPan="magnify"><defs/><g><!--MD5=[1156dc55ff285b7da01933d52c7e35c0]
cluster unstructured--><g id="cluster_unstructured"><path d="M5897.5,561.032 L5989.5,561.032 A3.75,3.75 0 0 1 5992,563.532 L5999,587.3039 L6868.5,587.3039 A2.5,2.5 0 0 1 6871,589.8039 L6871,678.532 A2.5,2.5 0 0 1 6868.5,681.032 L5897.5,681.032 A2.5,2.5 0 0 1 5895,678.532 L5895,563.532 A2.5,2.5 0 0 1 5897.5,561.032 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="5895" x2="5999" y1="587.3039" y2="587.3039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="91" x="5899" y="579.2719">unstructured</text></g><!--MD5=[9a32cd3984fdd08205638aa42968fc5c]
cluster v1--><g id="cluster_v1"><path d="M8.5,126.532 L25.5,126.532 A3.75,3.75 0 0 1 28,129.032 L35,152.8039 L5884.5,152.8039 A2.5,2.5 0 0 1 5887,155.3039 L5887,1555.032 A2.5,2.5 0 0 1 5884.5,1557.532 L8.5,1557.532 A2.5,2.5 0 0 1 6,1555.032 L6,129.032 A2.5,2.5 0 0 1 8.5,126.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="35" y1="152.8039" y2="152.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="16" x="10" y="144.7719">v1</text></g><!--MD5=[8524ec155becca105e512fae2a43ec31]
cluster unstructuredscheme--><g id="cluster_unstructuredscheme"><path d="M5947.5,16.532 L6092.5,16.532 A3.75,3.75 0 0 1 6095,19.032 L6102,42.8039 L6446.5,42.8039 A2.5,2.5 0 0 1 6449,45.3039 L6449,335.032 A2.5,2.5 0 0 1 6446.5,337.532 L5947.5,337.532 A2.5,2.5 0 0 1 5945,335.032 L5945,19.032 A2.5,2.5 0 0 1 5947.5,16.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="5945" x2="6102" y1="42.8039" y2="42.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="144" x="5949" y="34.7719">unstructuredscheme</text></g><!--MD5=[3dab47d3fc3e186ff10f67819eb99ff8]
cluster time--><g id="cluster_time"><path d="M3926.5,16.532 L3959.5,16.532 A3.75,3.75 0 0 1 3962,19.032 L3969,42.8039 L4128.5,42.8039 A2.5,2.5 0 0 1 4131,45.3039 L4131,93.032 A2.5,2.5 0 0 1 4128.5,95.532 L3926.5,95.532 A2.5,2.5 0 0 1 3924,93.032 L3924,19.032 A2.5,2.5 0 0 1 3926.5,16.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="3924" x2="3969" y1="42.8039" y2="42.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="32" x="3928" y="34.7719">time</text></g><!--MD5=[7d5f1d1e2dbd347e8e6787ff42fd6706]
cluster validation--><g id="cluster_validation"><path d="M6537.5,6.532 L6607.5,6.532 A3.75,3.75 0 0 1 6610,9.032 L6617,32.8039 L6828.5,32.8039 A2.5,2.5 0 0 1 6831,35.3039 L6831,103.032 A2.5,2.5 0 0 1 6828.5,105.532 L6537.5,105.532 A2.5,2.5 0 0 1 6535,103.032 L6535,9.032 A2.5,2.5 0 0 1 6537.5,6.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6535" x2="6617" y1="32.8039" y2="32.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="69" x="6539" y="24.7719">validation</text></g><!--MD5=[cd97adcaff9d8e5272c57b78b61bd173]
class unstructured.Unstructured--><g id="elem_unstructured.Unstructured"><rect codeLine="2" fill="#F1F1F1" height="60.2719" id="unstructured.Unstructured" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="219" x="6389.5" y="602.532"/><ellipse cx="6450.75" cy="618.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6450.9375,625.2351 C6453.2344,625.2351 6454.6875,623.6101 6454.6875,621.6101 C6454.6875,619.782 6453.8594,618.9382 6452.7188,618.1414 L6451.7031,617.4226 C6450.5781,616.6101 6450.1563,616.3132 6450.1563,615.4539 C6450.1563,614.7664 6450.6406,614.3601 6451.2188,614.3601 C6451.9531,614.3601 6452.4375,614.7507 6453.1406,615.3914 L6454.4531,613.8132 C6453.4844,612.7976 6452.4688,612.2039 6451.2031,612.2039 C6449.0625,612.2039 6447.6094,613.7195 6447.6094,615.6414 C6447.6094,617.4382 6448.5313,618.3445 6449.625,619.0945 L6450.7188,619.8445 C6451.6563,620.4539 6452.1094,621.032 6452.1094,621.9695 C6452.1094,622.6414 6451.6406,623.0632 6450.9375,623.0632 C6450.2344,623.0632 6449.4844,622.5476 6448.8281,621.7195 L6447.2813,623.407 C6448.3125,624.5945 6449.6094,625.2351 6450.9375,625.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="6471.25" y="624.636">Unstructured</text><line style="stroke:#181818;stroke-width:0.5;" x1="6390.5" x2="6607.5" y1="634.532" y2="634.532"/><ellipse cx="6400.5" cy="650.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="43" x="6409.5" y="654.7719">Object</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="6455.5" y="654.7719">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="6485.5" y="654.7719">[string]</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="6533.5" y="654.7719">interface</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="6592.5" y="654.7719">{}</text></g><!--MD5=[49f0db45c0736743fd1ca3d6e7965739]
class unstructured.UnstructuredList--><g id="elem_unstructured.UnstructuredList"><rect codeLine="64" fill="#F1F1F1" height="80.5438" id="unstructured.UnstructuredList" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="219" x="6643.5" y="592.032"/><ellipse cx="6692.75" cy="608.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6692.9375,614.7351 C6695.2344,614.7351 6696.6875,613.1101 6696.6875,611.1101 C6696.6875,609.282 6695.8594,608.4382 6694.7188,607.6414 L6693.7031,606.9226 C6692.5781,606.1101 6692.1563,605.8132 6692.1563,604.9539 C6692.1563,604.2664 6692.6406,603.8601 6693.2188,603.8601 C6693.9531,603.8601 6694.4375,604.2507 6695.1406,604.8914 L6696.4531,603.3132 C6695.4844,602.2976 6694.4688,601.7039 6693.2031,601.7039 C6691.0625,601.7039 6689.6094,603.2195 6689.6094,605.1414 C6689.6094,606.9382 6690.5313,607.8445 6691.625,608.5945 L6692.7188,609.3445 C6693.6563,609.9539 6694.1094,610.532 6694.1094,611.4695 C6694.1094,612.1414 6693.6406,612.5632 6692.9375,612.5632 C6692.2344,612.5632 6691.4844,612.0476 6690.8281,611.2195 L6689.2813,612.907 C6690.3125,614.0945 6691.6094,614.7351 6692.9375,614.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="6713.25" y="614.136">UnstructuredList</text><line style="stroke:#181818;stroke-width:0.5;" x1="6644.5" x2="6861.5" y1="624.032" y2="624.032"/><ellipse cx="6654.5" cy="639.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="43" x="6663.5" y="644.2719">Object</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="6709.5" y="644.2719">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="6739.5" y="644.2719">[string]</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="6787.5" y="644.2719">interface</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="6846.5" y="644.2719">{}</text><ellipse cx="6654.5" cy="659.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="6663.5" y="664.5438">Items []Unstructured</text></g><!--MD5=[4312d011528049a526c6976f514c9a18]
class unstructured.jsonFallbackEncoder--><g id="elem_unstructured.jsonFallbackEncoder"><rect codeLine="97" fill="#F1F1F1" height="80.5438" id="unstructured.jsonFallbackEncoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="208" x="6146" y="592.032"/><ellipse cx="6178.1" cy="608.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6178.2875,614.7351 C6180.5844,614.7351 6182.0375,613.1101 6182.0375,611.1101 C6182.0375,609.282 6181.2094,608.4382 6180.0688,607.6414 L6179.0531,606.9226 C6177.9281,606.1101 6177.5063,605.8132 6177.5063,604.9539 C6177.5063,604.2664 6177.9906,603.8601 6178.5688,603.8601 C6179.3031,603.8601 6179.7875,604.2507 6180.4906,604.8914 L6181.8031,603.3132 C6180.8344,602.2976 6179.8188,601.7039 6178.5531,601.7039 C6176.4125,601.7039 6174.9594,603.2195 6174.9594,605.1414 C6174.9594,606.9382 6175.8813,607.8445 6176.975,608.5945 L6178.0688,609.3445 C6179.0063,609.9539 6179.4594,610.532 6179.4594,611.4695 C6179.4594,612.1414 6178.9906,612.5632 6178.2875,612.5632 C6177.5844,612.5632 6176.8344,612.0476 6176.1781,611.2195 L6174.6313,612.907 C6175.6625,614.0945 6176.9594,614.7351 6178.2875,614.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="6195.9" y="614.136">jsonFallbackEncoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="6147" x2="6353" y1="624.032" y2="624.032"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6154" y="636.6679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="6166" y="644.2719">encoder runtime.Encoder</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6154" y="656.9398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="6166" y="664.5438">identifier runtime.Identifier</text></g><!--MD5=[4891c0abc2e39b680c402201fdca0cce]
class unstructured.unstructuredJSONScheme--><g id="elem_unstructured.unstructuredJSONScheme"><rect codeLine="105" fill="#F1F1F1" height="40" id="unstructured.unstructuredJSONScheme" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="208" x="5903" y="612.532"/><ellipse cx="5918" cy="628.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5918.1875,635.2351 C5920.4844,635.2351 5921.9375,633.6101 5921.9375,631.6101 C5921.9375,629.782 5921.1094,628.9382 5919.9688,628.1414 L5918.9531,627.4226 C5917.8281,626.6101 5917.4063,626.3132 5917.4063,625.4539 C5917.4063,624.7664 5917.8906,624.3601 5918.4688,624.3601 C5919.2031,624.3601 5919.6875,624.7507 5920.3906,625.3914 L5921.7031,623.8132 C5920.7344,622.7976 5919.7188,622.2039 5918.4531,622.2039 C5916.3125,622.2039 5914.8594,623.7195 5914.8594,625.6414 C5914.8594,627.4382 5915.7813,628.3445 5916.875,629.0945 L5917.9688,629.8445 C5918.9063,630.4539 5919.3594,631.032 5919.3594,631.9695 C5919.3594,632.6414 5918.8906,633.0632 5918.1875,633.0632 C5917.4844,633.0632 5916.7344,632.5476 5916.0781,631.7195 L5914.5313,633.407 C5915.5625,634.5945 5916.8594,635.2351 5918.1875,635.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="5932" y="634.636">unstructuredJSONScheme</text><line style="stroke:#181818;stroke-width:0.5;" x1="5904" x2="6110" y1="644.532" y2="644.532"/></g><!--MD5=[1879184bdb9be09e7308bf431e04e8c7]
class v1.Common--><g id="elem_v1.Common"><rect codeLine="309" fill="#F1F1F1" height="40" id="v1.Common" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="92" x="5537" y="259.032"/><ellipse cx="5552" cy="275.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5548.3594,281.532 L5555.1406,281.532 L5555.1406,279.4539 L5552.9844,279.4539 L5552.9844,271.0164 L5555.1406,271.0164 L5555.1406,268.907 L5548.3594,268.907 L5548.3594,271.0164 L5550.4531,271.0164 L5550.4531,279.4539 L5548.3594,279.4539 L5548.3594,281.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="60" x="5566" y="281.136">Common</text><line style="stroke:#181818;stroke-width:0.5;" x1="5538" x2="5628" y1="291.032" y2="291.032"/></g><!--MD5=[51dc5f0f6037e533cf3c0e06d7426130]
class v1.ListInterface--><g id="elem_v1.ListInterface"><rect codeLine="684" fill="#F1F1F1" height="40" id="v1.ListInterface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="5664.5" y="259.032"/><ellipse cx="5679.5" cy="275.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5675.8594,281.532 L5682.6406,281.532 L5682.6406,279.4539 L5680.4844,279.4539 L5680.4844,271.0164 L5682.6406,271.0164 L5682.6406,268.907 L5675.8594,268.907 L5675.8594,271.0164 L5677.9531,271.0164 L5677.9531,279.4539 L5675.8594,279.4539 L5675.8594,281.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="83" x="5693.5" y="281.136">ListInterface</text><line style="stroke:#181818;stroke-width:0.5;" x1="5665.5" x2="5778.5" y1="291.032" y2="291.032"/></g><!--MD5=[96ce20a9cf489ca171f7a90fe5f01dba]
class v1.Object--><g id="elem_v1.Object"><rect codeLine="823" fill="#F1F1F1" height="40" id="v1.Object" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="75" x="5426.5" y="259.032"/><ellipse cx="5441.5" cy="275.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5437.8594,281.532 L5444.6406,281.532 L5444.6406,279.4539 L5442.4844,279.4539 L5442.4844,271.0164 L5444.6406,271.0164 L5444.6406,268.907 L5437.8594,268.907 L5437.8594,271.0164 L5439.9531,271.0164 L5439.9531,279.4539 L5437.8594,279.4539 L5437.8594,281.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="43" x="5455.5" y="281.136">Object</text><line style="stroke:#181818;stroke-width:0.5;" x1="5427.5" x2="5500.5" y1="291.032" y2="291.032"/></g><!--MD5=[25856dd515094cf5d5bcdc3ae218e034]
class v1.Type--><g id="elem_v1.Type"><rect codeLine="1310" fill="#F1F1F1" height="40" id="v1.Type" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="64" x="5815" y="259.032"/><ellipse cx="5830" cy="275.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5826.3594,281.532 L5833.1406,281.532 L5833.1406,279.4539 L5830.9844,279.4539 L5830.9844,271.0164 L5833.1406,271.0164 L5833.1406,268.907 L5826.3594,268.907 L5826.3594,271.0164 L5828.4531,271.0164 L5828.4531,279.4539 L5826.3594,279.4539 L5826.3594,281.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="32" x="5844" y="281.136">Type</text><line style="stroke:#181818;stroke-width:0.5;" x1="5816" x2="5878" y1="291.032" y2="291.032"/></g><!--MD5=[b0c2f17a2d7f276e9ed954b1fd170289]
class v1.APIGroup--><g id="elem_v1.APIGroup"><rect codeLine="155" fill="#F1F1F1" height="121.0876" id="v1.APIGroup" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="410" x="2886" y="915.032"/><ellipse cx="3055.25" cy="931.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3055.4375,937.7351 C3057.7344,937.7351 3059.1875,936.1101 3059.1875,934.1101 C3059.1875,932.282 3058.3594,931.4382 3057.2188,930.6414 L3056.2031,929.9226 C3055.0781,929.1101 3054.6563,928.8132 3054.6563,927.9539 C3054.6563,927.2664 3055.1406,926.8601 3055.7188,926.8601 C3056.4531,926.8601 3056.9375,927.2507 3057.6406,927.8914 L3058.9531,926.3132 C3057.9844,925.2976 3056.9688,924.7039 3055.7031,924.7039 C3053.5625,924.7039 3052.1094,926.2195 3052.1094,928.1414 C3052.1094,929.9382 3053.0313,930.8445 3054.125,931.5945 L3055.2188,932.3445 C3056.1563,932.9539 3056.6094,933.532 3056.6094,934.4695 C3056.6094,935.1414 3056.1406,935.5632 3055.4375,935.5632 C3054.7344,935.5632 3053.9844,935.0476 3053.3281,934.2195 L3051.7813,935.907 C3052.8125,937.0945 3054.1094,937.7351 3055.4375,937.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="3075.75" y="937.136">APIGroup</text><line style="stroke:#181818;stroke-width:0.5;" x1="2887" x2="3295" y1="947.032" y2="947.032"/><ellipse cx="2897" cy="962.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="2906" y="967.2719">Name string</text><ellipse cx="2897" cy="982.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="2906" y="987.5438">Versions []GroupVersionForDiscovery</text><ellipse cx="2897" cy="1003.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="2906" y="1007.8157">PreferredVersion GroupVersionForDiscovery</text><ellipse cx="2897" cy="1023.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="384" x="2906" y="1028.0876">ServerAddressByClientCIDRs []ServerAddressByClientCIDR</text></g><!--MD5=[1b1c227d3e4b02c4a5f54f1ffc4b7c80]
class v1.APIGroupList--><g id="elem_v1.APIGroupList"><rect codeLine="181" fill="#F1F1F1" height="60.2719" id="v1.APIGroupList" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="150" x="379" y="945.532"/><ellipse cx="407.95" cy="961.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M408.1375,968.2351 C410.4344,968.2351 411.8875,966.6101 411.8875,964.6101 C411.8875,962.782 411.0594,961.9382 409.9188,961.1414 L408.9031,960.4226 C407.7781,959.6101 407.3563,959.3132 407.3563,958.4539 C407.3563,957.7664 407.8406,957.3601 408.4188,957.3601 C409.1531,957.3601 409.6375,957.7507 410.3406,958.3914 L411.6531,956.8132 C410.6844,955.7976 409.6688,955.2039 408.4031,955.2039 C406.2625,955.2039 404.8094,956.7195 404.8094,958.6414 C404.8094,960.4382 405.7313,961.3445 406.825,962.0945 L407.9188,962.8445 C408.8563,963.4539 409.3094,964.032 409.3094,964.9695 C409.3094,965.6414 408.8406,966.0632 408.1375,966.0632 C407.4344,966.0632 406.6844,965.5476 406.0281,964.7195 L404.4813,966.407 C405.5125,967.5945 406.8094,968.2351 408.1375,968.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="425.05" y="967.636">APIGroupList</text><line style="stroke:#181818;stroke-width:0.5;" x1="380" x2="528" y1="977.532" y2="977.532"/><ellipse cx="390" cy="993.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="399" y="997.7719">Groups []APIGroup</text></g><!--MD5=[ca8171a2cd5a2e28a496eb52037ec881]
class v1.APIResource--><g id="elem_v1.APIResource"><rect codeLine="204" fill="#F1F1F1" height="242.7191" id="v1.APIResource" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="200" x="4356" y="157.532"/><ellipse cx="4410.25" cy="173.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4410.4375,180.2351 C4412.7344,180.2351 4414.1875,178.6101 4414.1875,176.6101 C4414.1875,174.782 4413.3594,173.9382 4412.2188,173.1414 L4411.2031,172.4226 C4410.0781,171.6101 4409.6563,171.3132 4409.6563,170.4539 C4409.6563,169.7664 4410.1406,169.3601 4410.7188,169.3601 C4411.4531,169.3601 4411.9375,169.7507 4412.6406,170.3914 L4413.9531,168.8132 C4412.9844,167.7976 4411.9688,167.2039 4410.7031,167.2039 C4408.5625,167.2039 4407.1094,168.7195 4407.1094,170.6414 C4407.1094,172.4382 4408.0313,173.3445 4409.125,174.0945 L4410.2188,174.8445 C4411.1563,175.4539 4411.6094,176.032 4411.6094,176.9695 C4411.6094,177.6414 4411.1406,178.0632 4410.4375,178.0632 C4409.7344,178.0632 4408.9844,177.5476 4408.3281,176.7195 L4406.7813,178.407 C4407.8125,179.5945 4409.1094,180.2351 4410.4375,180.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="4430.75" y="179.636">APIResource</text><line style="stroke:#181818;stroke-width:0.5;" x1="4357" x2="4555" y1="189.532" y2="189.532"/><ellipse cx="4367" cy="205.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="4376" y="209.7719">Name string</text><ellipse cx="4367" cy="225.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="4376" y="230.0438">SingularName string</text><ellipse cx="4367" cy="245.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="4376" y="250.3157">Namespaced bool</text><ellipse cx="4367" cy="265.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="4376" y="270.5876">Group string</text><ellipse cx="4367" cy="286.2556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="4376" y="290.8596">Version string</text><ellipse cx="4367" cy="306.5275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="4376" y="311.1315">Kind string</text><ellipse cx="4367" cy="326.7994" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="4376" y="331.4034">Verbs Verbs</text><ellipse cx="4367" cy="347.0713" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="4376" y="351.6753">ShortNames []string</text><ellipse cx="4367" cy="367.3432" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="4376" y="371.9472">Categories []string</text><ellipse cx="4367" cy="387.6151" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="4376" y="392.2191">StorageVersionHash string</text></g><!--MD5=[b18981af4c811251bd81335e88acb070]
class v1.APIResourceList--><g id="elem_v1.APIResourceList"><rect codeLine="235" fill="#F1F1F1" height="80.5438" id="v1.APIResourceList" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="212" x="564" y="935.032"/><ellipse cx="612.25" cy="951.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M612.4375,957.7351 C614.7344,957.7351 616.1875,956.1101 616.1875,954.1101 C616.1875,952.282 615.3594,951.4382 614.2188,950.6414 L613.2031,949.9226 C612.0781,949.1101 611.6563,948.8132 611.6563,947.9539 C611.6563,947.2664 612.1406,946.8601 612.7188,946.8601 C613.4531,946.8601 613.9375,947.2507 614.6406,947.8914 L615.9531,946.3132 C614.9844,945.2976 613.9688,944.7039 612.7031,944.7039 C610.5625,944.7039 609.1094,946.2195 609.1094,948.1414 C609.1094,949.9382 610.0313,950.8445 611.125,951.5945 L612.2188,952.3445 C613.1563,952.9539 613.6094,953.532 613.6094,954.4695 C613.6094,955.1414 613.1406,955.5632 612.4375,955.5632 C611.7344,955.5632 610.9844,955.0476 610.3281,954.2195 L608.7813,955.907 C609.8125,957.0945 611.1094,957.7351 612.4375,957.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="632.75" y="957.136">APIResourceList</text><line style="stroke:#181818;stroke-width:0.5;" x1="565" x2="775" y1="967.032" y2="967.032"/><ellipse cx="575" cy="982.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="584" y="987.2719">GroupVersion string</text><ellipse cx="575" cy="1002.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="584" y="1007.5438">APIResources []APIResource</text></g><!--MD5=[60de531fccafb71365a0290d31377460]
class v1.APIVersions--><g id="elem_v1.APIVersions"><rect codeLine="259" fill="#F1F1F1" height="80.5438" id="v1.APIVersions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="410" x="1014" y="935.032"/><ellipse cx="1175.75" cy="951.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1175.9375,957.7351 C1178.2344,957.7351 1179.6875,956.1101 1179.6875,954.1101 C1179.6875,952.282 1178.8594,951.4382 1177.7188,950.6414 L1176.7031,949.9226 C1175.5781,949.1101 1175.1563,948.8132 1175.1563,947.9539 C1175.1563,947.2664 1175.6406,946.8601 1176.2188,946.8601 C1176.9531,946.8601 1177.4375,947.2507 1178.1406,947.8914 L1179.4531,946.3132 C1178.4844,945.2976 1177.4688,944.7039 1176.2031,944.7039 C1174.0625,944.7039 1172.6094,946.2195 1172.6094,948.1414 C1172.6094,949.9382 1173.5313,950.8445 1174.625,951.5945 L1175.7188,952.3445 C1176.6563,952.9539 1177.1094,953.532 1177.1094,954.4695 C1177.1094,955.1414 1176.6406,955.5632 1175.9375,955.5632 C1175.2344,955.5632 1174.4844,955.0476 1173.8281,954.2195 L1172.2813,955.907 C1173.3125,957.0945 1174.6094,957.7351 1175.9375,957.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="1196.25" y="957.136">APIVersions</text><line style="stroke:#181818;stroke-width:0.5;" x1="1015" x2="1423" y1="967.032" y2="967.032"/><ellipse cx="1025" cy="982.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="1034" y="987.2719">Versions []string</text><ellipse cx="1025" cy="1002.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="384" x="1034" y="1007.5438">ServerAddressByClientCIDRs []ServerAddressByClientCIDR</text></g><!--MD5=[8fcf8bb754259d7224654ebe3ef11376]
class v1.ApplyOptions--><g id="elem_v1.ApplyOptions"><rect codeLine="284" fill="#F1F1F1" height="100.8157" id="v1.ApplyOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="157" x="1459.5" y="925.032"/><ellipse cx="1490.25" cy="941.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1490.4375,947.7351 C1492.7344,947.7351 1494.1875,946.1101 1494.1875,944.1101 C1494.1875,942.282 1493.3594,941.4382 1492.2188,940.6414 L1491.2031,939.9226 C1490.0781,939.1101 1489.6563,938.8132 1489.6563,937.9539 C1489.6563,937.2664 1490.1406,936.8601 1490.7188,936.8601 C1491.4531,936.8601 1491.9375,937.2507 1492.6406,937.8914 L1493.9531,936.3132 C1492.9844,935.2976 1491.9688,934.7039 1490.7031,934.7039 C1488.5625,934.7039 1487.1094,936.2195 1487.1094,938.1414 C1487.1094,939.9382 1488.0313,940.8445 1489.125,941.5945 L1490.2188,942.3445 C1491.1563,942.9539 1491.6094,943.532 1491.6094,944.4695 C1491.6094,945.1414 1491.1406,945.5632 1490.4375,945.5632 C1489.7344,945.5632 1488.9844,945.0476 1488.3281,944.2195 L1486.7813,945.907 C1487.8125,947.0945 1489.1094,947.7351 1490.4375,947.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="1507.75" y="947.136">ApplyOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="1460.5" x2="1615.5" y1="957.032" y2="957.032"/><ellipse cx="1470.5" cy="972.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="1479.5" y="977.2719">DryRun []string</text><ellipse cx="1470.5" cy="992.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="1479.5" y="997.5438">Force bool</text><ellipse cx="1470.5" cy="1013.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="1479.5" y="1017.8157">FieldManager string</text></g><!--MD5=[01ce38f65433ce47ffb06f7ef4f3c8de]
class v1.Condition--><g id="elem_v1.Condition"><rect codeLine="316" fill="#F1F1F1" height="161.6315" id="v1.Condition" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="200" x="4591" y="198.032"/><ellipse cx="4654.25" cy="214.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4654.4375,220.7351 C4656.7344,220.7351 4658.1875,219.1101 4658.1875,217.1101 C4658.1875,215.282 4657.3594,214.4382 4656.2188,213.6414 L4655.2031,212.9226 C4654.0781,212.1101 4653.6563,211.8132 4653.6563,210.9539 C4653.6563,210.2664 4654.1406,209.8601 4654.7188,209.8601 C4655.4531,209.8601 4655.9375,210.2507 4656.6406,210.8914 L4657.9531,209.3132 C4656.9844,208.2976 4655.9688,207.7039 4654.7031,207.7039 C4652.5625,207.7039 4651.1094,209.2195 4651.1094,211.1414 C4651.1094,212.9382 4652.0313,213.8445 4653.125,214.5945 L4654.2188,215.3445 C4655.1563,215.9539 4655.6094,216.532 4655.6094,217.4695 C4655.6094,218.1414 4655.1406,218.5632 4654.4375,218.5632 C4653.7344,218.5632 4652.9844,218.0476 4652.3281,217.2195 L4650.7813,218.907 C4651.8125,220.0945 4653.1094,220.7351 4654.4375,220.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="4674.75" y="220.136">Condition</text><line style="stroke:#181818;stroke-width:0.5;" x1="4592" x2="4790" y1="230.032" y2="230.032"/><ellipse cx="4602" cy="245.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="4611" y="250.2719">Type string</text><ellipse cx="4602" cy="265.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="4611" y="270.5438">Status ConditionStatus</text><ellipse cx="4602" cy="286.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="4611" y="290.8157">ObservedGeneration int64</text><ellipse cx="4602" cy="306.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="4611" y="311.0876">LastTransitionTime Time</text><ellipse cx="4602" cy="326.7556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="4611" y="331.3596">Reason string</text><ellipse cx="4602" cy="347.0275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="4611" y="351.6315">Message string</text></g><!--MD5=[b344002c35114b96b5f721a16ddf542e]
class v1.CreateOptions--><g id="elem_v1.CreateOptions"><rect codeLine="343" fill="#F1F1F1" height="100.8157" id="v1.CreateOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="167" x="2143.5" y="925.032"/><ellipse cx="2176.5" cy="941.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2176.6875,947.7351 C2178.9844,947.7351 2180.4375,946.1101 2180.4375,944.1101 C2180.4375,942.282 2179.6094,941.4382 2178.4688,940.6414 L2177.4531,939.9226 C2176.3281,939.1101 2175.9063,938.8132 2175.9063,937.9539 C2175.9063,937.2664 2176.3906,936.8601 2176.9688,936.8601 C2177.7031,936.8601 2178.1875,937.2507 2178.8906,937.8914 L2180.2031,936.3132 C2179.2344,935.2976 2178.2188,934.7039 2176.9531,934.7039 C2174.8125,934.7039 2173.3594,936.2195 2173.3594,938.1414 C2173.3594,939.9382 2174.2813,940.8445 2175.375,941.5945 L2176.4688,942.3445 C2177.4063,942.9539 2177.8594,943.532 2177.8594,944.4695 C2177.8594,945.1414 2177.3906,945.5632 2176.6875,945.5632 C2175.9844,945.5632 2175.2344,945.0476 2174.5781,944.2195 L2173.0313,945.907 C2174.0625,947.0945 2175.3594,947.7351 2176.6875,947.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="2194.5" y="947.136">CreateOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="2144.5" x2="2309.5" y1="957.032" y2="957.032"/><ellipse cx="2154.5" cy="972.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="2163.5" y="977.2719">DryRun []string</text><ellipse cx="2154.5" cy="992.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="2163.5" y="997.5438">FieldManager string</text><ellipse cx="2154.5" cy="1013.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="2163.5" y="1017.8157">FieldValidation string</text></g><!--MD5=[d14bfdbe8335d5870f925f6001e62c78]
class v1.DeleteOptions--><g id="elem_v1.DeleteOptions"><rect codeLine="368" fill="#F1F1F1" height="141.3596" id="v1.DeleteOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="293" x="2345.5" y="905.032"/><ellipse cx="2440.25" cy="921.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2440.4375,927.7351 C2442.7344,927.7351 2444.1875,926.1101 2444.1875,924.1101 C2444.1875,922.282 2443.3594,921.4382 2442.2188,920.6414 L2441.2031,919.9226 C2440.0781,919.1101 2439.6563,918.8132 2439.6563,917.9539 C2439.6563,917.2664 2440.1406,916.8601 2440.7188,916.8601 C2441.4531,916.8601 2441.9375,917.2507 2442.6406,917.8914 L2443.9531,916.3132 C2442.9844,915.2976 2441.9688,914.7039 2440.7031,914.7039 C2438.5625,914.7039 2437.1094,916.2195 2437.1094,918.1414 C2437.1094,919.9382 2438.0313,920.8445 2439.125,921.5945 L2440.2188,922.3445 C2441.1563,922.9539 2441.6094,923.532 2441.6094,924.4695 C2441.6094,925.1414 2441.1406,925.5632 2440.4375,925.5632 C2439.7344,925.5632 2438.9844,925.0476 2438.3281,924.2195 L2436.7813,925.907 C2437.8125,927.0945 2439.1094,927.7351 2440.4375,927.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="2460.75" y="927.136">DeleteOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="2346.5" x2="2637.5" y1="937.032" y2="937.032"/><ellipse cx="2356.5" cy="952.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="2365.5" y="957.2719">GracePeriodSeconds *int64</text><ellipse cx="2356.5" cy="972.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="2365.5" y="977.5438">Preconditions *Preconditions</text><ellipse cx="2356.5" cy="993.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="2365.5" y="997.8157">OrphanDependents *bool</text><ellipse cx="2356.5" cy="1013.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="2365.5" y="1018.0876">PropagationPolicy *DeletionPropagation</text><ellipse cx="2356.5" cy="1033.7556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="2365.5" y="1038.3596">DryRun []string</text></g><!--MD5=[8625ffb930e6f02ce94f9dbb0ed14cac]
class v1.Duration--><g id="elem_v1.Duration"><rect codeLine="395" fill="#F1F1F1" height="40" id="v1.Duration" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="90" x="4231" y="259.032"/><ellipse cx="4246" cy="275.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4246.1875,281.7351 C4248.4844,281.7351 4249.9375,280.1101 4249.9375,278.1101 C4249.9375,276.282 4249.1094,275.4382 4247.9688,274.6414 L4246.9531,273.9226 C4245.8281,273.1101 4245.4063,272.8132 4245.4063,271.9539 C4245.4063,271.2664 4245.8906,270.8601 4246.4688,270.8601 C4247.2031,270.8601 4247.6875,271.2507 4248.3906,271.8914 L4249.7031,270.3132 C4248.7344,269.2976 4247.7188,268.7039 4246.4531,268.7039 C4244.3125,268.7039 4242.8594,270.2195 4242.8594,272.1414 C4242.8594,273.9382 4243.7813,274.8445 4244.875,275.5945 L4245.9688,276.3445 C4246.9063,276.9539 4247.3594,277.532 4247.3594,278.4695 C4247.3594,279.1414 4246.8906,279.5632 4246.1875,279.5632 C4245.4844,279.5632 4244.7344,279.0476 4244.0781,278.2195 L4242.5313,279.907 C4243.5625,281.0945 4244.8594,281.7351 4246.1875,281.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="4260" y="281.136">Duration</text><line style="stroke:#181818;stroke-width:0.5;" x1="4232" x2="4320" y1="291.032" y2="291.032"/></g><!--MD5=[25aaf5a06db06eaec17a7d9483505d92]
class v1.FieldsV1--><g id="elem_v1.FieldsV1"><rect codeLine="419" fill="#F1F1F1" height="60.2719" id="v1.FieldsV1" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="96" x="4826" y="249.032"/><ellipse cx="4844.6" cy="265.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4844.7875,271.7351 C4847.0844,271.7351 4848.5375,270.1101 4848.5375,268.1101 C4848.5375,266.282 4847.7094,265.4382 4846.5688,264.6414 L4845.5531,263.9226 C4844.4281,263.1101 4844.0063,262.8132 4844.0063,261.9539 C4844.0063,261.2664 4844.4906,260.8601 4845.0688,260.8601 C4845.8031,260.8601 4846.2875,261.2507 4846.9906,261.8914 L4848.3031,260.3132 C4847.3344,259.2976 4846.3188,258.7039 4845.0531,258.7039 C4842.9125,258.7039 4841.4594,260.2195 4841.4594,262.1414 C4841.4594,263.9382 4842.3813,264.8445 4843.475,265.5945 L4844.5688,266.3445 C4845.5063,266.9539 4845.9594,267.532 4845.9594,268.4695 C4845.9594,269.1414 4845.4906,269.5632 4844.7875,269.5632 C4844.0844,269.5632 4843.3344,269.0476 4842.6781,268.2195 L4841.1313,269.907 C4842.1625,271.0945 4843.4594,271.7351 4844.7875,271.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="4859.4" y="271.136">FieldsV1</text><line style="stroke:#181818;stroke-width:0.5;" x1="4827" x2="4921" y1="281.032" y2="281.032"/><ellipse cx="4837" cy="296.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="4846" y="301.2719">Raw []byte</text></g><!--MD5=[06994ffa32bab7454b9658cac00cbb9a]
class v1.GetOptions--><g id="elem_v1.GetOptions"><rect codeLine="443" fill="#F1F1F1" height="60.2719" id="v1.GetOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="2673.5" y="945.532"/><ellipse cx="2720.25" cy="961.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2720.4375,968.2351 C2722.7344,968.2351 2724.1875,966.6101 2724.1875,964.6101 C2724.1875,962.782 2723.3594,961.9382 2722.2188,961.1414 L2721.2031,960.4226 C2720.0781,959.6101 2719.6563,959.3132 2719.6563,958.4539 C2719.6563,957.7664 2720.1406,957.3601 2720.7188,957.3601 C2721.4531,957.3601 2721.9375,957.7507 2722.6406,958.3914 L2723.9531,956.8132 C2722.9844,955.7976 2721.9688,955.2039 2720.7031,955.2039 C2718.5625,955.2039 2717.1094,956.7195 2717.1094,958.6414 C2717.1094,960.4382 2718.0313,961.3445 2719.125,962.0945 L2720.2188,962.8445 C2721.1563,963.4539 2721.6094,964.032 2721.6094,964.9695 C2721.6094,965.6414 2721.1406,966.0632 2720.4375,966.0632 C2719.7344,966.0632 2718.9844,965.5476 2718.3281,964.7195 L2716.7813,966.407 C2717.8125,967.5945 2719.1094,968.2351 2720.4375,968.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="2740.75" y="967.636">GetOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="2674.5" x2="2849.5" y1="977.532" y2="977.532"/><ellipse cx="2684.5" cy="993.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="2693.5" y="997.7719">ResourceVersion string</text></g><!--MD5=[fa2a66b28c548eeaee4b70e50ed96299]
class v1.GroupKind--><g id="elem_v1.GroupKind"><rect codeLine="466" fill="#F1F1F1" height="80.5438" id="v1.GroupKind" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="108" x="4957" y="238.532"/><ellipse cx="4973.8" cy="254.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4973.9875,261.2351 C4976.2844,261.2351 4977.7375,259.6101 4977.7375,257.6101 C4977.7375,255.782 4976.9094,254.9382 4975.7688,254.1414 L4974.7531,253.4226 C4973.6281,252.6101 4973.2063,252.3132 4973.2063,251.4539 C4973.2063,250.7664 4973.6906,250.3601 4974.2688,250.3601 C4975.0031,250.3601 4975.4875,250.7507 4976.1906,251.3914 L4977.5031,249.8132 C4976.5344,248.7976 4975.5188,248.2039 4974.2531,248.2039 C4972.1125,248.2039 4970.6594,249.7195 4970.6594,251.6414 C4970.6594,253.4382 4971.5813,254.3445 4972.675,255.0945 L4973.7688,255.8445 C4974.7063,256.4539 4975.1594,257.032 4975.1594,257.9695 C4975.1594,258.6414 4974.6906,259.0632 4973.9875,259.0632 C4973.2844,259.0632 4972.5344,258.5476 4971.8781,257.7195 L4970.3313,259.407 C4971.3625,260.5945 4972.6594,261.2351 4973.9875,261.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="4988.2" y="260.636">GroupKind</text><line style="stroke:#181818;stroke-width:0.5;" x1="4958" x2="5064" y1="270.532" y2="270.532"/><ellipse cx="4968" cy="286.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="4977" y="290.7719">Group string</text><ellipse cx="4968" cy="306.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="4977" y="311.0438">Kind string</text></g><!--MD5=[aea36f975de98ab9d5c9eb46f631c26e]
class v1.GroupResource--><g id="elem_v1.GroupResource"><rect codeLine="488" fill="#F1F1F1" height="80.5438" id="v1.GroupResource" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="5100" y="238.532"/><ellipse cx="5115" cy="254.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5115.1875,261.2351 C5117.4844,261.2351 5118.9375,259.6101 5118.9375,257.6101 C5118.9375,255.782 5118.1094,254.9382 5116.9688,254.1414 L5115.9531,253.4226 C5114.8281,252.6101 5114.4063,252.3132 5114.4063,251.4539 C5114.4063,250.7664 5114.8906,250.3601 5115.4688,250.3601 C5116.2031,250.3601 5116.6875,250.7507 5117.3906,251.3914 L5118.7031,249.8132 C5117.7344,248.7976 5116.7188,248.2039 5115.4531,248.2039 C5113.3125,248.2039 5111.8594,249.7195 5111.8594,251.6414 C5111.8594,253.4382 5112.7813,254.3445 5113.875,255.0945 L5114.9688,255.8445 C5115.9063,256.4539 5116.3594,257.032 5116.3594,257.9695 C5116.3594,258.6414 5115.8906,259.0632 5115.1875,259.0632 C5114.4844,259.0632 5113.7344,258.5476 5113.0781,257.7195 L5111.5313,259.407 C5112.5625,260.5945 5113.8594,261.2351 5115.1875,261.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="5129" y="260.636">GroupResource</text><line style="stroke:#181818;stroke-width:0.5;" x1="5101" x2="5233" y1="270.532" y2="270.532"/><ellipse cx="5111" cy="286.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="5120" y="290.7719">Group string</text><ellipse cx="5111" cy="306.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="5120" y="311.0438">Resource string</text></g><!--MD5=[f12d9b502a873654e4a0e4f2fc2af06b]
class v1.GroupVersion--><g id="elem_v1.GroupVersion"><rect codeLine="510" fill="#F1F1F1" height="80.5438" id="v1.GroupVersion" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="122" x="5269" y="238.532"/><ellipse cx="5284" cy="254.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5284.1875,261.2351 C5286.4844,261.2351 5287.9375,259.6101 5287.9375,257.6101 C5287.9375,255.782 5287.1094,254.9382 5285.9688,254.1414 L5284.9531,253.4226 C5283.8281,252.6101 5283.4063,252.3132 5283.4063,251.4539 C5283.4063,250.7664 5283.8906,250.3601 5284.4688,250.3601 C5285.2031,250.3601 5285.6875,250.7507 5286.3906,251.3914 L5287.7031,249.8132 C5286.7344,248.7976 5285.7188,248.2039 5284.4531,248.2039 C5282.3125,248.2039 5280.8594,249.7195 5280.8594,251.6414 C5280.8594,253.4382 5281.7813,254.3445 5282.875,255.0945 L5283.9688,255.8445 C5284.9063,256.4539 5285.3594,257.032 5285.3594,257.9695 C5285.3594,258.6414 5284.8906,259.0632 5284.1875,259.0632 C5283.4844,259.0632 5282.7344,258.5476 5282.0781,257.7195 L5280.5313,259.407 C5281.5625,260.5945 5282.8594,261.2351 5284.1875,261.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="5298" y="260.636">GroupVersion</text><line style="stroke:#181818;stroke-width:0.5;" x1="5270" x2="5390" y1="270.532" y2="270.532"/><ellipse cx="5280" cy="286.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="5289" y="290.7719">Group string</text><ellipse cx="5280" cy="306.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="5289" y="311.0438">Version string</text></g><!--MD5=[18b221ddb8ef424c84219f8319e28f7c]
class v1.GroupVersionForDiscovery--><g id="elem_v1.GroupVersionForDiscovery"><rect codeLine="538" fill="#F1F1F1" height="80.5438" id="v1.GroupVersionForDiscovery" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="206" x="3426" y="592.032"/><ellipse cx="3441" cy="608.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3441.1875,614.7351 C3443.4844,614.7351 3444.9375,613.1101 3444.9375,611.1101 C3444.9375,609.282 3444.1094,608.4382 3442.9688,607.6414 L3441.9531,606.9226 C3440.8281,606.1101 3440.4063,605.8132 3440.4063,604.9539 C3440.4063,604.2664 3440.8906,603.8601 3441.4688,603.8601 C3442.2031,603.8601 3442.6875,604.2507 3443.3906,604.8914 L3444.7031,603.3132 C3443.7344,602.2976 3442.7188,601.7039 3441.4531,601.7039 C3439.3125,601.7039 3437.8594,603.2195 3437.8594,605.1414 C3437.8594,606.9382 3438.7813,607.8445 3439.875,608.5945 L3440.9688,609.3445 C3441.9063,609.9539 3442.3594,610.532 3442.3594,611.4695 C3442.3594,612.1414 3441.8906,612.5632 3441.1875,612.5632 C3440.4844,612.5632 3439.7344,612.0476 3439.0781,611.2195 L3437.5313,612.907 C3438.5625,614.0945 3439.8594,614.7351 3441.1875,614.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="3455" y="614.136">GroupVersionForDiscovery</text><line style="stroke:#181818;stroke-width:0.5;" x1="3427" x2="3631" y1="624.032" y2="624.032"/><ellipse cx="3437" cy="639.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="3446" y="644.2719">GroupVersion string</text><ellipse cx="3437" cy="659.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="3446" y="664.5438">Version string</text></g><!--MD5=[8d417f822bd1c45a677fe7f28141b421]
class v1.GroupVersionKind--><g id="elem_v1.GroupVersionKind"><rect codeLine="561" fill="#F1F1F1" height="100.8157" id="v1.GroupVersionKind" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="3667.5" y="582.032"/><ellipse cx="3682.5" cy="598.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3682.6875,604.7351 C3684.9844,604.7351 3686.4375,603.1101 3686.4375,601.1101 C3686.4375,599.282 3685.6094,598.4382 3684.4688,597.6414 L3683.4531,596.9226 C3682.3281,596.1101 3681.9063,595.8132 3681.9063,594.9539 C3681.9063,594.2664 3682.3906,593.8601 3682.9688,593.8601 C3683.7031,593.8601 3684.1875,594.2507 3684.8906,594.8914 L3686.2031,593.3132 C3685.2344,592.2976 3684.2188,591.7039 3682.9531,591.7039 C3680.8125,591.7039 3679.3594,593.2195 3679.3594,595.1414 C3679.3594,596.9382 3680.2813,597.8445 3681.375,598.5945 L3682.4688,599.3445 C3683.4063,599.9539 3683.8594,600.532 3683.8594,601.4695 C3683.8594,602.1414 3683.3906,602.5632 3682.6875,602.5632 C3681.9844,602.5632 3681.2344,602.0476 3680.5781,601.2195 L3679.0313,602.907 C3680.0625,604.0945 3681.3594,604.7351 3682.6875,604.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="3696.5" y="604.136">GroupVersionKind</text><line style="stroke:#181818;stroke-width:0.5;" x1="3668.5" x2="3819.5" y1="614.032" y2="614.032"/><ellipse cx="3678.5" cy="629.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="3687.5" y="634.2719">Group string</text><ellipse cx="3678.5" cy="649.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="3687.5" y="654.5438">Version string</text><ellipse cx="3678.5" cy="670.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="3687.5" y="674.8157">Kind string</text></g><!--MD5=[f87a0cd88d76f8a93807799b76a1970d]
class v1.GroupVersionResource--><g id="elem_v1.GroupVersionResource"><rect codeLine="584" fill="#F1F1F1" height="100.8157" id="v1.GroupVersionResource" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="183" x="3855.5" y="582.032"/><ellipse cx="3870.5" cy="598.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3870.6875,604.7351 C3872.9844,604.7351 3874.4375,603.1101 3874.4375,601.1101 C3874.4375,599.282 3873.6094,598.4382 3872.4688,597.6414 L3871.4531,596.9226 C3870.3281,596.1101 3869.9063,595.8132 3869.9063,594.9539 C3869.9063,594.2664 3870.3906,593.8601 3870.9688,593.8601 C3871.7031,593.8601 3872.1875,594.2507 3872.8906,594.8914 L3874.2031,593.3132 C3873.2344,592.2976 3872.2188,591.7039 3870.9531,591.7039 C3868.8125,591.7039 3867.3594,593.2195 3867.3594,595.1414 C3867.3594,596.9382 3868.2813,597.8445 3869.375,598.5945 L3870.4688,599.3445 C3871.4063,599.9539 3871.8594,600.532 3871.8594,601.4695 C3871.8594,602.1414 3871.3906,602.5632 3870.6875,602.5632 C3869.9844,602.5632 3869.2344,602.0476 3868.5781,601.2195 L3867.0313,602.907 C3868.0625,604.0945 3869.3594,604.7351 3870.6875,604.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="3884.5" y="604.136">GroupVersionResource</text><line style="stroke:#181818;stroke-width:0.5;" x1="3856.5" x2="4037.5" y1="614.032" y2="614.032"/><ellipse cx="3866.5" cy="629.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="3875.5" y="634.2719">Group string</text><ellipse cx="3866.5" cy="649.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="3875.5" y="654.5438">Version string</text><ellipse cx="3866.5" cy="670.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="3875.5" y="674.8157">Resource string</text></g><!--MD5=[53edf419cba91d3364e260fdb1fc87d6]
class v1.InternalEvent--><g id="elem_v1.InternalEvent"><rect codeLine="1417" fill="#F1F1F1" height="40" id="v1.InternalEvent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="4073.5" y="612.532"/><ellipse cx="4088.5" cy="628.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4087.2344,635.532 L4089.7813,635.532 L4089.7813,625.0164 L4092.4063,625.0164 L4092.4063,622.907 L4084.5938,622.907 L4084.5938,625.0164 L4087.2344,625.0164 L4087.2344,635.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="4102.5" y="634.636">InternalEvent</text><line style="stroke:#181818;stroke-width:0.5;" x1="4074.5" x2="4193.5" y1="644.532" y2="644.532"/></g><!--MD5=[412553490f4d696605336c03485c68be]
class v1.LabelSelector--><g id="elem_v1.LabelSelector"><rect codeLine="614" fill="#F1F1F1" height="80.5438" id="v1.LabelSelector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="335" x="4229.5" y="592.032"/><ellipse cx="4347.75" cy="608.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4347.9375,614.7351 C4350.2344,614.7351 4351.6875,613.1101 4351.6875,611.1101 C4351.6875,609.282 4350.8594,608.4382 4349.7188,607.6414 L4348.7031,606.9226 C4347.5781,606.1101 4347.1563,605.8132 4347.1563,604.9539 C4347.1563,604.2664 4347.6406,603.8601 4348.2188,603.8601 C4348.9531,603.8601 4349.4375,604.2507 4350.1406,604.8914 L4351.4531,603.3132 C4350.4844,602.2976 4349.4688,601.7039 4348.2031,601.7039 C4346.0625,601.7039 4344.6094,603.2195 4344.6094,605.1414 C4344.6094,606.9382 4345.5313,607.8445 4346.625,608.5945 L4347.7188,609.3445 C4348.6563,609.9539 4349.1094,610.532 4349.1094,611.4695 C4349.1094,612.1414 4348.6406,612.5632 4347.9375,612.5632 C4347.2344,612.5632 4346.4844,612.0476 4345.8281,611.2195 L4344.2813,612.907 C4345.3125,614.0945 4346.6094,614.7351 4347.9375,614.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="4368.25" y="614.136">LabelSelector</text><line style="stroke:#181818;stroke-width:0.5;" x1="4230.5" x2="4563.5" y1="624.032" y2="624.032"/><ellipse cx="4240.5" cy="639.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="4249.5" y="644.2719">MatchLabels</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="4336.5" y="644.2719">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="4366.5" y="644.2719">[string]string</text><ellipse cx="4240.5" cy="659.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="309" x="4249.5" y="664.5438">MatchExpressions []LabelSelectorRequirement</text></g><!--MD5=[8ea77b4009b99efd5361f0bfac18ca93]
class v1.LabelSelectorRequirement--><g id="elem_v1.LabelSelectorRequirement"><rect codeLine="637" fill="#F1F1F1" height="100.8157" id="v1.LabelSelectorRequirement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="235" x="4599.5" y="582.032"/><ellipse cx="4626.2" cy="598.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4626.3875,604.7351 C4628.6844,604.7351 4630.1375,603.1101 4630.1375,601.1101 C4630.1375,599.282 4629.3094,598.4382 4628.1688,597.6414 L4627.1531,596.9226 C4626.0281,596.1101 4625.6063,595.8132 4625.6063,594.9539 C4625.6063,594.2664 4626.0906,593.8601 4626.6688,593.8601 C4627.4031,593.8601 4627.8875,594.2507 4628.5906,594.8914 L4629.9031,593.3132 C4628.9344,592.2976 4627.9188,591.7039 4626.6531,591.7039 C4624.5125,591.7039 4623.0594,593.2195 4623.0594,595.1414 C4623.0594,596.9382 4623.9813,597.8445 4625.075,598.5945 L4626.1688,599.3445 C4627.1063,599.9539 4627.5594,600.532 4627.5594,601.4695 C4627.5594,602.1414 4627.0906,602.5632 4626.3875,602.5632 C4625.6844,602.5632 4624.9344,602.0476 4624.2781,601.2195 L4622.7313,602.907 C4623.7625,604.0945 4625.0594,604.7351 4626.3875,604.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="4642.8" y="604.136">LabelSelectorRequirement</text><line style="stroke:#181818;stroke-width:0.5;" x1="4600.5" x2="4833.5" y1="614.032" y2="614.032"/><ellipse cx="4610.5" cy="629.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="4619.5" y="634.2719">Key string</text><ellipse cx="4610.5" cy="649.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="4619.5" y="654.5438">Operator LabelSelectorOperator</text><ellipse cx="4610.5" cy="670.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="4619.5" y="674.8157">Values []string</text></g><!--MD5=[388c7159529a4d9dc54825e204680b77]
class v1.List--><g id="elem_v1.List"><rect codeLine="661" fill="#F1F1F1" height="60.2719" id="v1.List" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="226" x="4834" y="945.532"/><ellipse cx="4930.75" cy="961.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4930.9375,968.2351 C4933.2344,968.2351 4934.6875,966.6101 4934.6875,964.6101 C4934.6875,962.782 4933.8594,961.9382 4932.7188,961.1414 L4931.7031,960.4226 C4930.5781,959.6101 4930.1563,959.3132 4930.1563,958.4539 C4930.1563,957.7664 4930.6406,957.3601 4931.2188,957.3601 C4931.9531,957.3601 4932.4375,957.7507 4933.1406,958.3914 L4934.4531,956.8132 C4933.4844,955.7976 4932.4688,955.2039 4931.2031,955.2039 C4929.0625,955.2039 4927.6094,956.7195 4927.6094,958.6414 C4927.6094,960.4382 4928.5313,961.3445 4929.625,962.0945 L4930.7188,962.8445 C4931.6563,963.4539 4932.1094,964.032 4932.1094,964.9695 C4932.1094,965.6414 4931.6406,966.0632 4930.9375,966.0632 C4930.2344,966.0632 4929.4844,965.5476 4928.8281,964.7195 L4927.2813,966.407 C4928.3125,967.5945 4929.6094,968.2351 4930.9375,968.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="24" x="4951.25" y="967.636">List</text><line style="stroke:#181818;stroke-width:0.5;" x1="4835" x2="5059" y1="977.532" y2="977.532"/><ellipse cx="4845" cy="993.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="4854" y="997.7719">Items []runtime.RawExtension</text></g><!--MD5=[b5696a2cf2c46832ed574440c18adef7]
class v1.ListMeta--><g id="elem_v1.ListMeta"><rect codeLine="695" fill="#F1F1F1" height="121.0876" id="v1.ListMeta" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="212" x="5333" y="572.032"/><ellipse cx="5406.75" cy="588.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5406.9375,594.7351 C5409.2344,594.7351 5410.6875,593.1101 5410.6875,591.1101 C5410.6875,589.282 5409.8594,588.4382 5408.7188,587.6414 L5407.7031,586.9226 C5406.5781,586.1101 5406.1563,585.8132 5406.1563,584.9539 C5406.1563,584.2664 5406.6406,583.8601 5407.2188,583.8601 C5407.9531,583.8601 5408.4375,584.2507 5409.1406,584.8914 L5410.4531,583.3132 C5409.4844,582.2976 5408.4688,581.7039 5407.2031,581.7039 C5405.0625,581.7039 5403.6094,583.2195 5403.6094,585.1414 C5403.6094,586.9382 5404.5313,587.8445 5405.625,588.5945 L5406.7188,589.3445 C5407.6563,589.9539 5408.1094,590.532 5408.1094,591.4695 C5408.1094,592.1414 5407.6406,592.5632 5406.9375,592.5632 C5406.2344,592.5632 5405.4844,592.0476 5404.8281,591.2195 L5403.2813,592.907 C5404.3125,594.0945 5405.6094,594.7351 5406.9375,594.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="5427.25" y="594.136">ListMeta</text><line style="stroke:#181818;stroke-width:0.5;" x1="5334" x2="5544" y1="604.032" y2="604.032"/><ellipse cx="5344" cy="619.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="5353" y="624.2719">SelfLink string</text><ellipse cx="5344" cy="639.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="5353" y="644.5438">ResourceVersion string</text><ellipse cx="5344" cy="660.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="5353" y="664.8157">Continue string</text><ellipse cx="5344" cy="680.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="5353" y="685.0876">RemainingItemCount *int64</text></g><!--MD5=[0a550cd1e4734c0bfa5aadf6e099baed]
class v1.ListMetaAccessor--><g id="elem_v1.ListMetaAccessor"><rect codeLine="729" fill="#F1F1F1" height="40" id="v1.ListMetaAccessor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="4050" y="259.032"/><ellipse cx="4065" cy="275.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4061.3594,281.532 L4068.1406,281.532 L4068.1406,279.4539 L4065.9844,279.4539 L4065.9844,271.0164 L4068.1406,271.0164 L4068.1406,268.907 L4061.3594,268.907 L4061.3594,271.0164 L4063.4531,271.0164 L4063.4531,279.4539 L4061.3594,279.4539 L4061.3594,281.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114" x="4079" y="281.136">ListMetaAccessor</text><line style="stroke:#181818;stroke-width:0.5;" x1="4051" x2="4195" y1="291.032" y2="291.032"/></g><!--MD5=[697cffb73fb9ae85dac1ca069d3fdcd9]
class v1.ListOptions--><g id="elem_v1.ListOptions"><rect codeLine="733" fill="#F1F1F1" height="222.4472" id="v1.ListOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="329" x="14.5" y="864.532"/><ellipse cx="136.75" cy="880.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M136.9375,887.2351 C139.2344,887.2351 140.6875,885.6101 140.6875,883.6101 C140.6875,881.782 139.8594,880.9382 138.7188,880.1414 L137.7031,879.4226 C136.5781,878.6101 136.1563,878.3132 136.1563,877.4539 C136.1563,876.7664 136.6406,876.3601 137.2188,876.3601 C137.9531,876.3601 138.4375,876.7507 139.1406,877.3914 L140.4531,875.8132 C139.4844,874.7976 138.4688,874.2039 137.2031,874.2039 C135.0625,874.2039 133.6094,875.7195 133.6094,877.6414 C133.6094,879.4382 134.5313,880.3445 135.625,881.0945 L136.7188,881.8445 C137.6563,882.4539 138.1094,883.032 138.1094,883.9695 C138.1094,884.6414 137.6406,885.0632 136.9375,885.0632 C136.2344,885.0632 135.4844,884.5476 134.8281,883.7195 L133.2813,885.407 C134.3125,886.5945 135.6094,887.2351 136.9375,887.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="157.25" y="886.636">ListOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="15.5" x2="342.5" y1="896.532" y2="896.532"/><ellipse cx="25.5" cy="912.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="34.5" y="916.7719">LabelSelector string</text><ellipse cx="25.5" cy="932.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="34.5" y="937.0438">FieldSelector string</text><ellipse cx="25.5" cy="952.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="34.5" y="957.3157">Watch bool</text><ellipse cx="25.5" cy="972.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="34.5" y="977.5876">AllowWatchBookmarks bool</text><ellipse cx="25.5" cy="993.2556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="34.5" y="997.8596">ResourceVersion string</text><ellipse cx="25.5" cy="1013.5275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="303" x="34.5" y="1018.1315">ResourceVersionMatch ResourceVersionMatch</text><ellipse cx="25.5" cy="1033.7994" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="34.5" y="1038.4034">TimeoutSeconds *int64</text><ellipse cx="25.5" cy="1054.0713" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="34.5" y="1058.6753">Limit int64</text><ellipse cx="25.5" cy="1074.3432" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="34.5" y="1078.9472">Continue string</text></g><!--MD5=[e3919be471e578f8294705791120fcab]
class v1.ManagedFieldsEntry--><g id="elem_v1.ManagedFieldsEntry"><rect codeLine="764" fill="#F1F1F1" height="181.9034" id="v1.ManagedFieldsEntry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="294" x="3331" y="884.532"/><ellipse cx="3406.25" cy="900.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3406.4375,907.2351 C3408.7344,907.2351 3410.1875,905.6101 3410.1875,903.6101 C3410.1875,901.782 3409.3594,900.9382 3408.2188,900.1414 L3407.2031,899.4226 C3406.0781,898.6101 3405.6563,898.3132 3405.6563,897.4539 C3405.6563,896.7664 3406.1406,896.3601 3406.7188,896.3601 C3407.4531,896.3601 3407.9375,896.7507 3408.6406,897.3914 L3409.9531,895.8132 C3408.9844,894.7976 3407.9688,894.2039 3406.7031,894.2039 C3404.5625,894.2039 3403.1094,895.7195 3403.1094,897.6414 C3403.1094,899.4382 3404.0313,900.3445 3405.125,901.0945 L3406.2188,901.8445 C3407.1563,902.4539 3407.6094,903.032 3407.6094,903.9695 C3407.6094,904.6414 3407.1406,905.0632 3406.4375,905.0632 C3405.7344,905.0632 3404.9844,904.5476 3404.3281,903.7195 L3402.7813,905.407 C3403.8125,906.5945 3405.1094,907.2351 3406.4375,907.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="3426.75" y="906.636">ManagedFieldsEntry</text><line style="stroke:#181818;stroke-width:0.5;" x1="3332" x2="3624" y1="916.532" y2="916.532"/><ellipse cx="3342" cy="932.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="3351" y="936.7719">Manager string</text><ellipse cx="3342" cy="952.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="3351" y="957.0438">Operation ManagedFieldsOperationType</text><ellipse cx="3342" cy="972.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="3351" y="977.3157">APIVersion string</text><ellipse cx="3342" cy="992.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="3351" y="997.5876">Time *Time</text><ellipse cx="3342" cy="1013.2556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="3351" y="1017.8596">FieldsType string</text><ellipse cx="3342" cy="1033.5275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="3351" y="1038.1315">FieldsV1 *FieldsV1</text><ellipse cx="3342" cy="1053.7994" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="3351" y="1058.4034">Subresource string</text></g><!--MD5=[dc2cb7357920fea0098c69b097794d3f]
class v1.MicroTime--><g id="elem_v1.MicroTime"><rect codeLine="792" fill="#F1F1F1" height="40" id="v1.MicroTime" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="100" x="3915" y="259.032"/><ellipse cx="3930" cy="275.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3930.1875,281.7351 C3932.4844,281.7351 3933.9375,280.1101 3933.9375,278.1101 C3933.9375,276.282 3933.1094,275.4382 3931.9688,274.6414 L3930.9531,273.9226 C3929.8281,273.1101 3929.4063,272.8132 3929.4063,271.9539 C3929.4063,271.2664 3929.8906,270.8601 3930.4688,270.8601 C3931.2031,270.8601 3931.6875,271.2507 3932.3906,271.8914 L3933.7031,270.3132 C3932.7344,269.2976 3931.7188,268.7039 3930.4531,268.7039 C3928.3125,268.7039 3926.8594,270.2195 3926.8594,272.1414 C3926.8594,273.9382 3927.7813,274.8445 3928.875,275.5945 L3929.9688,276.3445 C3930.9063,276.9539 3931.3594,277.532 3931.3594,278.4695 C3931.3594,279.1414 3930.8906,279.5632 3930.1875,279.5632 C3929.4844,279.5632 3928.7344,279.0476 3928.0781,278.2195 L3926.5313,279.907 C3927.5625,281.0945 3928.8594,281.7351 3930.1875,281.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="3944" y="281.136">MicroTime</text><line style="stroke:#181818;stroke-width:0.5;" x1="3916" x2="4014" y1="291.032" y2="291.032"/></g><!--MD5=[124d468aa21dfcf6b30392591926ae1b]
class v1.ObjectMeta--><g id="elem_v1.ObjectMeta"><rect codeLine="856" fill="#F1F1F1" height="344.0787" id="v1.ObjectMeta" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="275" x="4920.5" y="460.532"/><ellipse cx="5016.25" cy="476.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5016.4375,483.2351 C5018.7344,483.2351 5020.1875,481.6101 5020.1875,479.6101 C5020.1875,477.782 5019.3594,476.9382 5018.2188,476.1414 L5017.2031,475.4226 C5016.0781,474.6101 5015.6563,474.3132 5015.6563,473.4539 C5015.6563,472.7664 5016.1406,472.3601 5016.7188,472.3601 C5017.4531,472.3601 5017.9375,472.7507 5018.6406,473.3914 L5019.9531,471.8132 C5018.9844,470.7976 5017.9688,470.2039 5016.7031,470.2039 C5014.5625,470.2039 5013.1094,471.7195 5013.1094,473.6414 C5013.1094,475.4382 5014.0313,476.3445 5015.125,477.0945 L5016.2188,477.8445 C5017.1563,478.4539 5017.6094,479.032 5017.6094,479.9695 C5017.6094,480.6414 5017.1406,481.0632 5016.4375,481.0632 C5015.7344,481.0632 5014.9844,480.5476 5014.3281,479.7195 L5012.7813,481.407 C5013.8125,482.5945 5015.1094,483.2351 5016.4375,483.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="5036.75" y="482.636">ObjectMeta</text><line style="stroke:#181818;stroke-width:0.5;" x1="4921.5" x2="5194.5" y1="492.532" y2="492.532"/><ellipse cx="4931.5" cy="508.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="4940.5" y="512.7719">Name string</text><ellipse cx="4931.5" cy="528.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="4940.5" y="533.0438">GenerateName string</text><ellipse cx="4931.5" cy="548.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="4940.5" y="553.3157">Namespace string</text><ellipse cx="4931.5" cy="568.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="4940.5" y="573.5876">SelfLink string</text><ellipse cx="4931.5" cy="589.2556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="4940.5" y="593.8596">UID types.UID</text><ellipse cx="4931.5" cy="609.5275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="4940.5" y="614.1315">ResourceVersion string</text><ellipse cx="4931.5" cy="629.7994" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="4940.5" y="634.4034">Generation int64</text><ellipse cx="4931.5" cy="650.0713" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="4940.5" y="654.6753">CreationTimestamp Time</text><ellipse cx="4931.5" cy="670.3432" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="4940.5" y="674.9472">DeletionTimestamp *Time</text><ellipse cx="4931.5" cy="690.6151" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="4940.5" y="695.2191">DeletionGracePeriodSeconds *int64</text><ellipse cx="4931.5" cy="710.8871" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="4940.5" y="715.491">Labels</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="4987.5" y="715.491">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="5017.5" y="715.491">[string]string</text><ellipse cx="4931.5" cy="731.159" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="4940.5" y="735.7629">Annotations</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="5024.5" y="735.7629">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="5054.5" y="735.7629">[string]string</text><ellipse cx="4931.5" cy="751.4309" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="4940.5" y="756.0349">OwnerReferences []OwnerReference</text><ellipse cx="4931.5" cy="771.7028" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="4940.5" y="776.3068">Finalizers []string</text><ellipse cx="4931.5" cy="791.9747" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="4940.5" y="796.5787">ManagedFields []ManagedFieldsEntry</text></g><!--MD5=[7a92b58df60425295d0dca65ec9fcdcd]
class v1.ObjectMetaAccessor--><g id="elem_v1.ObjectMetaAccessor"><rect codeLine="923" fill="#F1F1F1" height="40" id="v1.ObjectMetaAccessor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="165" x="3714.5" y="259.032"/><ellipse cx="3729.5" cy="275.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3725.8594,281.532 L3732.6406,281.532 L3732.6406,279.4539 L3730.4844,279.4539 L3730.4844,271.0164 L3732.6406,271.0164 L3732.6406,268.907 L3725.8594,268.907 L3725.8594,271.0164 L3727.9531,271.0164 L3727.9531,279.4539 L3725.8594,279.4539 L3725.8594,281.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="3743.5" y="281.136">ObjectMetaAccessor</text><line style="stroke:#181818;stroke-width:0.5;" x1="3715.5" x2="3878.5" y1="291.032" y2="291.032"/></g><!--MD5=[2d25b3e835a84d34119f68eb51712c8f]
class v1.OwnerReference--><g id="elem_v1.OwnerReference"><rect codeLine="927" fill="#F1F1F1" height="161.6315" id="v1.OwnerReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="200" x="3660" y="894.532"/><ellipse cx="3701.1" cy="910.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3701.2875,917.2351 C3703.5844,917.2351 3705.0375,915.6101 3705.0375,913.6101 C3705.0375,911.782 3704.2094,910.9382 3703.0688,910.1414 L3702.0531,909.4226 C3700.9281,908.6101 3700.5063,908.3132 3700.5063,907.4539 C3700.5063,906.7664 3700.9906,906.3601 3701.5688,906.3601 C3702.3031,906.3601 3702.7875,906.7507 3703.4906,907.3914 L3704.8031,905.8132 C3703.8344,904.7976 3702.8188,904.2039 3701.5531,904.2039 C3699.4125,904.2039 3697.9594,905.7195 3697.9594,907.6414 C3697.9594,909.4382 3698.8813,910.3445 3699.975,911.0945 L3701.0688,911.8445 C3702.0063,912.4539 3702.4594,913.032 3702.4594,913.9695 C3702.4594,914.6414 3701.9906,915.0632 3701.2875,915.0632 C3700.5844,915.0632 3699.8344,914.5476 3699.1781,913.7195 L3697.6313,915.407 C3698.6625,916.5945 3699.9594,917.2351 3701.2875,917.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="3720.9" y="916.636">OwnerReference</text><line style="stroke:#181818;stroke-width:0.5;" x1="3661" x2="3859" y1="926.532" y2="926.532"/><ellipse cx="3671" cy="942.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="3680" y="946.7719">APIVersion string</text><ellipse cx="3671" cy="962.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="3680" y="967.0438">Kind string</text><ellipse cx="3671" cy="982.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="3680" y="987.3157">Name string</text><ellipse cx="3671" cy="1002.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="3680" y="1007.5876">UID types.UID</text><ellipse cx="3671" cy="1023.2556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="3680" y="1027.8596">Controller *bool</text><ellipse cx="3671" cy="1043.5275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="3680" y="1048.1315">BlockOwnerDeletion *bool</text></g><!--MD5=[79fa7f2eabe0a916b1422afad66fc925]
class v1.PartialObjectMetadata--><g id="elem_v1.PartialObjectMetadata"><rect codeLine="954" fill="#F1F1F1" height="40" id="v1.PartialObjectMetadata" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="180" x="4619" y="955.532"/><ellipse cx="4634" cy="971.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4634.1875,978.2351 C4636.4844,978.2351 4637.9375,976.6101 4637.9375,974.6101 C4637.9375,972.782 4637.1094,971.9382 4635.9688,971.1414 L4634.9531,970.4226 C4633.8281,969.6101 4633.4063,969.3132 4633.4063,968.4539 C4633.4063,967.7664 4633.8906,967.3601 4634.4688,967.3601 C4635.2031,967.3601 4635.6875,967.7507 4636.3906,968.3914 L4637.7031,966.8132 C4636.7344,965.7976 4635.7188,965.2039 4634.4531,965.2039 C4632.3125,965.2039 4630.8594,966.7195 4630.8594,968.6414 C4630.8594,970.4382 4631.7813,971.3445 4632.875,972.0945 L4633.9688,972.8445 C4634.9063,973.4539 4635.3594,974.032 4635.3594,974.9695 C4635.3594,975.6414 4634.8906,976.0632 4634.1875,976.0632 C4633.4844,976.0632 4632.7344,975.5476 4632.0781,974.7195 L4630.5313,976.407 C4631.5625,977.5945 4632.8594,978.2351 4634.1875,978.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="4648" y="977.636">PartialObjectMetadata</text><line style="stroke:#181818;stroke-width:0.5;" x1="4620" x2="4798" y1="987.532" y2="987.532"/></g><!--MD5=[1e3dadac2fc4f368e12f768f857bc92a]
class v1.PartialObjectMetadataList--><g id="elem_v1.PartialObjectMetadataList"><rect codeLine="975" fill="#F1F1F1" height="60.2719" id="v1.PartialObjectMetadataList" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="224" x="5095" y="945.532"/><ellipse cx="5119" cy="961.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5119.1875,968.2351 C5121.4844,968.2351 5122.9375,966.6101 5122.9375,964.6101 C5122.9375,962.782 5122.1094,961.9382 5120.9688,961.1414 L5119.9531,960.4226 C5118.8281,959.6101 5118.4063,959.3132 5118.4063,958.4539 C5118.4063,957.7664 5118.8906,957.3601 5119.4688,957.3601 C5120.2031,957.3601 5120.6875,957.7507 5121.3906,958.3914 L5122.7031,956.8132 C5121.7344,955.7976 5120.7188,955.2039 5119.4531,955.2039 C5117.3125,955.2039 5115.8594,956.7195 5115.8594,958.6414 C5115.8594,960.4382 5116.7813,961.3445 5117.875,962.0945 L5118.9688,962.8445 C5119.9063,963.4539 5120.3594,964.032 5120.3594,964.9695 C5120.3594,965.6414 5119.8906,966.0632 5119.1875,966.0632 C5118.4844,966.0632 5117.7344,965.5476 5117.0781,964.7195 L5115.5313,966.407 C5116.5625,967.5945 5117.8594,968.2351 5119.1875,968.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="5135" y="967.636">PartialObjectMetadataList</text><line style="stroke:#181818;stroke-width:0.5;" x1="5096" x2="5318" y1="977.532" y2="977.532"/><ellipse cx="5106" cy="993.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="5115" y="997.7719">Items []PartialObjectMetadata</text></g><!--MD5=[f9fd6a5601a7052fd2e0129f53592400]
class v1.Patch--><g id="elem_v1.Patch"><rect codeLine="998" fill="#F1F1F1" height="40" id="v1.Patch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="70" x="3895" y="955.532"/><ellipse cx="3910" cy="971.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3910.1875,978.2351 C3912.4844,978.2351 3913.9375,976.6101 3913.9375,974.6101 C3913.9375,972.782 3913.1094,971.9382 3911.9688,971.1414 L3910.9531,970.4226 C3909.8281,969.6101 3909.4063,969.3132 3909.4063,968.4539 C3909.4063,967.7664 3909.8906,967.3601 3910.4688,967.3601 C3911.2031,967.3601 3911.6875,967.7507 3912.3906,968.3914 L3913.7031,966.8132 C3912.7344,965.7976 3911.7188,965.2039 3910.4531,965.2039 C3908.3125,965.2039 3906.8594,966.7195 3906.8594,968.6414 C3906.8594,970.4382 3907.7813,971.3445 3908.875,972.0945 L3909.9688,972.8445 C3910.9063,973.4539 3911.3594,974.032 3911.3594,974.9695 C3911.3594,975.6414 3910.8906,976.0632 3910.1875,976.0632 C3909.4844,976.0632 3908.7344,975.5476 3908.0781,974.7195 L3906.5313,976.407 C3907.5625,977.5945 3908.8594,978.2351 3910.1875,978.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="38" x="3924" y="977.636">Patch</text><line style="stroke:#181818;stroke-width:0.5;" x1="3896" x2="3964" y1="987.532" y2="987.532"/></g><!--MD5=[ddca62756c00380e4a2a470041572e15]
class v1.PatchOptions--><g id="elem_v1.PatchOptions"><rect codeLine="1018" fill="#F1F1F1" height="121.0876" id="v1.PatchOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="167" x="811.5" y="915.032"/><ellipse cx="846.75" cy="931.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M846.9375,937.7351 C849.2344,937.7351 850.6875,936.1101 850.6875,934.1101 C850.6875,932.282 849.8594,931.4382 848.7188,930.6414 L847.7031,929.9226 C846.5781,929.1101 846.1563,928.8132 846.1563,927.9539 C846.1563,927.2664 846.6406,926.8601 847.2188,926.8601 C847.9531,926.8601 848.4375,927.2507 849.1406,927.8914 L850.4531,926.3132 C849.4844,925.2976 848.4688,924.7039 847.2031,924.7039 C845.0625,924.7039 843.6094,926.2195 843.6094,928.1414 C843.6094,929.9382 844.5313,930.8445 845.625,931.5945 L846.7188,932.3445 C847.6563,932.9539 848.1094,933.532 848.1094,934.4695 C848.1094,935.1414 847.6406,935.5632 846.9375,935.5632 C846.2344,935.5632 845.4844,935.0476 844.8281,934.2195 L843.2813,935.907 C844.3125,937.0945 845.6094,937.7351 846.9375,937.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="865.25" y="937.136">PatchOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="812.5" x2="977.5" y1="947.032" y2="947.032"/><ellipse cx="822.5" cy="962.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="831.5" y="967.2719">DryRun []string</text><ellipse cx="822.5" cy="982.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="831.5" y="987.5438">Force *bool</text><ellipse cx="822.5" cy="1003.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="831.5" y="1007.8157">FieldManager string</text><ellipse cx="822.5" cy="1023.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="831.5" y="1028.0876">FieldValidation string</text></g><!--MD5=[14ae47e2b572b938dad238575281c646]
class v1.Preconditions--><g id="elem_v1.Preconditions"><rect codeLine="1044" fill="#F1F1F1" height="80.5438" id="v1.Preconditions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="184" x="4000" y="935.032"/><ellipse cx="4042" cy="951.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4042.1875,957.7351 C4044.4844,957.7351 4045.9375,956.1101 4045.9375,954.1101 C4045.9375,952.282 4045.1094,951.4382 4043.9688,950.6414 L4042.9531,949.9226 C4041.8281,949.1101 4041.4063,948.8132 4041.4063,947.9539 C4041.4063,947.2664 4041.8906,946.8601 4042.4688,946.8601 C4043.2031,946.8601 4043.6875,947.2507 4044.3906,947.8914 L4045.7031,946.3132 C4044.7344,945.2976 4043.7188,944.7039 4042.4531,944.7039 C4040.3125,944.7039 4038.8594,946.2195 4038.8594,948.1414 C4038.8594,949.9382 4039.7813,950.8445 4040.875,951.5945 L4041.9688,952.3445 C4042.9063,952.9539 4043.3594,953.532 4043.3594,954.4695 C4043.3594,955.1414 4042.8906,955.5632 4042.1875,955.5632 C4041.4844,955.5632 4040.7344,955.0476 4040.0781,954.2195 L4038.5313,955.907 C4039.5625,957.0945 4040.8594,957.7351 4042.1875,957.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="4062" y="957.136">Preconditions</text><line style="stroke:#181818;stroke-width:0.5;" x1="4001" x2="4183" y1="967.032" y2="967.032"/><ellipse cx="4011" cy="982.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="4020" y="987.2719">UID *types.UID</text><ellipse cx="4011" cy="1002.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="4020" y="1007.5438">ResourceVersion *string</text></g><!--MD5=[f1ffcba968499b225fce857429e0cfc9]
class v1.RootPaths--><g id="elem_v1.RootPaths"><rect codeLine="1067" fill="#F1F1F1" height="60.2719" id="v1.RootPaths" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="4219.5" y="945.532"/><ellipse cx="4241.25" cy="961.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4241.4375,968.2351 C4243.7344,968.2351 4245.1875,966.6101 4245.1875,964.6101 C4245.1875,962.782 4244.3594,961.9382 4243.2188,961.1414 L4242.2031,960.4226 C4241.0781,959.6101 4240.6563,959.3132 4240.6563,958.4539 C4240.6563,957.7664 4241.1406,957.3601 4241.7188,957.3601 C4242.4531,957.3601 4242.9375,957.7507 4243.6406,958.3914 L4244.9531,956.8132 C4243.9844,955.7976 4242.9688,955.2039 4241.7031,955.2039 C4239.5625,955.2039 4238.1094,956.7195 4238.1094,958.6414 C4238.1094,960.4382 4239.0313,961.3445 4240.125,962.0945 L4241.2188,962.8445 C4242.1563,963.4539 4242.6094,964.032 4242.6094,964.9695 C4242.6094,965.6414 4242.1406,966.0632 4241.4375,966.0632 C4240.7344,966.0632 4239.9844,965.5476 4239.3281,964.7195 L4237.7813,966.407 C4238.8125,967.5945 4240.1094,968.2351 4241.4375,968.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="4256.75" y="967.636">RootPaths</text><line style="stroke:#181818;stroke-width:0.5;" x1="4220.5" x2="4333.5" y1="977.532" y2="977.532"/><ellipse cx="4230.5" cy="993.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="4239.5" y="997.7719">Paths []string</text></g><!--MD5=[73557558d521745f248eb0de4f205449]
class v1.ServerAddressByClientCIDR--><g id="elem_v1.ServerAddressByClientCIDR"><rect codeLine="1089" fill="#F1F1F1" height="80.5438" id="v1.ServerAddressByClientCIDR" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="214" x="4370" y="935.032"/><ellipse cx="4385" cy="951.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4385.1875,957.7351 C4387.4844,957.7351 4388.9375,956.1101 4388.9375,954.1101 C4388.9375,952.282 4388.1094,951.4382 4386.9688,950.6414 L4385.9531,949.9226 C4384.8281,949.1101 4384.4063,948.8132 4384.4063,947.9539 C4384.4063,947.2664 4384.8906,946.8601 4385.4688,946.8601 C4386.2031,946.8601 4386.6875,947.2507 4387.3906,947.8914 L4388.7031,946.3132 C4387.7344,945.2976 4386.7188,944.7039 4385.4531,944.7039 C4383.3125,944.7039 4381.8594,946.2195 4381.8594,948.1414 C4381.8594,949.9382 4382.7813,950.8445 4383.875,951.5945 L4384.9688,952.3445 C4385.9063,952.9539 4386.3594,953.532 4386.3594,954.4695 C4386.3594,955.1414 4385.8906,955.5632 4385.1875,955.5632 C4384.4844,955.5632 4383.7344,955.0476 4383.0781,954.2195 L4381.5313,955.907 C4382.5625,957.0945 4383.8594,957.7351 4385.1875,957.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="4399" y="957.136">ServerAddressByClientCIDR</text><line style="stroke:#181818;stroke-width:0.5;" x1="4371" x2="4583" y1="967.032" y2="967.032"/><ellipse cx="4381" cy="982.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="4390" y="987.2719">ClientCIDR string</text><ellipse cx="4381" cy="1002.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="4390" y="1007.5438">ServerAddress string</text></g><!--MD5=[6e82abb22b1144079fc9ddf6451a544e]
class v1.Status--><g id="elem_v1.Status"><rect codeLine="1112" fill="#F1F1F1" height="141.3596" id="v1.Status" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="170" x="5354" y="905.032"/><ellipse cx="5413.75" cy="921.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5413.9375,927.7351 C5416.2344,927.7351 5417.6875,926.1101 5417.6875,924.1101 C5417.6875,922.282 5416.8594,921.4382 5415.7188,920.6414 L5414.7031,919.9226 C5413.5781,919.1101 5413.1563,918.8132 5413.1563,917.9539 C5413.1563,917.2664 5413.6406,916.8601 5414.2188,916.8601 C5414.9531,916.8601 5415.4375,917.2507 5416.1406,917.8914 L5417.4531,916.3132 C5416.4844,915.2976 5415.4688,914.7039 5414.2031,914.7039 C5412.0625,914.7039 5410.6094,916.2195 5410.6094,918.1414 C5410.6094,919.9382 5411.5313,920.8445 5412.625,921.5945 L5413.7188,922.3445 C5414.6563,922.9539 5415.1094,923.532 5415.1094,924.4695 C5415.1094,925.1414 5414.6406,925.5632 5413.9375,925.5632 C5413.2344,925.5632 5412.4844,925.0476 5411.8281,924.2195 L5410.2813,925.907 C5411.3125,927.0945 5412.6094,927.7351 5413.9375,927.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="5434.25" y="927.136">Status</text><line style="stroke:#181818;stroke-width:0.5;" x1="5355" x2="5523" y1="937.032" y2="937.032"/><ellipse cx="5365" cy="952.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="5374" y="957.2719">Status string</text><ellipse cx="5365" cy="972.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="5374" y="977.5438">Message string</text><ellipse cx="5365" cy="993.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="5374" y="997.8157">Reason StatusReason</text><ellipse cx="5365" cy="1013.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="5374" y="1018.0876">Details *StatusDetails</text><ellipse cx="5365" cy="1033.7556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="5374" y="1038.3596">Code int32</text></g><!--MD5=[7f7b5a7ae6d44076027ad1dda3dcea57]
class v1.StatusCause--><g id="elem_v1.StatusCause"><rect codeLine="1139" fill="#F1F1F1" height="100.8157" id="v1.StatusCause" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="3411" y="1177.032"/><ellipse cx="3434.55" cy="1193.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3434.7375,1199.7351 C3437.0344,1199.7351 3438.4875,1198.1101 3438.4875,1196.1101 C3438.4875,1194.282 3437.6594,1193.4382 3436.5188,1192.6414 L3435.5031,1191.9226 C3434.3781,1191.1101 3433.9563,1190.8132 3433.9563,1189.9539 C3433.9563,1189.2664 3434.4406,1188.8601 3435.0188,1188.8601 C3435.7531,1188.8601 3436.2375,1189.2507 3436.9406,1189.8914 L3438.2531,1188.3132 C3437.2844,1187.2976 3436.2688,1186.7039 3435.0031,1186.7039 C3432.8625,1186.7039 3431.4094,1188.2195 3431.4094,1190.1414 C3431.4094,1191.9382 3432.3313,1192.8445 3433.425,1193.5945 L3434.5188,1194.3445 C3435.4563,1194.9539 3435.9094,1195.532 3435.9094,1196.4695 C3435.9094,1197.1414 3435.4406,1197.5632 3434.7375,1197.5632 C3434.0344,1197.5632 3433.2844,1197.0476 3432.6281,1196.2195 L3431.0813,1197.907 C3432.1125,1199.0945 3433.4094,1199.7351 3434.7375,1199.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="3450.45" y="1199.136">StatusCause</text><line style="stroke:#181818;stroke-width:0.5;" x1="3412" x2="3544" y1="1209.032" y2="1209.032"/><ellipse cx="3422" cy="1224.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="3431" y="1229.2719">Type CauseType</text><ellipse cx="3422" cy="1244.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="3431" y="1249.5438">Message string</text><ellipse cx="3422" cy="1265.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="3431" y="1269.8157">Field string</text></g><!--MD5=[a8ffcaea0eae87f1d250743121dc7edc]
class v1.StatusDetails--><g id="elem_v1.StatusDetails"><rect codeLine="1163" fill="#F1F1F1" height="161.6315" id="v1.StatusDetails" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="185" x="3580.5" y="1146.532"/><ellipse cx="3624.75" cy="1162.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3624.9375,1169.2351 C3627.2344,1169.2351 3628.6875,1167.6101 3628.6875,1165.6101 C3628.6875,1163.782 3627.8594,1162.9382 3626.7188,1162.1414 L3625.7031,1161.4226 C3624.5781,1160.6101 3624.1563,1160.3132 3624.1563,1159.4539 C3624.1563,1158.7664 3624.6406,1158.3601 3625.2188,1158.3601 C3625.9531,1158.3601 3626.4375,1158.7507 3627.1406,1159.3914 L3628.4531,1157.8132 C3627.4844,1156.7976 3626.4688,1156.2039 3625.2031,1156.2039 C3623.0625,1156.2039 3621.6094,1157.7195 3621.6094,1159.6414 C3621.6094,1161.4382 3622.5313,1162.3445 3623.625,1163.0945 L3624.7188,1163.8445 C3625.6563,1164.4539 3626.1094,1165.032 3626.1094,1165.9695 C3626.1094,1166.6414 3625.6406,1167.0632 3624.9375,1167.0632 C3624.2344,1167.0632 3623.4844,1166.5476 3622.8281,1165.7195 L3621.2813,1167.407 C3622.3125,1168.5945 3623.6094,1169.2351 3624.9375,1169.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="3645.25" y="1168.636">StatusDetails</text><line style="stroke:#181818;stroke-width:0.5;" x1="3581.5" x2="3764.5" y1="1178.532" y2="1178.532"/><ellipse cx="3591.5" cy="1194.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="3600.5" y="1198.7719">Name string</text><ellipse cx="3591.5" cy="1214.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="3600.5" y="1219.0438">Group string</text><ellipse cx="3591.5" cy="1234.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="3600.5" y="1239.3157">Kind string</text><ellipse cx="3591.5" cy="1254.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="3600.5" y="1259.5876">UID types.UID</text><ellipse cx="3591.5" cy="1275.2556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="3600.5" y="1279.8596">Causes []StatusCause</text><ellipse cx="3591.5" cy="1295.5275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="3600.5" y="1300.1315">RetryAfterSeconds int32</text></g><!--MD5=[6f93c934fbdf614710169f6258173852]
class v1.Table--><g id="elem_v1.Table"><rect codeLine="1190" fill="#F1F1F1" height="80.5438" id="v1.Table" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="319" x="5559.5" y="935.032"/><ellipse cx="5696.25" cy="951.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5696.4375,957.7351 C5698.7344,957.7351 5700.1875,956.1101 5700.1875,954.1101 C5700.1875,952.282 5699.3594,951.4382 5698.2188,950.6414 L5697.2031,949.9226 C5696.0781,949.1101 5695.6563,948.8132 5695.6563,947.9539 C5695.6563,947.2664 5696.1406,946.8601 5696.7188,946.8601 C5697.4531,946.8601 5697.9375,947.2507 5698.6406,947.8914 L5699.9531,946.3132 C5698.9844,945.2976 5697.9688,944.7039 5696.7031,944.7039 C5694.5625,944.7039 5693.1094,946.2195 5693.1094,948.1414 C5693.1094,949.9382 5694.0313,950.8445 5695.125,951.5945 L5696.2188,952.3445 C5697.1563,952.9539 5697.6094,953.532 5697.6094,954.4695 C5697.6094,955.1414 5697.1406,955.5632 5696.4375,955.5632 C5695.7344,955.5632 5694.9844,955.0476 5694.3281,954.2195 L5692.7813,955.907 C5693.8125,957.0945 5695.1094,957.7351 5696.4375,957.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="37" x="5716.75" y="957.136">Table</text><line style="stroke:#181818;stroke-width:0.5;" x1="5560.5" x2="5877.5" y1="967.032" y2="967.032"/><ellipse cx="5570.5" cy="982.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="5579.5" y="987.2719">ColumnDefinitions []TableColumnDefinition</text><ellipse cx="5570.5" cy="1002.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="5579.5" y="1007.5438">Rows []TableRow</text></g><!--MD5=[39ce2553949d4103bad9f738260aa8c2]
class v1.TableColumnDefinition--><g id="elem_v1.TableColumnDefinition"><rect codeLine="1200" fill="#F1F1F1" height="141.3596" id="v1.TableColumnDefinition" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="187" x="3800.5" y="1157.032"/><ellipse cx="3815.5" cy="1173.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3815.6875,1179.7351 C3817.9844,1179.7351 3819.4375,1178.1101 3819.4375,1176.1101 C3819.4375,1174.282 3818.6094,1173.4382 3817.4688,1172.6414 L3816.4531,1171.9226 C3815.3281,1171.1101 3814.9063,1170.8132 3814.9063,1169.9539 C3814.9063,1169.2664 3815.3906,1168.8601 3815.9688,1168.8601 C3816.7031,1168.8601 3817.1875,1169.2507 3817.8906,1169.8914 L3819.2031,1168.3132 C3818.2344,1167.2976 3817.2188,1166.7039 3815.9531,1166.7039 C3813.8125,1166.7039 3812.3594,1168.2195 3812.3594,1170.1414 C3812.3594,1171.9382 3813.2813,1172.8445 3814.375,1173.5945 L3815.4688,1174.3445 C3816.4063,1174.9539 3816.8594,1175.532 3816.8594,1176.4695 C3816.8594,1177.1414 3816.3906,1177.5632 3815.6875,1177.5632 C3814.9844,1177.5632 3814.2344,1177.0476 3813.5781,1176.2195 L3812.0313,1177.907 C3813.0625,1179.0945 3814.3594,1179.7351 3815.6875,1179.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="3829.5" y="1179.136">TableColumnDefinition</text><line style="stroke:#181818;stroke-width:0.5;" x1="3801.5" x2="3986.5" y1="1189.032" y2="1189.032"/><ellipse cx="3811.5" cy="1204.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="3820.5" y="1209.2719">Name string</text><ellipse cx="3811.5" cy="1224.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="3820.5" y="1229.5438">Type string</text><ellipse cx="3811.5" cy="1245.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="3820.5" y="1249.8157">Format string</text><ellipse cx="3811.5" cy="1265.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="3820.5" y="1270.0876">Description string</text><ellipse cx="3811.5" cy="1285.7556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="3820.5" y="1290.3596">Priority int32</text></g><!--MD5=[fb1b537d09b17acb757f3be6cbbdc1e7]
class v1.TableOptions--><g id="elem_v1.TableOptions"><rect codeLine="1212" fill="#F1F1F1" height="80.5438" id="v1.TableOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="254" x="1652" y="935.032"/><ellipse cx="1730.25" cy="951.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1730.4375,957.7351 C1732.7344,957.7351 1734.1875,956.1101 1734.1875,954.1101 C1734.1875,952.282 1733.3594,951.4382 1732.2188,950.6414 L1731.2031,949.9226 C1730.0781,949.1101 1729.6563,948.8132 1729.6563,947.9539 C1729.6563,947.2664 1730.1406,946.8601 1730.7188,946.8601 C1731.4531,946.8601 1731.9375,947.2507 1732.6406,947.8914 L1733.9531,946.3132 C1732.9844,945.2976 1731.9688,944.7039 1730.7031,944.7039 C1728.5625,944.7039 1727.1094,946.2195 1727.1094,948.1414 C1727.1094,949.9382 1728.0313,950.8445 1729.125,951.5945 L1730.2188,952.3445 C1731.1563,952.9539 1731.6094,953.532 1731.6094,954.4695 C1731.6094,955.1414 1731.1406,955.5632 1730.4375,955.5632 C1729.7344,955.5632 1728.9844,955.0476 1728.3281,954.2195 L1726.7813,955.907 C1727.8125,957.0945 1729.1094,957.7351 1730.4375,957.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="1750.75" y="957.136">TableOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="1653" x2="1905" y1="967.032" y2="967.032"/><ellipse cx="1663" cy="982.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="1672" y="987.2719">NoHeaders bool</text><ellipse cx="1663" cy="1002.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="1672" y="1007.5438">IncludeObject IncludeObjectPolicy</text></g><!--MD5=[d8d3a137937f89a38fa11a8a25343693]
class v1.TableRow--><g id="elem_v1.TableRow"><rect codeLine="1236" fill="#F1F1F1" height="100.8157" id="v1.TableRow" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="241" x="4022.5" y="1177.032"/><ellipse cx="4106.25" cy="1193.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4106.4375,1199.7351 C4108.7344,1199.7351 4110.1875,1198.1101 4110.1875,1196.1101 C4110.1875,1194.282 4109.3594,1193.4382 4108.2188,1192.6414 L4107.2031,1191.9226 C4106.0781,1191.1101 4105.6563,1190.8132 4105.6563,1189.9539 C4105.6563,1189.2664 4106.1406,1188.8601 4106.7188,1188.8601 C4107.4531,1188.8601 4107.9375,1189.2507 4108.6406,1189.8914 L4109.9531,1188.3132 C4108.9844,1187.2976 4107.9688,1186.7039 4106.7031,1186.7039 C4104.5625,1186.7039 4103.1094,1188.2195 4103.1094,1190.1414 C4103.1094,1191.9382 4104.0313,1192.8445 4105.125,1193.5945 L4106.2188,1194.3445 C4107.1563,1194.9539 4107.6094,1195.532 4107.6094,1196.4695 C4107.6094,1197.1414 4107.1406,1197.5632 4106.4375,1197.5632 C4105.7344,1197.5632 4104.9844,1197.0476 4104.3281,1196.2195 L4102.7813,1197.907 C4103.8125,1199.0945 4105.1094,1199.7351 4106.4375,1199.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="4126.75" y="1199.136">TableRow</text><line style="stroke:#181818;stroke-width:0.5;" x1="4023.5" x2="4262.5" y1="1209.032" y2="1209.032"/><ellipse cx="4033.5" cy="1224.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="45" x="4042.5" y="1229.2719">Cells []</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="4087.5" y="1229.2719">interface</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="4146.5" y="1229.2719">{}</text><ellipse cx="4033.5" cy="1244.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="4042.5" y="1249.5438">Conditions []TableRowCondition</text><ellipse cx="4033.5" cy="1265.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="4042.5" y="1269.8157">Object runtime.RawExtension</text></g><!--MD5=[92d0c777336f44485072c3f2f008b1fb]
class v1.TableRowCondition--><g id="elem_v1.TableRowCondition"><rect codeLine="1246" fill="#F1F1F1" height="121.0876" id="v1.TableRowCondition" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="4299" y="1167.032"/><ellipse cx="4324.8" cy="1183.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4324.9875,1189.7351 C4327.2844,1189.7351 4328.7375,1188.1101 4328.7375,1186.1101 C4328.7375,1184.282 4327.9094,1183.4382 4326.7688,1182.6414 L4325.7531,1181.9226 C4324.6281,1181.1101 4324.2063,1180.8132 4324.2063,1179.9539 C4324.2063,1179.2664 4324.6906,1178.8601 4325.2688,1178.8601 C4326.0031,1178.8601 4326.4875,1179.2507 4327.1906,1179.8914 L4328.5031,1178.3132 C4327.5344,1177.2976 4326.5188,1176.7039 4325.2531,1176.7039 C4323.1125,1176.7039 4321.6594,1178.2195 4321.6594,1180.1414 C4321.6594,1181.9382 4322.5813,1182.8445 4323.675,1183.5945 L4324.7688,1184.3445 C4325.7063,1184.9539 4326.1594,1185.532 4326.1594,1186.4695 C4326.1594,1187.1414 4325.6906,1187.5632 4324.9875,1187.5632 C4324.2844,1187.5632 4323.5344,1187.0476 4322.8781,1186.2195 L4321.3313,1187.907 C4322.3625,1189.0945 4323.6594,1189.7351 4324.9875,1189.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="4341.2" y="1189.136">TableRowCondition</text><line style="stroke:#181818;stroke-width:0.5;" x1="4300" x2="4484" y1="1199.032" y2="1199.032"/><ellipse cx="4310" cy="1214.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="4319" y="1219.2719">Type RowConditionType</text><ellipse cx="4310" cy="1234.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="4319" y="1239.5438">Status ConditionStatus</text><ellipse cx="4310" cy="1255.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="4319" y="1259.8157">Reason string</text><ellipse cx="4310" cy="1275.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="4319" y="1280.0876">Message string</text></g><!--MD5=[e64a824d3351a703c40fca4c4957701b]
class v1.Time--><g id="elem_v1.Time"><rect codeLine="1257" fill="#F1F1F1" height="40" id="v1.Time" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="65" x="3614.5" y="259.032"/><ellipse cx="3629.5" cy="275.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3629.6875,281.7351 C3631.9844,281.7351 3633.4375,280.1101 3633.4375,278.1101 C3633.4375,276.282 3632.6094,275.4382 3631.4688,274.6414 L3630.4531,273.9226 C3629.3281,273.1101 3628.9063,272.8132 3628.9063,271.9539 C3628.9063,271.2664 3629.3906,270.8601 3629.9688,270.8601 C3630.7031,270.8601 3631.1875,271.2507 3631.8906,271.8914 L3633.2031,270.3132 C3632.2344,269.2976 3631.2188,268.7039 3629.9531,268.7039 C3627.8125,268.7039 3626.3594,270.2195 3626.3594,272.1414 C3626.3594,273.9382 3627.2813,274.8445 3628.375,275.5945 L3629.4688,276.3445 C3630.4063,276.9539 3630.8594,277.532 3630.8594,278.4695 C3630.8594,279.1414 3630.3906,279.5632 3629.6875,279.5632 C3628.9844,279.5632 3628.2344,279.0476 3627.5781,278.2195 L3626.0313,279.907 C3627.0625,281.0945 3628.3594,281.7351 3629.6875,281.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="3643.5" y="281.136">Time</text><line style="stroke:#181818;stroke-width:0.5;" x1="3615.5" x2="3678.5" y1="291.032" y2="291.032"/></g><!--MD5=[2afe174ef9266796457db523f26f9e20]
class v1.Timestamp--><g id="elem_v1.Timestamp"><rect codeLine="1288" fill="#F1F1F1" height="80.5438" id="v1.Timestamp" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="119" x="4520.5" y="1187.032"/><ellipse cx="4540.9" cy="1203.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4541.0875,1209.7351 C4543.3844,1209.7351 4544.8375,1208.1101 4544.8375,1206.1101 C4544.8375,1204.282 4544.0094,1203.4382 4542.8688,1202.6414 L4541.8531,1201.9226 C4540.7281,1201.1101 4540.3063,1200.8132 4540.3063,1199.9539 C4540.3063,1199.2664 4540.7906,1198.8601 4541.3688,1198.8601 C4542.1031,1198.8601 4542.5875,1199.2507 4543.2906,1199.8914 L4544.6031,1198.3132 C4543.6344,1197.2976 4542.6188,1196.7039 4541.3531,1196.7039 C4539.2125,1196.7039 4537.7594,1198.2195 4537.7594,1200.1414 C4537.7594,1201.9382 4538.6813,1202.8445 4539.775,1203.5945 L4540.8688,1204.3445 C4541.8063,1204.9539 4542.2594,1205.532 4542.2594,1206.4695 C4542.2594,1207.1414 4541.7906,1207.5632 4541.0875,1207.5632 C4540.3844,1207.5632 4539.6344,1207.0476 4538.9781,1206.2195 L4537.4313,1207.907 C4538.4625,1209.0945 4539.7594,1209.7351 4541.0875,1209.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="4556.1" y="1209.136">Timestamp</text><line style="stroke:#181818;stroke-width:0.5;" x1="4521.5" x2="4638.5" y1="1219.032" y2="1219.032"/><ellipse cx="4531.5" cy="1234.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="4540.5" y="1239.2719">Seconds int64</text><ellipse cx="4531.5" cy="1254.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="4540.5" y="1259.5438">Nanos int32</text></g><!--MD5=[01f2749ff2f01cd8f34994e59ef72c7c]
class v1.TypeMeta--><g id="elem_v1.TypeMeta"><rect codeLine="1317" fill="#F1F1F1" height="80.5438" id="v1.TypeMeta" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="138" x="2158" y="592.032"/><ellipse cx="2191.9" cy="608.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2192.0875,614.7351 C2194.3844,614.7351 2195.8375,613.1101 2195.8375,611.1101 C2195.8375,609.282 2195.0094,608.4382 2193.8688,607.6414 L2192.8531,606.9226 C2191.7281,606.1101 2191.3063,605.8132 2191.3063,604.9539 C2191.3063,604.2664 2191.7906,603.8601 2192.3688,603.8601 C2193.1031,603.8601 2193.5875,604.2507 2194.2906,604.8914 L2195.6031,603.3132 C2194.6344,602.2976 2193.6188,601.7039 2192.3531,601.7039 C2190.2125,601.7039 2188.7594,603.2195 2188.7594,605.1414 C2188.7594,606.9382 2189.6813,607.8445 2190.775,608.5945 L2191.8688,609.3445 C2192.8063,609.9539 2193.2594,610.532 2193.2594,611.4695 C2193.2594,612.1414 2192.7906,612.5632 2192.0875,612.5632 C2191.3844,612.5632 2190.6344,612.0476 2189.9781,611.2195 L2188.4313,612.907 C2189.4625,614.0945 2190.7594,614.7351 2192.0875,614.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="2210.1" y="614.136">TypeMeta</text><line style="stroke:#181818;stroke-width:0.5;" x1="2159" x2="2295" y1="624.032" y2="624.032"/><ellipse cx="2169" cy="639.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="2178" y="644.2719">Kind string</text><ellipse cx="2169" cy="659.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="2178" y="664.5438">APIVersion string</text></g><!--MD5=[417b3c4ebde89b7a3638b1ece5c86212]
class v1.UpdateOptions--><g id="elem_v1.UpdateOptions"><rect codeLine="1341" fill="#F1F1F1" height="100.8157" id="v1.UpdateOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="167" x="1941.5" y="925.032"/><ellipse cx="1971.8" cy="941.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1971.9875,947.7351 C1974.2844,947.7351 1975.7375,946.1101 1975.7375,944.1101 C1975.7375,942.282 1974.9094,941.4382 1973.7688,940.6414 L1972.7531,939.9226 C1971.6281,939.1101 1971.2063,938.8132 1971.2063,937.9539 C1971.2063,937.2664 1971.6906,936.8601 1972.2688,936.8601 C1973.0031,936.8601 1973.4875,937.2507 1974.1906,937.8914 L1975.5031,936.3132 C1974.5344,935.2976 1973.5188,934.7039 1972.2531,934.7039 C1970.1125,934.7039 1968.6594,936.2195 1968.6594,938.1414 C1968.6594,939.9382 1969.5813,940.8445 1970.675,941.5945 L1971.7688,942.3445 C1972.7063,942.9539 1973.1594,943.532 1973.1594,944.4695 C1973.1594,945.1414 1972.6906,945.5632 1971.9875,945.5632 C1971.2844,945.5632 1970.5344,945.0476 1969.8781,944.2195 L1968.3313,945.907 C1969.3625,947.0945 1970.6594,947.7351 1971.9875,947.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="1989.2" y="947.136">UpdateOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="1942.5" x2="2107.5" y1="957.032" y2="957.032"/><ellipse cx="1952.5" cy="972.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="1961.5" y="977.2719">DryRun []string</text><ellipse cx="1952.5" cy="992.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="1961.5" y="997.5438">FieldManager string</text><ellipse cx="1952.5" cy="1013.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="1961.5" y="1017.8157">FieldValidation string</text></g><!--MD5=[2149754398769fb0fc048070970ccd9e]
class v1.Verbs--><g id="elem_v1.Verbs"><rect codeLine="1429" fill="#F1F1F1" height="40" id="v1.Verbs" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="69" x="3443.5" y="1389.032"/><ellipse cx="3458.5" cy="1405.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3457.2344,1412.032 L3459.7813,1412.032 L3459.7813,1401.5164 L3462.4063,1401.5164 L3462.4063,1399.407 L3454.5938,1399.407 L3454.5938,1401.5164 L3457.2344,1401.5164 L3457.2344,1412.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="37" x="3472.5" y="1411.136">Verbs</text><line style="stroke:#181818;stroke-width:0.5;" x1="3444.5" x2="3511.5" y1="1421.032" y2="1421.032"/></g><!--MD5=[772f94bb19da9543aa8c1ad79dd23cc3]
class v1.WatchEvent--><g id="elem_v1.WatchEvent"><rect codeLine="1385" fill="#F1F1F1" height="80.5438" id="v1.WatchEvent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="222" x="3548" y="1368.532"/><ellipse cx="3615.75" cy="1384.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3615.9375,1391.2351 C3618.2344,1391.2351 3619.6875,1389.6101 3619.6875,1387.6101 C3619.6875,1385.782 3618.8594,1384.9382 3617.7188,1384.1414 L3616.7031,1383.4226 C3615.5781,1382.6101 3615.1563,1382.3132 3615.1563,1381.4539 C3615.1563,1380.7664 3615.6406,1380.3601 3616.2188,1380.3601 C3616.9531,1380.3601 3617.4375,1380.7507 3618.1406,1381.3914 L3619.4531,1379.8132 C3618.4844,1378.7976 3617.4688,1378.2039 3616.2031,1378.2039 C3614.0625,1378.2039 3612.6094,1379.7195 3612.6094,1381.6414 C3612.6094,1383.4382 3613.5313,1384.3445 3614.625,1385.0945 L3615.7188,1385.8445 C3616.6563,1386.4539 3617.1094,1387.032 3617.1094,1387.9695 C3617.1094,1388.6414 3616.6406,1389.0632 3615.9375,1389.0632 C3615.2344,1389.0632 3614.4844,1388.5476 3613.8281,1387.7195 L3612.2813,1389.407 C3613.3125,1390.5945 3614.6094,1391.2351 3615.9375,1391.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="3636.25" y="1390.636">WatchEvent</text><line style="stroke:#181818;stroke-width:0.5;" x1="3549" x2="3769" y1="1400.532" y2="1400.532"/><ellipse cx="3559" cy="1416.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="3568" y="1420.7719">Type string</text><ellipse cx="3559" cy="1436.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="3568" y="1441.0438">Object runtime.RawExtension</text></g><!--MD5=[4b1359490ec74125796c9c24be3cd25e]
class v1.CauseType--><g id="elem_v1.CauseType"><rect codeLine="1409" fill="#F1F1F1" height="40" id="v1.CauseType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="105" x="3805.5" y="1389.032"/><ellipse cx="3820.5" cy="1405.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3819.2344,1412.032 L3821.7813,1412.032 L3821.7813,1401.5164 L3824.4063,1401.5164 L3824.4063,1399.407 L3816.5938,1399.407 L3816.5938,1401.5164 L3819.2344,1401.5164 L3819.2344,1412.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="3834.5" y="1411.136">CauseType</text><line style="stroke:#181818;stroke-width:0.5;" x1="3806.5" x2="3909.5" y1="1421.032" y2="1421.032"/></g><!--MD5=[c00c49641c86e0e1efc7f699bc8b274d]
class v1.ConditionStatus--><g id="elem_v1.ConditionStatus"><rect codeLine="1411" fill="#F1F1F1" height="40" id="v1.ConditionStatus" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="3945.5" y="1389.032"/><ellipse cx="3960.5" cy="1405.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3959.2344,1412.032 L3961.7813,1412.032 L3961.7813,1401.5164 L3964.4063,1401.5164 L3964.4063,1399.407 L3956.5938,1399.407 L3956.5938,1401.5164 L3959.2344,1401.5164 L3959.2344,1412.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="3974.5" y="1411.136">ConditionStatus</text><line style="stroke:#181818;stroke-width:0.5;" x1="3946.5" x2="4083.5" y1="1421.032" y2="1421.032"/></g><!--MD5=[ee4e1220b8a46bd6f5a93f843d323d60]
class v1.DeletionPropagation--><g id="elem_v1.DeletionPropagation"><rect codeLine="1413" fill="#F1F1F1" height="40" id="v1.DeletionPropagation" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="169" x="4119.5" y="1389.032"/><ellipse cx="4134.5" cy="1405.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4133.2344,1412.032 L4135.7813,1412.032 L4135.7813,1401.5164 L4138.4063,1401.5164 L4138.4063,1399.407 L4130.5938,1399.407 L4130.5938,1401.5164 L4133.2344,1401.5164 L4133.2344,1412.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="4148.5" y="1411.136">DeletionPropagation</text><line style="stroke:#181818;stroke-width:0.5;" x1="4120.5" x2="4287.5" y1="1421.032" y2="1421.032"/></g><!--MD5=[fc10d3bb4ed5906d0e7bbd2b2c13e76d]
class v1.IncludeObjectPolicy--><g id="elem_v1.IncludeObjectPolicy"><rect codeLine="1415" fill="#F1F1F1" height="40" id="v1.IncludeObjectPolicy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="164" x="4324" y="1389.032"/><ellipse cx="4339" cy="1405.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4337.7344,1412.032 L4340.2813,1412.032 L4340.2813,1401.5164 L4342.9063,1401.5164 L4342.9063,1399.407 L4335.0938,1399.407 L4335.0938,1401.5164 L4337.7344,1401.5164 L4337.7344,1412.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="4353" y="1411.136">IncludeObjectPolicy</text><line style="stroke:#181818;stroke-width:0.5;" x1="4325" x2="4487" y1="1421.032" y2="1421.032"/></g><!--MD5=[19681bc7681b9a20f8d4dc0de538ff8c]
class v1.LabelSelectorOperator--><g id="elem_v1.LabelSelectorOperator"><rect codeLine="1419" fill="#F1F1F1" height="40" id="v1.LabelSelectorOperator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="180" x="3388" y="1509.532"/><ellipse cx="3403" cy="1525.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3401.7344,1532.532 L3404.2813,1532.532 L3404.2813,1522.0164 L3406.9063,1522.0164 L3406.9063,1519.907 L3399.0938,1519.907 L3399.0938,1522.0164 L3401.7344,1522.0164 L3401.7344,1532.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="3417" y="1531.636">LabelSelectorOperator</text><line style="stroke:#181818;stroke-width:0.5;" x1="3389" x2="3567" y1="1541.532" y2="1541.532"/></g><!--MD5=[991b1f8cb2d71cae365195dae5469029]
class v1.ManagedFieldsOperationType--><g id="elem_v1.ManagedFieldsOperationType"><rect codeLine="1421" fill="#F1F1F1" height="40" id="v1.ManagedFieldsOperationType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="231" x="3603.5" y="1509.532"/><ellipse cx="3618.5" cy="1525.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3617.2344,1532.532 L3619.7813,1532.532 L3619.7813,1522.0164 L3622.4063,1522.0164 L3622.4063,1519.907 L3614.5938,1519.907 L3614.5938,1522.0164 L3617.2344,1522.0164 L3617.2344,1532.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="3632.5" y="1531.636">ManagedFieldsOperationType</text><line style="stroke:#181818;stroke-width:0.5;" x1="3604.5" x2="3833.5" y1="1541.532" y2="1541.532"/></g><!--MD5=[13357a8f908bc32f1dd0cd463b1024e9]
class v1.ResourceVersionMatch--><g id="elem_v1.ResourceVersionMatch"><rect codeLine="1423" fill="#F1F1F1" height="40" id="v1.ResourceVersionMatch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="182" x="3870" y="1509.532"/><ellipse cx="3885" cy="1525.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3883.7344,1532.532 L3886.2813,1532.532 L3886.2813,1522.0164 L3888.9063,1522.0164 L3888.9063,1519.907 L3881.0938,1519.907 L3881.0938,1522.0164 L3883.7344,1522.0164 L3883.7344,1532.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="3899" y="1531.636">ResourceVersionMatch</text><line style="stroke:#181818;stroke-width:0.5;" x1="3871" x2="4051" y1="1541.532" y2="1541.532"/></g><!--MD5=[70de6390314e5c705b3744ad58c4768a]
class v1.RowConditionType--><g id="elem_v1.RowConditionType"><rect codeLine="1425" fill="#F1F1F1" height="40" id="v1.RowConditionType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="157" x="4087.5" y="1509.532"/><ellipse cx="4102.5" cy="1525.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4101.2344,1532.532 L4103.7813,1532.532 L4103.7813,1522.0164 L4106.4063,1522.0164 L4106.4063,1519.907 L4098.5938,1519.907 L4098.5938,1522.0164 L4101.2344,1522.0164 L4101.2344,1532.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="4116.5" y="1531.636">RowConditionType</text><line style="stroke:#181818;stroke-width:0.5;" x1="4088.5" x2="4243.5" y1="1541.532" y2="1541.532"/></g><!--MD5=[744fc454ab069d4f96a48a61b9a13f78]
class v1.StatusReason--><g id="elem_v1.StatusReason"><rect codeLine="1427" fill="#F1F1F1" height="40" id="v1.StatusReason" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="4279.5" y="1509.532"/><ellipse cx="4294.5" cy="1525.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4293.2344,1532.532 L4295.7813,1532.532 L4295.7813,1522.0164 L4298.4063,1522.0164 L4298.4063,1519.907 L4290.5938,1519.907 L4290.5938,1522.0164 L4293.2344,1522.0164 L4293.2344,1532.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="4308.5" y="1531.636">StatusReason</text><line style="stroke:#181818;stroke-width:0.5;" x1="4280.5" x2="4401.5" y1="1541.532" y2="1541.532"/></g><!--MD5=[9303142592bef8f71d16dee375b02f22]
class v1.watchEvent--><g id="elem_v1.watchEvent"><rect codeLine="1431" fill="#F1F1F1" height="40" id="v1.watchEvent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="113" x="4437.5" y="1509.532"/><ellipse cx="4452.5" cy="1525.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4452.7344,1532.2351 C4453.8906,1532.2351 4454.9844,1531.7507 4455.8125,1530.7195 L4454.3906,1529.2039 C4454,1529.7507 4453.5313,1530.0632 4452.9688,1530.0632 C4451.7813,1530.0632 4450.7656,1528.9226 4450.7656,1525.6882 C4450.7656,1522.532 4451.8281,1521.3601 4452.8594,1521.3601 C4453.4531,1521.3601 4453.8281,1521.657 4454.25,1522.157 L4455.6719,1520.5945 C4455,1519.8445 4454.0313,1519.2039 4452.75,1519.2039 C4450.3281,1519.2039 4448.1875,1521.1726 4448.1875,1525.7976 C4448.1875,1530.4382 4450.3281,1532.2351 4452.7344,1532.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="4466.5" y="1531.636">watch.Event</text><line style="stroke:#181818;stroke-width:0.5;" x1="4438.5" x2="4549.5" y1="1541.532" y2="1541.532"/></g><!--MD5=[997b957e3e5c31815f5f7636c7395d59]
class unstructuredscheme.unstructuredCreator--><g id="elem_unstructuredscheme.unstructuredCreator"><rect codeLine="128" fill="#F1F1F1" height="40" id="unstructuredscheme.unstructuredCreator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="167" x="5996.5" y="47.532"/><ellipse cx="6011.5" cy="63.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6011.6875,70.2351 C6013.9844,70.2351 6015.4375,68.6101 6015.4375,66.6101 C6015.4375,64.782 6014.6094,63.9382 6013.4688,63.1414 L6012.4531,62.4226 C6011.3281,61.6101 6010.9063,61.3132 6010.9063,60.4539 C6010.9063,59.7664 6011.3906,59.3601 6011.9688,59.3601 C6012.7031,59.3601 6013.1875,59.7507 6013.8906,60.3914 L6015.2031,58.8132 C6014.2344,57.7976 6013.2188,57.2039 6011.9531,57.2039 C6009.8125,57.2039 6008.3594,58.7195 6008.3594,60.6414 C6008.3594,62.4382 6009.2813,63.3445 6010.375,64.0945 L6011.4688,64.8445 C6012.4063,65.4539 6012.8594,66.032 6012.8594,66.9695 C6012.8594,67.6414 6012.3906,68.0632 6011.6875,68.0632 C6010.9844,68.0632 6010.2344,67.5476 6009.5781,66.7195 L6008.0313,68.407 C6009.0625,69.5945 6010.3594,70.2351 6011.6875,70.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="6025.5" y="69.636">unstructuredCreator</text><line style="stroke:#181818;stroke-width:0.5;" x1="5997.5" x2="6162.5" y1="79.532" y2="79.532"/></g><!--MD5=[1b5543bd03804da53c5190549357de48]
class unstructuredscheme.unstructuredDefaulter--><g id="elem_unstructuredscheme.unstructuredDefaulter"><rect codeLine="132" fill="#F1F1F1" height="40" id="unstructuredscheme.unstructuredDefaulter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="181" x="6198.5" y="47.532"/><ellipse cx="6213.5" cy="63.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6213.6875,70.2351 C6215.9844,70.2351 6217.4375,68.6101 6217.4375,66.6101 C6217.4375,64.782 6216.6094,63.9382 6215.4688,63.1414 L6214.4531,62.4226 C6213.3281,61.6101 6212.9063,61.3132 6212.9063,60.4539 C6212.9063,59.7664 6213.3906,59.3601 6213.9688,59.3601 C6214.7031,59.3601 6215.1875,59.7507 6215.8906,60.3914 L6217.2031,58.8132 C6216.2344,57.7976 6215.2188,57.2039 6213.9531,57.2039 C6211.8125,57.2039 6210.3594,58.7195 6210.3594,60.6414 C6210.3594,62.4382 6211.2813,63.3445 6212.375,64.0945 L6213.4688,64.8445 C6214.4063,65.4539 6214.8594,66.032 6214.8594,66.9695 C6214.8594,67.6414 6214.3906,68.0632 6213.6875,68.0632 C6212.9844,68.0632 6212.2344,67.5476 6211.5781,66.7195 L6210.0313,68.407 C6211.0625,69.5945 6212.3594,70.2351 6213.6875,70.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="6227.5" y="69.636">unstructuredDefaulter</text><line style="stroke:#181818;stroke-width:0.5;" x1="6199.5" x2="6378.5" y1="79.532" y2="79.532"/></g><!--MD5=[0a86c512a83d864eed45ef1efa0b5c60]
class unstructuredscheme.unstructuredNegotiatedSerializer--><g id="elem_unstructuredscheme.unstructuredNegotiatedSerializer"><rect codeLine="136" fill="#F1F1F1" height="100.8157" id="unstructuredscheme.unstructuredNegotiatedSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="253" x="5953.5" y="228.532"/><ellipse cx="5968.5" cy="244.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5968.6875,251.2351 C5970.9844,251.2351 5972.4375,249.6101 5972.4375,247.6101 C5972.4375,245.782 5971.6094,244.9382 5970.4688,244.1414 L5969.4531,243.4226 C5968.3281,242.6101 5967.9063,242.3132 5967.9063,241.4539 C5967.9063,240.7664 5968.3906,240.3601 5968.9688,240.3601 C5969.7031,240.3601 5970.1875,240.7507 5970.8906,241.3914 L5972.2031,239.8132 C5971.2344,238.7976 5970.2188,238.2039 5968.9531,238.2039 C5966.8125,238.2039 5965.3594,239.7195 5965.3594,241.6414 C5965.3594,243.4382 5966.2813,244.3445 5967.375,245.0945 L5968.4688,245.8445 C5969.4063,246.4539 5969.8594,247.032 5969.8594,247.9695 C5969.8594,248.6414 5969.3906,249.0632 5968.6875,249.0632 C5967.9844,249.0632 5967.2344,248.5476 5966.5781,247.7195 L5965.0313,249.407 C5966.0625,250.5945 5967.3594,251.2351 5968.6875,251.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="5982.5" y="250.636">unstructuredNegotiatedSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="5954.5" x2="6205.5" y1="260.532" y2="260.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5961.5" y="273.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="5973.5" y="280.7719">scheme *runtime.Scheme</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5961.5" y="293.4398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="5973.5" y="301.0438">typer runtime.ObjectTyper</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5961.5" y="313.7118"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="5973.5" y="321.3157">creator runtime.ObjectCreater</text></g><!--MD5=[a0ae44eb2a6f64525ea4b63c14196206]
class unstructuredscheme.unstructuredObjectTyper--><g id="elem_unstructuredscheme.unstructuredObjectTyper"><rect codeLine="146" fill="#F1F1F1" height="40" id="unstructuredscheme.unstructuredObjectTyper" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="199" x="6241.5" y="259.032"/><ellipse cx="6256.5" cy="275.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6256.6875,281.7351 C6258.9844,281.7351 6260.4375,280.1101 6260.4375,278.1101 C6260.4375,276.282 6259.6094,275.4382 6258.4688,274.6414 L6257.4531,273.9226 C6256.3281,273.1101 6255.9063,272.8132 6255.9063,271.9539 C6255.9063,271.2664 6256.3906,270.8601 6256.9688,270.8601 C6257.7031,270.8601 6258.1875,271.2507 6258.8906,271.8914 L6260.2031,270.3132 C6259.2344,269.2976 6258.2188,268.7039 6256.9531,268.7039 C6254.8125,268.7039 6253.3594,270.2195 6253.3594,272.1414 C6253.3594,273.9382 6254.2813,274.8445 6255.375,275.5945 L6256.4688,276.3445 C6257.4063,276.9539 6257.8594,277.532 6257.8594,278.4695 C6257.8594,279.1414 6257.3906,279.5632 6256.6875,279.5632 C6255.9844,279.5632 6255.2344,279.0476 6254.5781,278.2195 L6253.0313,279.907 C6254.0625,281.0945 6255.3594,281.7351 6256.6875,281.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="6270.5" y="281.136">unstructuredObjectTyper</text><line style="stroke:#181818;stroke-width:0.5;" x1="6242.5" x2="6439.5" y1="291.032" y2="291.032"/></g><!--MD5=[882ebf18cdf36d99748bf47986b5037b]
class time.Duration--><g id="elem_time.Duration"><rect fill="#F1F1F1" height="40" id="time.Duration" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="90" x="4033" y="47.532"/><ellipse cx="4048" cy="63.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4048.2344,70.2351 C4049.3906,70.2351 4050.4844,69.7507 4051.3125,68.7195 L4049.8906,67.2039 C4049.5,67.7507 4049.0313,68.0632 4048.4688,68.0632 C4047.2813,68.0632 4046.2656,66.9226 4046.2656,63.6882 C4046.2656,60.532 4047.3281,59.3601 4048.3594,59.3601 C4048.9531,59.3601 4049.3281,59.657 4049.75,60.157 L4051.1719,58.5945 C4050.5,57.8445 4049.5313,57.2039 4048.25,57.2039 C4045.8281,57.2039 4043.6875,59.1726 4043.6875,63.7976 C4043.6875,68.4382 4045.8281,70.2351 4048.2344,70.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="4062" y="69.636">Duration</text><line style="stroke:#181818;stroke-width:0.5;" x1="4034" x2="4122" y1="79.532" y2="79.532"/></g><!--MD5=[ea2b67ea657b96457b0a6a6da986a68b]
class time.Time--><g id="elem_time.Time"><rect fill="#F1F1F1" height="40" id="time.Time" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="65" x="3932.5" y="47.532"/><ellipse cx="3947.5" cy="63.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3947.7344,70.2351 C3948.8906,70.2351 3949.9844,69.7507 3950.8125,68.7195 L3949.3906,67.2039 C3949,67.7507 3948.5313,68.0632 3947.9688,68.0632 C3946.7813,68.0632 3945.7656,66.9226 3945.7656,63.6882 C3945.7656,60.532 3946.8281,59.3601 3947.8594,59.3601 C3948.4531,59.3601 3948.8281,59.657 3949.25,60.157 L3950.6719,58.5945 C3950,57.8445 3949.0313,57.2039 3947.75,57.2039 C3945.3281,57.2039 3943.1875,59.1726 3943.1875,63.7976 C3943.1875,68.4382 3945.3281,70.2351 3947.7344,70.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="3961.5" y="69.636">Time</text><line style="stroke:#181818;stroke-width:0.5;" x1="3933.5" x2="3996.5" y1="79.532" y2="79.532"/></g><!--MD5=[6cb793e679fa39edb2af9d37f3364cae]
class validation.LabelSelectorValidationOptions--><g id="elem_validation.LabelSelectorValidationOptions"><rect codeLine="1469" fill="#F1F1F1" height="60.2719" id="validation.LabelSelectorValidationOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="279" x="6543.5" y="37.532"/><ellipse cx="6575.6" cy="53.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6575.7875,60.2351 C6578.0844,60.2351 6579.5375,58.6101 6579.5375,56.6101 C6579.5375,54.782 6578.7094,53.9382 6577.5688,53.1414 L6576.5531,52.4226 C6575.4281,51.6101 6575.0063,51.3132 6575.0063,50.4539 C6575.0063,49.7664 6575.4906,49.3601 6576.0688,49.3601 C6576.8031,49.3601 6577.2875,49.7507 6577.9906,50.3914 L6579.3031,48.8132 C6578.3344,47.7976 6577.3188,47.2039 6576.0531,47.2039 C6573.9125,47.2039 6572.4594,48.7195 6572.4594,50.6414 C6572.4594,52.4382 6573.3813,53.3445 6574.475,54.0945 L6575.5688,54.8445 C6576.5063,55.4539 6576.9594,56.032 6576.9594,56.9695 C6576.9594,57.6414 6576.4906,58.0632 6575.7875,58.0632 C6575.0844,58.0632 6574.3344,57.5476 6573.6781,56.7195 L6572.1313,58.407 C6573.1625,59.5945 6574.4594,60.2351 6575.7875,60.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="6593.4" y="59.636">LabelSelectorValidationOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="6544.5" x2="6821.5" y1="69.532" y2="69.532"/><ellipse cx="6554.5" cy="85.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="6563.5" y="89.7719">AllowInvalidLabelValueInSelector bool</text></g><!--MD5=[8ff22f7138b602f98f0ae05316084b0f]
reverse link v1.Common to unstructured.Unstructured--><g id="link_v1.Common_unstructured.Unstructured"><path codeLine="119" d="M5593.002,318.8373 C5602.1953,346.5953 5618.7926,381.8786 5647,400.532 C5781.8442,489.7038 6230.806,381.7994 6372,460.532 C6429.2204,492.4392 6467.9081,562.1088 6486.4185,602.3031 " fill="none" id="v1.Common-backto-unstructured.Unstructured" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5586.2355,320.6381,5587.3453,299.4775,5599.6736,316.7116,5586.2355,320.6381" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[655cfd9938a7f6a71b3f4ff0ae1ecaa8]
reverse link v1.ListInterface to unstructured.Unstructured--><g id="link_v1.ListInterface_unstructured.Unstructured"><path codeLine="120" d="M5735.8243,318.4103 C5747.7706,346.2199 5767.9148,381.7542 5798,400.532 C6015.5953,536.3446 6149.3353,333.2008 6372,460.532 C6428.8728,493.0548 6467.6922,562.4911 6486.318,602.4812 " fill="none" id="v1.ListInterface-backto-unstructured.Unstructured" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5729.1804,320.6415,5728.4035,299.4661,5742.216,315.5352,5729.1804,320.6415" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e7c8ac792cd8f5b30ff30e951e87db84]
reverse link v1.Object to unstructured.Unstructured--><g id="link_v1.Object_unstructured.Unstructured"><path codeLine="121" d="M5471.4143,319.2016 C5478.7747,346.8748 5493.028,381.8964 5520,400.532 C5676.155,508.4232 6205.6648,369.1127 6372,460.532 C6429.415,492.0877 6468.029,561.8905 6486.4748,602.2014 " fill="none" id="v1.Object-backto-unstructured.Unstructured" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5464.5318,320.5023,5466.9552,299.4517,5478.1881,317.4189,5464.5318,320.5023" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fb63a2447c7034701f3427ee2faa194e]
reverse link v1.Type to unstructured.Unstructured--><g id="link_v1.Type_unstructured.Unstructured"><path codeLine="122" d="M5864.9575,317.422 C5880.096,345.2561 5904.5002,381.264 5937,400.532 C6104.8776,500.0608 6204.1986,360.8747 6372,460.532 C6428.1703,493.8915 6467.1338,562.6786 6486.0006,602.4127 " fill="none" id="v1.Type-backto-unstructured.Unstructured" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5858.5994,320.3616,5855.78,299.3603,5871.0806,314.0196,5858.5994,320.3616" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[14c56cf362ff8d15be8065324c8e71ef]
reverse link v1.Common to unstructured.UnstructuredList--><g id="link_v1.Common_unstructured.UnstructuredList"><path codeLine="123" d="M5592.7308,318.549 C5601.8332,346.4676 5618.4354,382.0778 5647,400.532 C5830.0799,518.8111 6434.5096,356.4184 6626,460.532 C6678.9924,489.344 6715.8811,550.8818 6735.7581,591.9898 " fill="none" id="v1.Common-backto-unstructured.UnstructuredList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5585.9408,320.265,5587.1582,299.1104,5599.3988,316.4069,5585.9408,320.265" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7d599f1765f5b77e2a0ab0d5abfc7f44]
reverse link v1.ListInterface to unstructured.UnstructuredList--><g id="link_v1.ListInterface_unstructured.UnstructuredList"><path codeLine="124" d="M5735.4514,318.2233 C5747.2836,346.2457 5767.4492,382.1324 5798,400.532 C5956.0344,495.7103 6464.4171,371.5109 6626,460.532 C6678.6687,489.5488 6715.5359,550.7189 6735.5092,591.7285 " fill="none" id="v1.ListInterface-backto-unstructured.UnstructuredList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5728.766,320.3398,5728.1363,299.1595,5741.8367,315.3243,5728.766,320.3398" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b825030bd4e9d8fd78d02bc42ac98552]
reverse link v1.Type to unstructured.UnstructuredList--><g id="link_v1.Type_unstructured.UnstructuredList"><path codeLine="125" d="M5864.4335,317.422 C5879.4083,345.5693 5903.8416,381.9821 5937,400.532 C6205.2569,550.6034 6357.8581,310.2553 6626,460.532 C6678.4566,489.9306 6715.3802,550.9993 6735.4234,591.8829 " fill="none" id="v1.Type-backto-unstructured.UnstructuredList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5857.9975,320.199,5855.3989,299.1693,5870.5446,313.9885,5857.9975,320.199" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[79cabc4605e8e41ca26025abf1369af6]
reverse link v1.TypeMeta to v1.APIGroup--><g id="link_v1.TypeMeta_v1.APIGroup"><path codeLine="1435" d="M2308.924,658.8307 C2431.9444,699.0705 2670.9803,780.1724 2868,864.532 C2903.4815,879.7244 2941.3275,897.8152 2975.5767,914.9368 " fill="none" id="v1.TypeMeta-backto-v1.APIGroup" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2296.3061,654.7137,2300.7694,660.3775,2307.7142,658.436,2303.2509,652.7722,2296.3061,654.7137" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5484fd7985faf4da02313cfd74c2fffc]
reverse link v1.TypeMeta to v1.APIGroupList--><g id="link_v1.TypeMeta_v1.APIGroupList"><path codeLine="1436" d="M2144.5926,636.1237 C1846.5569,650.2933 827.5378,709.3313 547,864.532 C513.2321,883.2133 486.5229,919.3996 470.5481,945.3821 " fill="none" id="v1.TypeMeta-backto-v1.APIGroupList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2157.8183,635.502,2151.6371,631.7882,2145.8315,636.0656,2152.0128,639.7794,2157.8183,635.502" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c5a806ddb7772b9bdf94cb813b97d4e5]
reverse link v1.TypeMeta to v1.APIResourceList--><g id="link_v1.TypeMeta_v1.APIResourceList"><path codeLine="1437" d="M2144.5618,639.749 C1877.2433,664.0955 1037.6593,748.2343 794,864.532 C759.1896,881.1469 726.964,910.619 704.094,935.0202 " fill="none" id="v1.TypeMeta-backto-v1.APIResourceList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2157.6054,638.5672,2151.2689,635.125,2145.6544,639.6501,2151.9908,643.0923,2157.6054,638.5672" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[300888c7081b8d5fe4852fa611a0d95e]
reverse link v1.TypeMeta to v1.APIVersions--><g id="link_v1.TypeMeta_v1.APIVersions"><path codeLine="1438" d="M2144.8663,651.7731 C2000.2365,686.7579 1691.7725,766.3283 1442,864.532 C1390.6848,884.7077 1335.1691,912.3202 1292.3657,934.957 " fill="none" id="v1.TypeMeta-backto-v1.APIVersions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2157.9259,648.6277,2151.1561,646.1438,2146.2595,651.4375,2153.0293,653.9214,2157.9259,648.6277" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[eb473ee58610e315fda77a650f006f21]
reverse link v1.TypeMeta to v1.ApplyOptions--><g id="link_v1.TypeMeta_v1.ApplyOptions"><path codeLine="1439" d="M2145.2733,651.2899 C2025.2418,681.6319 1797.8995,749.9371 1635,864.532 C1611.7657,880.8766 1590.4436,903.9158 1573.7435,924.7712 " fill="none" id="v1.TypeMeta-backto-v1.ApplyOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2157.9584,648.124,2151.1684,645.6959,2146.3155,651.0298,2153.1056,653.4579,2157.9584,648.124" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0dfa198adf6779f0c39bc495ff9392a4]
reverse link v1.TypeMeta to v1.CreateOptions--><g id="link_v1.TypeMeta_v1.CreateOptions"><path codeLine="1440" d="M2227,686.4708 C2227,751.8146 2227,861.0522 2227,924.8808 " fill="none" id="v1.TypeMeta-backto-v1.CreateOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2227,673.2255,2223,679.2255,2227,685.2255,2231,679.2255,2227,673.2255" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b8171614448030b4640518d8070d3d86]
reverse link v1.TypeMeta to v1.DeleteOptions--><g id="link_v1.TypeMeta_v1.DeleteOptions"><path codeLine="1441" d="M2266.5533,683.7274 C2311.8961,742.4163 2386.4978,838.9763 2437.3667,904.818 " fill="none" id="v1.TypeMeta-backto-v1.DeleteOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2258.4396,673.2255,2258.9425,680.419,2265.7762,682.7215,2265.2732,675.528,2258.4396,673.2255" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0fd356e47088ebae269d2bcaceb7efba]
reverse link time.Duration to v1.Duration--><g id="link_time.Duration_v1.Duration"><path codeLine="1442" d="M4135.9234,81.7056 C4162.582,90.7454 4192.9005,104.9378 4214,126.532 C4250.8515,164.2475 4266.7886,226.8101 4272.8163,258.8152 " fill="none" id="time.Duration-backto-v1.Duration" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4123.1869,77.6719,4127.6991,83.2968,4134.6268,81.2951,4130.1146,75.6702,4123.1869,77.6719" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d001570a90f179d312b20205579d2129]
reverse link v1.TypeMeta to v1.GetOptions--><g id="link_v1.TypeMeta_v1.GetOptions"><path codeLine="1443" d="M2308.3425,667.2058 C2398.1354,707.533 2544.6889,779.5449 2656,864.532 C2687.1331,888.3024 2717.4628,921.3737 2737.6464,945.2266 " fill="none" id="v1.TypeMeta-backto-v1.GetOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2296.3291,661.8475,2300.1793,667.9447,2307.2884,666.7357,2303.4381,660.6385,2296.3291,661.8475" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[08c63d9f7a2b0de1460fe9abbb4559a2]
reverse link v1.ListMeta to v1.List--><g id="link_v1.ListMeta_v1.List"><path codeLine="1444" d="M5357.8868,701.589 C5316.2162,735.1285 5263.6572,774.552 5213,804.532 C5156.495,837.9729 5133.6096,829.6224 5078,864.532 C5040.6343,887.9887 5002.6888,921.423 4977.3225,945.4583 " fill="none" id="v1.ListMeta-backto-v1.List" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5368.2386,693.1982,5361.0588,693.869,5358.9165,700.7545,5366.0963,700.0837,5368.2386,693.1982" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3f3719e06672f16f917323db177875b0]
reverse link v1.TypeMeta to v1.List--><g id="link_v1.TypeMeta_v1.List"><path codeLine="1445" d="M2309.3365,647.4701 C2501.2799,681.6443 2993.6991,765.569 3409,804.532 C3564.9018,819.1585 4671.2754,807.2289 4817,864.532 C4859.9471,881.42 4898.6852,918.7465 4922.4817,945.4508 " fill="none" id="v1.TypeMeta-backto-v1.List" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2296.3135,645.1456,2301.5173,650.1376,2308.1268,647.2541,2302.923,642.2621,2296.3135,645.1456" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[dc37163ae053968d65dd737e367890c0]
reverse link v1.TypeMeta to v1.ListOptions--><g id="link_v1.TypeMeta_v1.ListOptions"><path codeLine="1446" d="M2144.583,638.1748 C1829.2672,660.471 700.2037,746.988 362,864.532 C355.8577,866.6668 349.7,869.0284 343.5577,871.5759 " fill="none" id="v1.TypeMeta-backto-v1.ListOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2157.6617,637.2538,2151.3955,633.6852,2145.6913,638.0968,2151.9575,641.6654,2157.6617,637.2538" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[400fe1f67e863a8b3bdb4e597be080ea]
reverse link time.Time to v1.MicroTime--><g id="link_time.Time_v1.MicroTime"><path codeLine="1447" d="M3965,100.9864 C3965,145.3799 3965,222.381 3965,258.8139 " fill="none" id="time.Time-backto-v1.MicroTime" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="3965,87.8115,3961,93.8115,3965,99.8115,3969,93.8115,3965,87.8115" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[97e9afa56014936b2abe65d4359b7b04]
reverse link v1.ObjectMeta to v1.PartialObjectMetadata--><g id="link_v1.ObjectMeta_v1.PartialObjectMetadata"><path codeLine="1448" d="M4910.6333,772.9195 C4879.5289,802.9623 4847.039,834.6526 4817,864.532 C4785.5464,895.8185 4749.7731,932.8864 4728.3148,955.2861 " fill="none" id="v1.ObjectMeta-backto-v1.PartialObjectMetadata" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4920.2377,763.6527,4913.1425,764.9402,4911.6021,771.9849,4918.6973,770.6973,4920.2377,763.6527" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0f7c501e80bda2e9684652c4b29c3b08]
reverse link v1.TypeMeta to v1.PartialObjectMetadata--><g id="link_v1.TypeMeta_v1.PartialObjectMetadata"><path codeLine="1449" d="M2309.0081,647.1896 C2500.747,680.8617 2993.5994,763.9534 3409,804.532 C3541.0943,817.4357 4481.1937,809.566 4602,864.532 C4644.8793,884.0418 4679.3738,929.1904 4696.7454,955.5031 " fill="none" id="v1.TypeMeta-backto-v1.PartialObjectMetadata" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2296.0006,644.8999,2301.2163,649.8795,2307.8189,646.9802,2302.6032,642.0006,2296.0006,644.8999" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[06e757d59bf639993e96bea395672bfe]
reverse link v1.ListMeta to v1.PartialObjectMetadataList--><g id="link_v1.ListMeta_v1.PartialObjectMetadataList"><path codeLine="1450" d="M5390.5161,704.2129 C5340.1549,778.6693 5263.7499,891.6301 5227.4867,945.2435 " fill="none" id="v1.ListMeta-backto-v1.PartialObjectMetadataList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5398.0571,693.064,5391.3823,695.7928,5391.334,703.0038,5398.0088,700.2749,5398.0571,693.064" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b3e64ede7d1b9a18f930751e434d6f6c]
reverse link v1.TypeMeta to v1.PartialObjectMetadataList--><g id="link_v1.TypeMeta_v1.PartialObjectMetadataList"><path codeLine="1451" d="M2309.319,647.6604 C2501.2253,682.2364 2993.5718,766.9509 3409,804.532 C3593.8096,821.2505 4905.2115,796.8696 5078,864.532 C5120.7802,881.2843 5159.1852,918.6399 5182.7459,945.388 " fill="none" id="v1.TypeMeta-backto-v1.PartialObjectMetadataList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2296.2985,645.3082,2301.4918,650.3111,2308.1073,647.4415,2302.914,642.4386,2296.2985,645.3082" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[99ca17137e0407484c518eb26b97b11c]
reverse link v1.TypeMeta to v1.PatchOptions--><g id="link_v1.TypeMeta_v1.PatchOptions"><path codeLine="1452" d="M2144.5366,641.2405 C1902.2943,667.8793 1197.31,753.2674 997,864.532 C974.693,876.9227 954.5822,895.9761 938.2304,914.8199 " fill="none" id="v1.TypeMeta-backto-v1.PatchOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2157.773,639.7929,2151.3737,636.4689,2145.8441,641.0976,2152.2435,644.4215,2157.773,639.7929" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[40e87bc22bf33ffe825a6f1f3e7d2eda]
reverse link v1.ListMeta to v1.Status--><g id="link_v1.ListMeta_v1.Status"><path codeLine="1453" d="M5439,706.3687 C5439,765.1889 5439,846.9996 5439,904.9495 " fill="none" id="v1.ListMeta-backto-v1.Status" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5439,693.064,5435,699.064,5439,705.064,5443,699.064,5439,693.064" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a3a9acdcde4c196d4d7d90f638c79c32]
reverse link v1.TypeMeta to v1.Status--><g id="link_v1.TypeMeta_v1.Status"><path codeLine="1454" d="M2309.3067,647.7984 C2501.187,682.6658 2993.4824,767.953 3409,804.532 C3622.5002,823.3269 5142.1287,775.3088 5337,864.532 C5356.9886,873.6839 5374.8416,888.7808 5389.8084,904.9359 " fill="none" id="v1.TypeMeta-backto-v1.Status" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2296.288,645.4262,2301.4737,650.437,2308.0936,647.5775,2302.9079,642.5666,2296.288,645.4262" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8d388a9c6dff00b43f1ccdf9d24a81b1]
reverse link v1.ListMeta to v1.Table--><g id="link_v1.ListMeta_v1.Table"><path codeLine="1455" d="M5496.9796,703.557 C5554.1032,773.5334 5639.3692,877.9843 5685.8564,934.9311 " fill="none" id="v1.ListMeta-backto-v1.Table" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5488.4138,693.064,5489.1094,700.2415,5496.0023,702.3599,5495.3067,695.1825,5488.4138,693.064" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[bca625d36123d08f811471f4619f141b]
reverse link v1.TypeMeta to v1.Table--><g id="link_v1.TypeMeta_v1.Table"><path codeLine="1456" d="M2309.2992,647.8839 C2501.1637,682.9319 2993.4282,768.5739 3409,804.532 C3645.2112,824.9706 5315.0877,795.7987 5542,864.532 C5589.3849,878.8852 5636.5604,909.49 5670.2779,934.9349 " fill="none" id="v1.TypeMeta-backto-v1.Table" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2296.2816,645.4993,2301.4626,650.515,2308.0852,647.6616,2302.9042,642.6459,2296.2816,645.4993" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c1540fb97cb2d988e5f9c3d3321f2eb9]
reverse link v1.TypeMeta to v1.TableOptions--><g id="link_v1.TypeMeta_v1.TableOptions"><path codeLine="1457" d="M2163.3745,681.2453 C2074.5227,749.2725 1914.8924,871.4894 1832.0816,934.8914 " fill="none" id="v1.TypeMeta-backto-v1.TableOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2173.8493,673.2255,2166.6536,673.697,2164.3213,680.5205,2171.5169,680.049,2173.8493,673.2255" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6e02cd519941cc8d2ed73ee4555c56b7]
reverse link time.Time to v1.Time--><g id="link_time.Time_v1.Time"><path codeLine="1458" d="M3919.3071,72.1264 C3851.6222,79.8145 3729.228,97.3796 3697,126.532 C3658.5668,161.2973 3649.5872,226.048 3647.5501,258.8592 " fill="none" id="time.Time-backto-v1.Time" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="3932.4699,70.6775,3926.0682,67.3581,3920.542,71.9906,3926.9436,75.31,3932.4699,70.6775" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5f26e919c653381ff5675ed553ba5cd5]
reverse link v1.TypeMeta to v1.UpdateOptions--><g id="link_v1.TypeMeta_v1.UpdateOptions"><path codeLine="1459" d="M2196.4333,684.4348 C2158.1008,749.5243 2092.8128,860.3846 2054.8296,924.8808 " fill="none" id="v1.TypeMeta-backto-v1.UpdateOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2203.0347,673.2255,2196.5432,676.3657,2196.9451,683.5656,2203.4366,680.4254,2203.0347,673.2255" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[06e97be6b69ce85935bb9205fac4b2e7]
reverse link v1.Common to v1.ListMeta--><g id="link_v1.Common_v1.ListMeta"><path codeLine="1461" d="M5567.2072,317.8011 C5542.2077,379.1713 5493.3216,499.18 5463.6682,571.9751 " fill="none" id="v1.Common-backto-v1.ListMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5560.8174,314.9319,5574.8453,299.0505,5573.7829,320.2135,5560.8174,314.9319" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ba9a59353fe9d2538734569382b26dce]
reverse link v1.ListInterface to v1.ListMeta--><g id="link_v1.ListInterface_v1.ListMeta"><path codeLine="1462" d="M5701.1911,316.5143 C5686.9739,341.1207 5667.1267,373.6106 5647,400.532 C5601.1669,461.8383 5542.4537,526.2519 5499.1016,571.6078 " fill="none" id="v1.ListInterface-backto-v1.ListMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5695.1194,313.0305,5711.0801,299.0928,5707.2947,319.9416,5695.1194,313.0305" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c574ebd077f17b153d15dccff9afa78f]
reverse link v1.ListMetaAccessor to v1.ListMeta--><g id="link_v1.ListMetaAccessor_v1.ListMeta"><path codeLine="1463" d="M4140.3759,317.2758 C4155.4798,345.6203 4180.2531,382.3593 4214,400.532 C4409.8137,505.9776 5004.4879,383.1725 5213,460.532 C5276.7943,484.2002 5337.4834,532.3323 5379.8771,571.6755 " fill="none" id="v1.ListMetaAccessor-backto-v1.ListMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4134.0884,320.3529,4131.4728,299.3253,4146.6305,314.1322,4134.0884,320.3529" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fa4352ebb9842822d801cde3f33b55a0]
reverse link v1.Common to v1.ObjectMeta--><g id="link_v1.Common_v1.ObjectMeta"><path codeLine="1464" d="M5571.294,318.4812 C5561.4289,345.2325 5544.7321,379.4375 5519,400.532 C5446.2424,460.1767 5401.2118,420.6558 5316,460.532 C5275.1651,479.6414 5233.4355,504.656 5195.7672,529.667 " fill="none" id="v1.Common-backto-v1.ObjectMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5564.686,316.1694,5577.6632,299.4184,5577.9645,320.6059,5564.686,316.1694" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2fc15a7414a582735cedf6c6afb44953]
reverse link v1.Object to v1.ObjectMeta--><g id="link_v1.Object_v1.ObjectMeta"><path codeLine="1465" d="M5452.6159,318.4073 C5443.7852,343.9114 5429.5514,376.6921 5409,400.532 C5376.8828,437.7884 5357.1317,433.5553 5316,460.532 C5276.837,486.2175 5234.4953,514.3098 5195.6583,540.2065 " fill="none" id="v1.Object-backto-v1.ObjectMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5446.0417,315.9823,5458.783,299.0512,5459.381,320.2324,5446.0417,315.9823" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[daa4076a60097539733240626ddc2e42]
reverse link v1.ObjectMetaAccessor to v1.ObjectMeta--><g id="link_v1.ObjectMetaAccessor_v1.ObjectMeta"><path codeLine="1466" d="M3817.0926,316.9253 C3834.4132,345.3562 3862.2618,382.3763 3898,400.532 C4087.3819,496.7415 4654.6752,381.8892 4852,460.532 C4875.8043,470.0191 4898.8887,483.3688 4920.4638,498.4836 " fill="none" id="v1.ObjectMetaAccessor-backto-v1.ObjectMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3810.8982,320.1944,3807.0346,299.36,3823.0474,313.2377,3810.8982,320.1944" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[aecc0b500087c0cdd3d5f8d9c222fd1e]
@startuml
namespace unstructured {
    class Unstructured << (S,Aquamarine) >> {
        + Object <font color=blue>map</font>[string]<font color=blue>interface</font>{}

        - setNestedField(value <font color=blue>interface</font>{}, fields ...string) 
        - setNestedStringSlice(value []string, fields ...string) 
        - setNestedSlice(value []<font color=blue>interface</font>{}, fields ...string) 
        - setNestedMap(value <font color=blue>map</font>[string]string, fields ...string) 

        + GetObjectKind() schema.ObjectKind
        + IsList() bool
        + ToList() (*UnstructuredList, error)
        + EachListItem(fn <font color=blue>func</font>(runtime.Object) error) error
        + UnstructuredContent() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + SetUnstructuredContent(content <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + NewEmptyInstance() runtime.Unstructured
        + DeepCopy() *Unstructured
        + GetOwnerReferences() []v1.OwnerReference
        + SetOwnerReferences(references []v1.OwnerReference) 
        + GetAPIVersion() string
        + SetAPIVersion(version string) 
        + GetKind() string
        + SetKind(kind string) 
        + GetNamespace() string
        + SetNamespace(namespace string) 
        + GetName() string
        + SetName(name string) 
        + GetGenerateName() string
        + SetGenerateName(generateName string) 
        + GetUID() types.UID
        + SetUID(uid types.UID) 
        + GetResourceVersion() string
        + SetResourceVersion(resourceVersion string) 
        + GetGeneration() int64
        + SetGeneration(generation int64) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 
        + GetCreationTimestamp() v1.Time
        + SetCreationTimestamp(timestamp v1.Time) 
        + GetDeletionTimestamp() *v1.Time
        + SetDeletionTimestamp(timestamp *v1.Time) 
        + GetDeletionGracePeriodSeconds() *int64
        + SetDeletionGracePeriodSeconds(deletionGracePeriodSeconds *int64) 
        + GetLabels() <font color=blue>map</font>[string]string
        + SetLabels(labels <font color=blue>map</font>[string]string) 
        + GetAnnotations() <font color=blue>map</font>[string]string
        + SetAnnotations(annotations <font color=blue>map</font>[string]string) 
        + SetGroupVersionKind(gvk schema.GroupVersionKind) 
        + GroupVersionKind() schema.GroupVersionKind
        + GetFinalizers() []string
        + SetFinalizers(finalizers []string) 
        + GetManagedFields() []v1.ManagedFieldsEntry
        + SetManagedFields(managedFields []v1.ManagedFieldsEntry) 
        + DeepCopyInto(out *Unstructured) 
        + DeepCopyObject() runtime.Object

    }
    class UnstructuredList << (S,Aquamarine) >> {
        + Object <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Items []Unstructured

        - setNestedField(value <font color=blue>interface</font>{}, fields ...string) 

        + GetObjectKind() schema.ObjectKind
        + IsList() bool
        + EachListItem(fn <font color=blue>func</font>(runtime.Object) error) error
        + NewEmptyInstance() runtime.Unstructured
        + UnstructuredContent() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + SetUnstructuredContent(content <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 
        + DeepCopy() *UnstructuredList
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + GetAPIVersion() string
        + SetAPIVersion(version string) 
        + GetKind() string
        + SetKind(kind string) 
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 
        + SetGroupVersionKind(gvk schema.GroupVersionKind) 
        + GroupVersionKind() schema.GroupVersionKind
        + DeepCopyInto(out *UnstructuredList) 
        + DeepCopyObject() runtime.Object

    }
    class jsonFallbackEncoder << (S,Aquamarine) >> {
        - encoder runtime.Encoder
        - identifier runtime.Identifier

        + Encode(obj runtime.Object, w io.Writer) error
        + Identifier() runtime.Identifier

    }
    class unstructuredJSONScheme << (S,Aquamarine) >> {
        - doEncode(obj runtime.Object, w io.Writer) error
        - decode(data []byte) (runtime.Object, error)
        - decodeInto(data []byte, obj runtime.Object) error
        - decodeToUnstructured(data []byte, unstruct *Unstructured) error
        - decodeToList(data []byte, list *UnstructuredList) error

        + Decode(data []byte, _ *schema.GroupVersionKind, obj runtime.Object) (runtime.Object, *schema.GroupVersionKind, error)
        + Encode(obj runtime.Object, w io.Writer) error
        + Identifier() runtime.Identifier

    }
}

"v1.Common" <|- - "unstructured.Unstructured"
"v1.ListInterface" <|- - "unstructured.Unstructured"
"v1.Object" <|- - "unstructured.Unstructured"
"v1.Type" <|- - "unstructured.Unstructured"
"v1.Common" <|- - "unstructured.UnstructuredList"
"v1.ListInterface" <|- - "unstructured.UnstructuredList"
"v1.Type" <|- - "unstructured.UnstructuredList"

namespace unstructuredscheme {
    class unstructuredCreator << (S,Aquamarine) >> {
        + New(kind schema.GroupVersionKind) (runtime.Object, error)

    }
    class unstructuredDefaulter << (S,Aquamarine) >> {
        + Default(in runtime.Object) 

    }
    class unstructuredNegotiatedSerializer << (S,Aquamarine) >> {
        - scheme *runtime.Scheme
        - typer runtime.ObjectTyper
        - creator runtime.ObjectCreater

        + SupportedMediaTypes() []runtime.SerializerInfo
        + EncoderForVersion(encoder runtime.Encoder, gv runtime.GroupVersioner) runtime.Encoder
        + DecoderToVersion(decoder runtime.Decoder, gv runtime.GroupVersioner) runtime.Decoder

    }
    class unstructuredObjectTyper << (S,Aquamarine) >> {
        + ObjectKinds(obj runtime.Object) ([]schema.GroupVersionKind, bool, error)
        + Recognizes(gvk schema.GroupVersionKind) bool

    }
}


namespace v1 {
    class APIGroup << (S,Aquamarine) >> {
        + Name string
        + Versions []GroupVersionForDiscovery
        + PreferredVersion GroupVersionForDiscovery
        + ServerAddressByClientCIDRs []ServerAddressByClientCIDR

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIGroup) 
        + DeepCopy() *APIGroup
        + DeepCopyObject() runtime.Object

    }
    class APIGroupList << (S,Aquamarine) >> {
        + Groups []APIGroup

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIGroupList) 
        + DeepCopy() *APIGroupList
        + DeepCopyObject() runtime.Object

    }
    class APIResource << (S,Aquamarine) >> {
        + Name string
        + SingularName string
        + Namespaced bool
        + Group string
        + Version string
        + Kind string
        + Verbs Verbs
        + ShortNames []string
        + Categories []string
        + StorageVersionHash string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIResource) 
        + DeepCopy() *APIResource

    }
    class APIResourceList << (S,Aquamarine) >> {
        + GroupVersion string
        + APIResources []APIResource

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIResourceList) 
        + DeepCopy() *APIResourceList
        + DeepCopyObject() runtime.Object

    }
    class APIVersions << (S,Aquamarine) >> {
        + Versions []string
        + ServerAddressByClientCIDRs []ServerAddressByClientCIDR

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + GoString() string
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIVersions) 
        + DeepCopy() *APIVersions
        + DeepCopyObject() runtime.Object

    }
    class ApplyOptions << (S,Aquamarine) >> {
        + DryRun []string
        + Force bool
        + FieldManager string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + ToPatchOptions() PatchOptions
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ApplyOptions) 
        + DeepCopy() *ApplyOptions

    }
    interface Common  {
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 

    }
    class Condition << (S,Aquamarine) >> {
        + Type string
        + Status ConditionStatus
        + ObservedGeneration int64
        + LastTransitionTime Time
        + Reason string
        + Message string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Condition) 
        + DeepCopy() *Condition

    }
    class CreateOptions << (S,Aquamarine) >> {
        + DryRun []string
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *CreateOptions) 
        + DeepCopy() *CreateOptions
        + DeepCopyObject() runtime.Object

    }
    class DeleteOptions << (S,Aquamarine) >> {
        + GracePeriodSeconds *int64
        + Preconditions *Preconditions
        + OrphanDependents *bool
        + PropagationPolicy *DeletionPropagation
        + DryRun []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *DeleteOptions) 
        + DeepCopy() *DeleteOptions
        + DeepCopyObject() runtime.Object

    }
    class Duration << (S,Aquamarine) >> {
        + UnmarshalJSON(b []byte) error
        + MarshalJSON() ([]byte, error)
        + ToUnstructured() <font color=blue>interface</font>{}
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + DeepCopyInto(out *Duration) 
        + DeepCopy() *Duration

    }
    class FieldsV1 << (S,Aquamarine) >> {
        + Raw []byte

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + String() string
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *FieldsV1) 
        + DeepCopy() *FieldsV1

    }
    class GetOptions << (S,Aquamarine) >> {
        + ResourceVersion string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *GetOptions) 
        + DeepCopy() *GetOptions
        + DeepCopyObject() runtime.Object

    }
    class GroupKind << (S,Aquamarine) >> {
        + Group string
        + Kind string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupKind) 
        + DeepCopy() *GroupKind

    }
    class GroupResource << (S,Aquamarine) >> {
        + Group string
        + Resource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupResource) 
        + DeepCopy() *GroupResource

    }
    class GroupVersion << (S,Aquamarine) >> {
        + Group string
        + Version string

        - unmarshal(value []byte) error

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + Empty() bool
        + String() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(value []byte) error
        + UnmarshalText(value []byte) error
        + DeepCopyInto(out *GroupVersion) 
        + DeepCopy() *GroupVersion

    }
    class GroupVersionForDiscovery << (S,Aquamarine) >> {
        + GroupVersion string
        + Version string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *GroupVersionForDiscovery) 
        + DeepCopy() *GroupVersionForDiscovery

    }
    class GroupVersionKind << (S,Aquamarine) >> {
        + Group string
        + Version string
        + Kind string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupVersionKind) 
        + DeepCopy() *GroupVersionKind

    }
    class GroupVersionResource << (S,Aquamarine) >> {
        + Group string
        + Version string
        + Resource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupVersionResource) 
        + DeepCopy() *GroupVersionResource

    }
    class InternalEvent << (S,Aquamarine) >> {
        + GetObjectKind() schema.ObjectKind
        + DeepCopyObject() runtime.Object
        + DeepCopyInto(out *InternalEvent) 
        + DeepCopy() *InternalEvent

    }
    class LabelSelector << (S,Aquamarine) >> {
        + MatchLabels <font color=blue>map</font>[string]string
        + MatchExpressions []LabelSelectorRequirement

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *LabelSelector) 
        + DeepCopy() *LabelSelector

    }
    class LabelSelectorRequirement << (S,Aquamarine) >> {
        + Key string
        + Operator LabelSelectorOperator
        + Values []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *LabelSelectorRequirement) 
        + DeepCopy() *LabelSelectorRequirement

    }
    class List << (S,Aquamarine) >> {
        + Items []runtime.RawExtension

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *List) 
        + DeepCopy() *List
        + DeepCopyObject() runtime.Object

    }
    interface ListInterface  {
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 

    }
    class ListMeta << (S,Aquamarine) >> {
        + SelfLink string
        + ResourceVersion string
        + Continue string
        + RemainingItemCount *int64

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 
        + GetListMeta() ListInterface
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ListMeta) 
        + DeepCopy() *ListMeta

    }
    interface ListMetaAccessor  {
        + GetListMeta() ListInterface

    }
    class ListOptions << (S,Aquamarine) >> {
        + LabelSelector string
        + FieldSelector string
        + Watch bool
        + AllowWatchBookmarks bool
        + ResourceVersion string
        + ResourceVersionMatch ResourceVersionMatch
        + TimeoutSeconds *int64
        + Limit int64
        + Continue string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ListOptions) 
        + DeepCopy() *ListOptions
        + DeepCopyObject() runtime.Object

    }
    class ManagedFieldsEntry << (S,Aquamarine) >> {
        + Manager string
        + Operation ManagedFieldsOperationType
        + APIVersion string
        + Time *Time
        + FieldsType string
        + FieldsV1 *FieldsV1
        + Subresource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ManagedFieldsEntry) 
        + DeepCopy() *ManagedFieldsEntry

    }
    class MicroTime << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + DeepCopyInto(out *MicroTime) 
        + IsZero() bool
        + Before(u *MicroTime) bool
        + Equal(u *MicroTime) bool
        + BeforeTime(u *Time) bool
        + EqualTime(u *Time) bool
        + UnmarshalJSON(b []byte) error
        + UnmarshalQueryParameter(str string) error
        + MarshalJSON() ([]byte, error)
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + MarshalQueryParameter() (string, error)
        + Fuzz(c gofuzz.Continue) 
        + ProtoMicroTime() *Timestamp
        + Size() int
        + Unmarshal(data []byte) error
        + Marshal() ([]byte, error)
        + MarshalTo(data []byte) (int, error)
        + MarshalToSizedBuffer(data []byte) (int, error)
        + DeepCopy() *MicroTime

    }
    interface Object  {
        + GetNamespace() string
        + SetNamespace(namespace string) 
        + GetName() string
        + SetName(name string) 
        + GetGenerateName() string
        + SetGenerateName(name string) 
        + GetUID() types.UID
        + SetUID(uid types.UID) 
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetGeneration() int64
        + SetGeneration(generation int64) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetCreationTimestamp() Time
        + SetCreationTimestamp(timestamp Time) 
        + GetDeletionTimestamp() *Time
        + SetDeletionTimestamp(timestamp *Time) 
        + GetDeletionGracePeriodSeconds() *int64
        + SetDeletionGracePeriodSeconds( *int64) 
        + GetLabels() <font color=blue>map</font>[string]string
        + SetLabels(labels <font color=blue>map</font>[string]string) 
        + GetAnnotations() <font color=blue>map</font>[string]string
        + SetAnnotations(annotations <font color=blue>map</font>[string]string) 
        + GetFinalizers() []string
        + SetFinalizers(finalizers []string) 
        + GetOwnerReferences() []OwnerReference
        + SetOwnerReferences( []OwnerReference) 
        + GetManagedFields() []ManagedFieldsEntry
        + SetManagedFields(managedFields []ManagedFieldsEntry) 

    }
    class ObjectMeta << (S,Aquamarine) >> {
        + Name string
        + GenerateName string
        + Namespace string
        + SelfLink string
        + UID types.UID
        + ResourceVersion string
        + Generation int64
        + CreationTimestamp Time
        + DeletionTimestamp *Time
        + DeletionGracePeriodSeconds *int64
        + Labels <font color=blue>map</font>[string]string
        + Annotations <font color=blue>map</font>[string]string
        + OwnerReferences []OwnerReference
        + Finalizers []string
        + ManagedFields []ManagedFieldsEntry

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectMeta() Object
        + GetNamespace() string
        + SetNamespace(namespace string) 
        + GetName() string
        + SetName(name string) 
        + GetGenerateName() string
        + SetGenerateName(generateName string) 
        + GetUID() types.UID
        + SetUID(uid types.UID) 
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetGeneration() int64
        + SetGeneration(generation int64) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetCreationTimestamp() Time
        + SetCreationTimestamp(creationTimestamp Time) 
        + GetDeletionTimestamp() *Time
        + SetDeletionTimestamp(deletionTimestamp *Time) 
        + GetDeletionGracePeriodSeconds() *int64
        + SetDeletionGracePeriodSeconds(deletionGracePeriodSeconds *int64) 
        + GetLabels() <font color=blue>map</font>[string]string
        + SetLabels(labels <font color=blue>map</font>[string]string) 
        + GetAnnotations() <font color=blue>map</font>[string]string
        + SetAnnotations(annotations <font color=blue>map</font>[string]string) 
        + GetFinalizers() []string
        + SetFinalizers(finalizers []string) 
        + GetOwnerReferences() []OwnerReference
        + SetOwnerReferences(references []OwnerReference) 
        + GetManagedFields() []ManagedFieldsEntry
        + SetManagedFields(managedFields []ManagedFieldsEntry) 
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ObjectMeta) 
        + DeepCopy() *ObjectMeta

    }
    interface ObjectMetaAccessor  {
        + GetObjectMeta() Object

    }
    class OwnerReference << (S,Aquamarine) >> {
        + APIVersion string
        + Kind string
        + Name string
        + UID types.UID
        + Controller *bool
        + BlockOwnerDeletion *bool

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *OwnerReference) 
        + DeepCopy() *OwnerReference

    }
    class PartialObjectMetadata << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PartialObjectMetadata) 
        + DeepCopy() *PartialObjectMetadata
        + DeepCopyObject() runtime.Object

    }
    class PartialObjectMetadataList << (S,Aquamarine) >> {
        + Items []PartialObjectMetadata

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PartialObjectMetadataList) 
        + DeepCopy() *PartialObjectMetadataList
        + DeepCopyObject() runtime.Object

    }
    class Patch << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Patch) 
        + DeepCopy() *Patch

    }
    class PatchOptions << (S,Aquamarine) >> {
        + DryRun []string
        + Force *bool
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PatchOptions) 
        + DeepCopy() *PatchOptions
        + DeepCopyObject() runtime.Object

    }
    class Preconditions << (S,Aquamarine) >> {
        + UID *types.UID
        + ResourceVersion *string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Preconditions) 
        + DeepCopy() *Preconditions

    }
    class RootPaths << (S,Aquamarine) >> {
        + Paths []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *RootPaths) 
        + DeepCopy() *RootPaths

    }
    class ServerAddressByClientCIDR << (S,Aquamarine) >> {
        + ClientCIDR string
        + ServerAddress string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ServerAddressByClientCIDR) 
        + DeepCopy() *ServerAddressByClientCIDR

    }
    class Status << (S,Aquamarine) >> {
        + Status string
        + Message string
        + Reason StatusReason
        + Details *StatusDetails
        + Code int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Status) 
        + DeepCopy() *Status
        + DeepCopyObject() runtime.Object

    }
    class StatusCause << (S,Aquamarine) >> {
        + Type CauseType
        + Message string
        + Field string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *StatusCause) 
        + DeepCopy() *StatusCause

    }
    class StatusDetails << (S,Aquamarine) >> {
        + Name string
        + Group string
        + Kind string
        + UID types.UID
        + Causes []StatusCause
        + RetryAfterSeconds int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *StatusDetails) 
        + DeepCopy() *StatusDetails

    }
    class Table << (S,Aquamarine) >> {
        + ColumnDefinitions []TableColumnDefinition
        + Rows []TableRow

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Table) 
        + DeepCopy() *Table
        + DeepCopyObject() runtime.Object

    }
    class TableColumnDefinition << (S,Aquamarine) >> {
        + Name string
        + Type string
        + Format string
        + Description string
        + Priority int32

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableColumnDefinition) 
        + DeepCopy() *TableColumnDefinition

    }
    class TableOptions << (S,Aquamarine) >> {
        + NoHeaders bool
        + IncludeObject IncludeObjectPolicy

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableOptions) 
        + DeepCopy() *TableOptions
        + DeepCopyObject() runtime.Object

    }
    class TableRow << (S,Aquamarine) >> {
        + Cells []<font color=blue>interface</font>{}
        + Conditions []TableRowCondition
        + Object runtime.RawExtension

        + DeepCopy() *TableRow
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableRow) 

    }
    class TableRowCondition << (S,Aquamarine) >> {
        + Type RowConditionType
        + Status ConditionStatus
        + Reason string
        + Message string

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableRowCondition) 
        + DeepCopy() *TableRowCondition

    }
    class Time << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + DeepCopyInto(out *Time) 
        + IsZero() bool
        + Before(u *Time) bool
        + Equal(u *Time) bool
        + Rfc3339Copy() Time
        + UnmarshalJSON(b []byte) error
        + UnmarshalQueryParameter(str string) error
        + MarshalJSON() ([]byte, error)
        + ToUnstructured() <font color=blue>interface</font>{}
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + MarshalQueryParameter() (string, error)
        + Fuzz(c gofuzz.Continue) 
        + ProtoTime() *Timestamp
        + Size() int
        + Unmarshal(data []byte) error
        + Marshal() ([]byte, error)
        + MarshalTo(data []byte) (int, error)
        + MarshalToSizedBuffer(data []byte) (int, error)
        + DeepCopy() *Time

    }
    class Timestamp << (S,Aquamarine) >> {
        + Seconds int64
        + Nanos int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + DeepCopyInto(out *Timestamp) 
        + DeepCopy() *Timestamp

    }
    interface Type  {
        + GetAPIVersion() string
        + SetAPIVersion(version string) 
        + GetKind() string
        + SetKind(kind string) 

    }
    class TypeMeta << (S,Aquamarine) >> {
        + Kind string
        + APIVersion string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectKind() schema.ObjectKind
        + SetGroupVersionKind(gvk schema.GroupVersionKind) 
        + GroupVersionKind() schema.GroupVersionKind
        + SwaggerDoc() <font color=blue>map</font>[string]string

    }
    class UpdateOptions << (S,Aquamarine) >> {
        + DryRun []string
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *UpdateOptions) 
        + DeepCopy() *UpdateOptions
        + DeepCopyObject() runtime.Object

    }
    class Verbs << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *Verbs) 
        + DeepCopy() Verbs

    }
    class WatchEvent << (S,Aquamarine) >> {
        + Type string
        + Object runtime.RawExtension

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectKind() schema.ObjectKind
        + DeepCopyInto(out *WatchEvent) 
        + DeepCopy() *WatchEvent
        + DeepCopyObject() runtime.Object

    }
    class v1.CauseType << (T, #FF7700) >>  {
    }
    class v1.ConditionStatus << (T, #FF7700) >>  {
    }
    class v1.DeletionPropagation << (T, #FF7700) >>  {
    }
    class v1.IncludeObjectPolicy << (T, #FF7700) >>  {
    }
    class v1.InternalEvent << (T, #FF7700) >>  {
    }
    class v1.LabelSelectorOperator << (T, #FF7700) >>  {
    }
    class v1.ManagedFieldsOperationType << (T, #FF7700) >>  {
    }
    class v1.ResourceVersionMatch << (T, #FF7700) >>  {
    }
    class v1.RowConditionType << (T, #FF7700) >>  {
    }
    class v1.StatusReason << (T, #FF7700) >>  {
    }
    class v1.Verbs << (T, #FF7700) >>  {
    }
    class "watch.Event" as watchEvent {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}
"v1.TypeMeta" *- - "v1.APIGroup"
"v1.TypeMeta" *- - "v1.APIGroupList"
"v1.TypeMeta" *- - "v1.APIResourceList"
"v1.TypeMeta" *- - "v1.APIVersions"
"v1.TypeMeta" *- - "v1.ApplyOptions"
"v1.TypeMeta" *- - "v1.CreateOptions"
"v1.TypeMeta" *- - "v1.DeleteOptions"
"time.Duration" *- - "v1.Duration"
"v1.TypeMeta" *- - "v1.GetOptions"
"v1.ListMeta" *- - "v1.List"
"v1.TypeMeta" *- - "v1.List"
"v1.TypeMeta" *- - "v1.ListOptions"
"time.Time" *- - "v1.MicroTime"
"v1.ObjectMeta" *- - "v1.PartialObjectMetadata"
"v1.TypeMeta" *- - "v1.PartialObjectMetadata"
"v1.ListMeta" *- - "v1.PartialObjectMetadataList"
"v1.TypeMeta" *- - "v1.PartialObjectMetadataList"
"v1.TypeMeta" *- - "v1.PatchOptions"
"v1.ListMeta" *- - "v1.Status"
"v1.TypeMeta" *- - "v1.Status"
"v1.ListMeta" *- - "v1.Table"
"v1.TypeMeta" *- - "v1.Table"
"v1.TypeMeta" *- - "v1.TableOptions"
"time.Time" *- - "v1.Time"
"v1.TypeMeta" *- - "v1.UpdateOptions"

"v1.Common" <|- - "v1.ListMeta"
"v1.ListInterface" <|- - "v1.ListMeta"
"v1.ListMetaAccessor" <|- - "v1.ListMeta"
"v1.Common" <|- - "v1.ObjectMeta"
"v1.Object" <|- - "v1.ObjectMeta"
"v1.ObjectMetaAccessor" <|- - "v1.ObjectMeta"

namespace validation {
    class LabelSelectorValidationOptions << (S,Aquamarine) >> {
        + AllowInvalidLabelValueInSelector bool

    }
}


hide methods
@enduml

@startuml
namespace unstructured {
    class Unstructured << (S,Aquamarine) >> {
        + Object <font color=blue>map</font>[string]<font color=blue>interface</font>{}

        - setNestedField(value <font color=blue>interface</font>{}, fields ...string) 
        - setNestedStringSlice(value []string, fields ...string) 
        - setNestedSlice(value []<font color=blue>interface</font>{}, fields ...string) 
        - setNestedMap(value <font color=blue>map</font>[string]string, fields ...string) 

        + GetObjectKind() schema.ObjectKind
        + IsList() bool
        + ToList() (*UnstructuredList, error)
        + EachListItem(fn <font color=blue>func</font>(runtime.Object) error) error
        + UnstructuredContent() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + SetUnstructuredContent(content <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + NewEmptyInstance() runtime.Unstructured
        + DeepCopy() *Unstructured
        + GetOwnerReferences() []v1.OwnerReference
        + SetOwnerReferences(references []v1.OwnerReference) 
        + GetAPIVersion() string
        + SetAPIVersion(version string) 
        + GetKind() string
        + SetKind(kind string) 
        + GetNamespace() string
        + SetNamespace(namespace string) 
        + GetName() string
        + SetName(name string) 
        + GetGenerateName() string
        + SetGenerateName(generateName string) 
        + GetUID() types.UID
        + SetUID(uid types.UID) 
        + GetResourceVersion() string
        + SetResourceVersion(resourceVersion string) 
        + GetGeneration() int64
        + SetGeneration(generation int64) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 
        + GetCreationTimestamp() v1.Time
        + SetCreationTimestamp(timestamp v1.Time) 
        + GetDeletionTimestamp() *v1.Time
        + SetDeletionTimestamp(timestamp *v1.Time) 
        + GetDeletionGracePeriodSeconds() *int64
        + SetDeletionGracePeriodSeconds(deletionGracePeriodSeconds *int64) 
        + GetLabels() <font color=blue>map</font>[string]string
        + SetLabels(labels <font color=blue>map</font>[string]string) 
        + GetAnnotations() <font color=blue>map</font>[string]string
        + SetAnnotations(annotations <font color=blue>map</font>[string]string) 
        + SetGroupVersionKind(gvk schema.GroupVersionKind) 
        + GroupVersionKind() schema.GroupVersionKind
        + GetFinalizers() []string
        + SetFinalizers(finalizers []string) 
        + GetManagedFields() []v1.ManagedFieldsEntry
        + SetManagedFields(managedFields []v1.ManagedFieldsEntry) 
        + DeepCopyInto(out *Unstructured) 
        + DeepCopyObject() runtime.Object

    }
    class UnstructuredList << (S,Aquamarine) >> {
        + Object <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + Items []Unstructured

        - setNestedField(value <font color=blue>interface</font>{}, fields ...string) 

        + GetObjectKind() schema.ObjectKind
        + IsList() bool
        + EachListItem(fn <font color=blue>func</font>(runtime.Object) error) error
        + NewEmptyInstance() runtime.Unstructured
        + UnstructuredContent() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + SetUnstructuredContent(content <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 
        + DeepCopy() *UnstructuredList
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + GetAPIVersion() string
        + SetAPIVersion(version string) 
        + GetKind() string
        + SetKind(kind string) 
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 
        + SetGroupVersionKind(gvk schema.GroupVersionKind) 
        + GroupVersionKind() schema.GroupVersionKind
        + DeepCopyInto(out *UnstructuredList) 
        + DeepCopyObject() runtime.Object

    }
    class jsonFallbackEncoder << (S,Aquamarine) >> {
        - encoder runtime.Encoder
        - identifier runtime.Identifier

        + Encode(obj runtime.Object, w io.Writer) error
        + Identifier() runtime.Identifier

    }
    class unstructuredJSONScheme << (S,Aquamarine) >> {
        - doEncode(obj runtime.Object, w io.Writer) error
        - decode(data []byte) (runtime.Object, error)
        - decodeInto(data []byte, obj runtime.Object) error
        - decodeToUnstructured(data []byte, unstruct *Unstructured) error
        - decodeToList(data []byte, list *UnstructuredList) error

        + Decode(data []byte, _ *schema.GroupVersionKind, obj runtime.Object) (runtime.Object, *schema.GroupVersionKind, error)
        + Encode(obj runtime.Object, w io.Writer) error
        + Identifier() runtime.Identifier

    }
}

"v1.Common" <|- - "unstructured.Unstructured"
"v1.ListInterface" <|- - "unstructured.Unstructured"
"v1.Object" <|- - "unstructured.Unstructured"
"v1.Type" <|- - "unstructured.Unstructured"
"v1.Common" <|- - "unstructured.UnstructuredList"
"v1.ListInterface" <|- - "unstructured.UnstructuredList"
"v1.Type" <|- - "unstructured.UnstructuredList"

namespace unstructuredscheme {
    class unstructuredCreator << (S,Aquamarine) >> {
        + New(kind schema.GroupVersionKind) (runtime.Object, error)

    }
    class unstructuredDefaulter << (S,Aquamarine) >> {
        + Default(in runtime.Object) 

    }
    class unstructuredNegotiatedSerializer << (S,Aquamarine) >> {
        - scheme *runtime.Scheme
        - typer runtime.ObjectTyper
        - creator runtime.ObjectCreater

        + SupportedMediaTypes() []runtime.SerializerInfo
        + EncoderForVersion(encoder runtime.Encoder, gv runtime.GroupVersioner) runtime.Encoder
        + DecoderToVersion(decoder runtime.Decoder, gv runtime.GroupVersioner) runtime.Decoder

    }
    class unstructuredObjectTyper << (S,Aquamarine) >> {
        + ObjectKinds(obj runtime.Object) ([]schema.GroupVersionKind, bool, error)
        + Recognizes(gvk schema.GroupVersionKind) bool

    }
}


namespace v1 {
    class APIGroup << (S,Aquamarine) >> {
        + Name string
        + Versions []GroupVersionForDiscovery
        + PreferredVersion GroupVersionForDiscovery
        + ServerAddressByClientCIDRs []ServerAddressByClientCIDR

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIGroup) 
        + DeepCopy() *APIGroup
        + DeepCopyObject() runtime.Object

    }
    class APIGroupList << (S,Aquamarine) >> {
        + Groups []APIGroup

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIGroupList) 
        + DeepCopy() *APIGroupList
        + DeepCopyObject() runtime.Object

    }
    class APIResource << (S,Aquamarine) >> {
        + Name string
        + SingularName string
        + Namespaced bool
        + Group string
        + Version string
        + Kind string
        + Verbs Verbs
        + ShortNames []string
        + Categories []string
        + StorageVersionHash string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIResource) 
        + DeepCopy() *APIResource

    }
    class APIResourceList << (S,Aquamarine) >> {
        + GroupVersion string
        + APIResources []APIResource

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIResourceList) 
        + DeepCopy() *APIResourceList
        + DeepCopyObject() runtime.Object

    }
    class APIVersions << (S,Aquamarine) >> {
        + Versions []string
        + ServerAddressByClientCIDRs []ServerAddressByClientCIDR

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + GoString() string
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIVersions) 
        + DeepCopy() *APIVersions
        + DeepCopyObject() runtime.Object

    }
    class ApplyOptions << (S,Aquamarine) >> {
        + DryRun []string
        + Force bool
        + FieldManager string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + ToPatchOptions() PatchOptions
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ApplyOptions) 
        + DeepCopy() *ApplyOptions

    }
    interface Common  {
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 

    }
    class Condition << (S,Aquamarine) >> {
        + Type string
        + Status ConditionStatus
        + ObservedGeneration int64
        + LastTransitionTime Time
        + Reason string
        + Message string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Condition) 
        + DeepCopy() *Condition

    }
    class CreateOptions << (S,Aquamarine) >> {
        + DryRun []string
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *CreateOptions) 
        + DeepCopy() *CreateOptions
        + DeepCopyObject() runtime.Object

    }
    class DeleteOptions << (S,Aquamarine) >> {
        + GracePeriodSeconds *int64
        + Preconditions *Preconditions
        + OrphanDependents *bool
        + PropagationPolicy *DeletionPropagation
        + DryRun []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *DeleteOptions) 
        + DeepCopy() *DeleteOptions
        + DeepCopyObject() runtime.Object

    }
    class Duration << (S,Aquamarine) >> {
        + UnmarshalJSON(b []byte) error
        + MarshalJSON() ([]byte, error)
        + ToUnstructured() <font color=blue>interface</font>{}
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + DeepCopyInto(out *Duration) 
        + DeepCopy() *Duration

    }
    class FieldsV1 << (S,Aquamarine) >> {
        + Raw []byte

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + String() string
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *FieldsV1) 
        + DeepCopy() *FieldsV1

    }
    class GetOptions << (S,Aquamarine) >> {
        + ResourceVersion string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *GetOptions) 
        + DeepCopy() *GetOptions
        + DeepCopyObject() runtime.Object

    }
    class GroupKind << (S,Aquamarine) >> {
        + Group string
        + Kind string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupKind) 
        + DeepCopy() *GroupKind

    }
    class GroupResource << (S,Aquamarine) >> {
        + Group string
        + Resource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupResource) 
        + DeepCopy() *GroupResource

    }
    class GroupVersion << (S,Aquamarine) >> {
        + Group string
        + Version string

        - unmarshal(value []byte) error

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + Empty() bool
        + String() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(value []byte) error
        + UnmarshalText(value []byte) error
        + DeepCopyInto(out *GroupVersion) 
        + DeepCopy() *GroupVersion

    }
    class GroupVersionForDiscovery << (S,Aquamarine) >> {
        + GroupVersion string
        + Version string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *GroupVersionForDiscovery) 
        + DeepCopy() *GroupVersionForDiscovery

    }
    class GroupVersionKind << (S,Aquamarine) >> {
        + Group string
        + Version string
        + Kind string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupVersionKind) 
        + DeepCopy() *GroupVersionKind

    }
    class GroupVersionResource << (S,Aquamarine) >> {
        + Group string
        + Version string
        + Resource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupVersionResource) 
        + DeepCopy() *GroupVersionResource

    }
    class InternalEvent << (S,Aquamarine) >> {
        + GetObjectKind() schema.ObjectKind
        + DeepCopyObject() runtime.Object
        + DeepCopyInto(out *InternalEvent) 
        + DeepCopy() *InternalEvent

    }
    class LabelSelector << (S,Aquamarine) >> {
        + MatchLabels <font color=blue>map</font>[string]string
        + MatchExpressions []LabelSelectorRequirement

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *LabelSelector) 
        + DeepCopy() *LabelSelector

    }
    class LabelSelectorRequirement << (S,Aquamarine) >> {
        + Key string
        + Operator LabelSelectorOperator
        + Values []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *LabelSelectorRequirement) 
        + DeepCopy() *LabelSelectorRequirement

    }
    class List << (S,Aquamarine) >> {
        + Items []runtime.RawExtension

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *List) 
        + DeepCopy() *List
        + DeepCopyObject() runtime.Object

    }
    interface ListInterface  {
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 

    }
    class ListMeta << (S,Aquamarine) >> {
        + SelfLink string
        + ResourceVersion string
        + Continue string
        + RemainingItemCount *int64

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 
        + GetListMeta() ListInterface
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ListMeta) 
        + DeepCopy() *ListMeta

    }
    interface ListMetaAccessor  {
        + GetListMeta() ListInterface

    }
    class ListOptions << (S,Aquamarine) >> {
        + LabelSelector string
        + FieldSelector string
        + Watch bool
        + AllowWatchBookmarks bool
        + ResourceVersion string
        + ResourceVersionMatch ResourceVersionMatch
        + TimeoutSeconds *int64
        + Limit int64
        + Continue string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ListOptions) 
        + DeepCopy() *ListOptions
        + DeepCopyObject() runtime.Object

    }
    class ManagedFieldsEntry << (S,Aquamarine) >> {
        + Manager string
        + Operation ManagedFieldsOperationType
        + APIVersion string
        + Time *Time
        + FieldsType string
        + FieldsV1 *FieldsV1
        + Subresource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ManagedFieldsEntry) 
        + DeepCopy() *ManagedFieldsEntry

    }
    class MicroTime << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + DeepCopyInto(out *MicroTime) 
        + IsZero() bool
        + Before(u *MicroTime) bool
        + Equal(u *MicroTime) bool
        + BeforeTime(u *Time) bool
        + EqualTime(u *Time) bool
        + UnmarshalJSON(b []byte) error
        + UnmarshalQueryParameter(str string) error
        + MarshalJSON() ([]byte, error)
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + MarshalQueryParameter() (string, error)
        + Fuzz(c gofuzz.Continue) 
        + ProtoMicroTime() *Timestamp
        + Size() int
        + Unmarshal(data []byte) error
        + Marshal() ([]byte, error)
        + MarshalTo(data []byte) (int, error)
        + MarshalToSizedBuffer(data []byte) (int, error)
        + DeepCopy() *MicroTime

    }
    interface Object  {
        + GetNamespace() string
        + SetNamespace(namespace string) 
        + GetName() string
        + SetName(name string) 
        + GetGenerateName() string
        + SetGenerateName(name string) 
        + GetUID() types.UID
        + SetUID(uid types.UID) 
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetGeneration() int64
        + SetGeneration(generation int64) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetCreationTimestamp() Time
        + SetCreationTimestamp(timestamp Time) 
        + GetDeletionTimestamp() *Time
        + SetDeletionTimestamp(timestamp *Time) 
        + GetDeletionGracePeriodSeconds() *int64
        + SetDeletionGracePeriodSeconds( *int64) 
        + GetLabels() <font color=blue>map</font>[string]string
        + SetLabels(labels <font color=blue>map</font>[string]string) 
        + GetAnnotations() <font color=blue>map</font>[string]string
        + SetAnnotations(annotations <font color=blue>map</font>[string]string) 
        + GetFinalizers() []string
        + SetFinalizers(finalizers []string) 
        + GetOwnerReferences() []OwnerReference
        + SetOwnerReferences( []OwnerReference) 
        + GetManagedFields() []ManagedFieldsEntry
        + SetManagedFields(managedFields []ManagedFieldsEntry) 

    }
    class ObjectMeta << (S,Aquamarine) >> {
        + Name string
        + GenerateName string
        + Namespace string
        + SelfLink string
        + UID types.UID
        + ResourceVersion string
        + Generation int64
        + CreationTimestamp Time
        + DeletionTimestamp *Time
        + DeletionGracePeriodSeconds *int64
        + Labels <font color=blue>map</font>[string]string
        + Annotations <font color=blue>map</font>[string]string
        + OwnerReferences []OwnerReference
        + Finalizers []string
        + ManagedFields []ManagedFieldsEntry

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectMeta() Object
        + GetNamespace() string
        + SetNamespace(namespace string) 
        + GetName() string
        + SetName(name string) 
        + GetGenerateName() string
        + SetGenerateName(generateName string) 
        + GetUID() types.UID
        + SetUID(uid types.UID) 
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetGeneration() int64
        + SetGeneration(generation int64) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetCreationTimestamp() Time
        + SetCreationTimestamp(creationTimestamp Time) 
        + GetDeletionTimestamp() *Time
        + SetDeletionTimestamp(deletionTimestamp *Time) 
        + GetDeletionGracePeriodSeconds() *int64
        + SetDeletionGracePeriodSeconds(deletionGracePeriodSeconds *int64) 
        + GetLabels() <font color=blue>map</font>[string]string
        + SetLabels(labels <font color=blue>map</font>[string]string) 
        + GetAnnotations() <font color=blue>map</font>[string]string
        + SetAnnotations(annotations <font color=blue>map</font>[string]string) 
        + GetFinalizers() []string
        + SetFinalizers(finalizers []string) 
        + GetOwnerReferences() []OwnerReference
        + SetOwnerReferences(references []OwnerReference) 
        + GetManagedFields() []ManagedFieldsEntry
        + SetManagedFields(managedFields []ManagedFieldsEntry) 
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ObjectMeta) 
        + DeepCopy() *ObjectMeta

    }
    interface ObjectMetaAccessor  {
        + GetObjectMeta() Object

    }
    class OwnerReference << (S,Aquamarine) >> {
        + APIVersion string
        + Kind string
        + Name string
        + UID types.UID
        + Controller *bool
        + BlockOwnerDeletion *bool

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *OwnerReference) 
        + DeepCopy() *OwnerReference

    }
    class PartialObjectMetadata << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PartialObjectMetadata) 
        + DeepCopy() *PartialObjectMetadata
        + DeepCopyObject() runtime.Object

    }
    class PartialObjectMetadataList << (S,Aquamarine) >> {
        + Items []PartialObjectMetadata

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PartialObjectMetadataList) 
        + DeepCopy() *PartialObjectMetadataList
        + DeepCopyObject() runtime.Object

    }
    class Patch << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Patch) 
        + DeepCopy() *Patch

    }
    class PatchOptions << (S,Aquamarine) >> {
        + DryRun []string
        + Force *bool
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PatchOptions) 
        + DeepCopy() *PatchOptions
        + DeepCopyObject() runtime.Object

    }
    class Preconditions << (S,Aquamarine) >> {
        + UID *types.UID
        + ResourceVersion *string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Preconditions) 
        + DeepCopy() *Preconditions

    }
    class RootPaths << (S,Aquamarine) >> {
        + Paths []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *RootPaths) 
        + DeepCopy() *RootPaths

    }
    class ServerAddressByClientCIDR << (S,Aquamarine) >> {
        + ClientCIDR string
        + ServerAddress string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ServerAddressByClientCIDR) 
        + DeepCopy() *ServerAddressByClientCIDR

    }
    class Status << (S,Aquamarine) >> {
        + Status string
        + Message string
        + Reason StatusReason
        + Details *StatusDetails
        + Code int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Status) 
        + DeepCopy() *Status
        + DeepCopyObject() runtime.Object

    }
    class StatusCause << (S,Aquamarine) >> {
        + Type CauseType
        + Message string
        + Field string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *StatusCause) 
        + DeepCopy() *StatusCause

    }
    class StatusDetails << (S,Aquamarine) >> {
        + Name string
        + Group string
        + Kind string
        + UID types.UID
        + Causes []StatusCause
        + RetryAfterSeconds int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *StatusDetails) 
        + DeepCopy() *StatusDetails

    }
    class Table << (S,Aquamarine) >> {
        + ColumnDefinitions []TableColumnDefinition
        + Rows []TableRow

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Table) 
        + DeepCopy() *Table
        + DeepCopyObject() runtime.Object

    }
    class TableColumnDefinition << (S,Aquamarine) >> {
        + Name string
        + Type string
        + Format string
        + Description string
        + Priority int32

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableColumnDefinition) 
        + DeepCopy() *TableColumnDefinition

    }
    class TableOptions << (S,Aquamarine) >> {
        + NoHeaders bool
        + IncludeObject IncludeObjectPolicy

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableOptions) 
        + DeepCopy() *TableOptions
        + DeepCopyObject() runtime.Object

    }
    class TableRow << (S,Aquamarine) >> {
        + Cells []<font color=blue>interface</font>{}
        + Conditions []TableRowCondition
        + Object runtime.RawExtension

        + DeepCopy() *TableRow
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableRow) 

    }
    class TableRowCondition << (S,Aquamarine) >> {
        + Type RowConditionType
        + Status ConditionStatus
        + Reason string
        + Message string

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableRowCondition) 
        + DeepCopy() *TableRowCondition

    }
    class Time << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + DeepCopyInto(out *Time) 
        + IsZero() bool
        + Before(u *Time) bool
        + Equal(u *Time) bool
        + Rfc3339Copy() Time
        + UnmarshalJSON(b []byte) error
        + UnmarshalQueryParameter(str string) error
        + MarshalJSON() ([]byte, error)
        + ToUnstructured() <font color=blue>interface</font>{}
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + MarshalQueryParameter() (string, error)
        + Fuzz(c gofuzz.Continue) 
        + ProtoTime() *Timestamp
        + Size() int
        + Unmarshal(data []byte) error
        + Marshal() ([]byte, error)
        + MarshalTo(data []byte) (int, error)
        + MarshalToSizedBuffer(data []byte) (int, error)
        + DeepCopy() *Time

    }
    class Timestamp << (S,Aquamarine) >> {
        + Seconds int64
        + Nanos int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + DeepCopyInto(out *Timestamp) 
        + DeepCopy() *Timestamp

    }
    interface Type  {
        + GetAPIVersion() string
        + SetAPIVersion(version string) 
        + GetKind() string
        + SetKind(kind string) 

    }
    class TypeMeta << (S,Aquamarine) >> {
        + Kind string
        + APIVersion string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectKind() schema.ObjectKind
        + SetGroupVersionKind(gvk schema.GroupVersionKind) 
        + GroupVersionKind() schema.GroupVersionKind
        + SwaggerDoc() <font color=blue>map</font>[string]string

    }
    class UpdateOptions << (S,Aquamarine) >> {
        + DryRun []string
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *UpdateOptions) 
        + DeepCopy() *UpdateOptions
        + DeepCopyObject() runtime.Object

    }
    class Verbs << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *Verbs) 
        + DeepCopy() Verbs

    }
    class WatchEvent << (S,Aquamarine) >> {
        + Type string
        + Object runtime.RawExtension

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectKind() schema.ObjectKind
        + DeepCopyInto(out *WatchEvent) 
        + DeepCopy() *WatchEvent
        + DeepCopyObject() runtime.Object

    }
    class v1.CauseType << (T, #FF7700) >>  {
    }
    class v1.ConditionStatus << (T, #FF7700) >>  {
    }
    class v1.DeletionPropagation << (T, #FF7700) >>  {
    }
    class v1.IncludeObjectPolicy << (T, #FF7700) >>  {
    }
    class v1.InternalEvent << (T, #FF7700) >>  {
    }
    class v1.LabelSelectorOperator << (T, #FF7700) >>  {
    }
    class v1.ManagedFieldsOperationType << (T, #FF7700) >>  {
    }
    class v1.ResourceVersionMatch << (T, #FF7700) >>  {
    }
    class v1.RowConditionType << (T, #FF7700) >>  {
    }
    class v1.StatusReason << (T, #FF7700) >>  {
    }
    class v1.Verbs << (T, #FF7700) >>  {
    }
    class "watch.Event" as watchEvent {
    }
}
"v1.TypeMeta" *- - "v1.APIGroup"
"v1.TypeMeta" *- - "v1.APIGroupList"
"v1.TypeMeta" *- - "v1.APIResourceList"
"v1.TypeMeta" *- - "v1.APIVersions"
"v1.TypeMeta" *- - "v1.ApplyOptions"
"v1.TypeMeta" *- - "v1.CreateOptions"
"v1.TypeMeta" *- - "v1.DeleteOptions"
"time.Duration" *- - "v1.Duration"
"v1.TypeMeta" *- - "v1.GetOptions"
"v1.ListMeta" *- - "v1.List"
"v1.TypeMeta" *- - "v1.List"
"v1.TypeMeta" *- - "v1.ListOptions"
"time.Time" *- - "v1.MicroTime"
"v1.ObjectMeta" *- - "v1.PartialObjectMetadata"
"v1.TypeMeta" *- - "v1.PartialObjectMetadata"
"v1.ListMeta" *- - "v1.PartialObjectMetadataList"
"v1.TypeMeta" *- - "v1.PartialObjectMetadataList"
"v1.TypeMeta" *- - "v1.PatchOptions"
"v1.ListMeta" *- - "v1.Status"
"v1.TypeMeta" *- - "v1.Status"
"v1.ListMeta" *- - "v1.Table"
"v1.TypeMeta" *- - "v1.Table"
"v1.TypeMeta" *- - "v1.TableOptions"
"time.Time" *- - "v1.Time"
"v1.TypeMeta" *- - "v1.UpdateOptions"

"v1.Common" <|- - "v1.ListMeta"
"v1.ListInterface" <|- - "v1.ListMeta"
"v1.ListMetaAccessor" <|- - "v1.ListMeta"
"v1.Common" <|- - "v1.ObjectMeta"
"v1.Object" <|- - "v1.ObjectMeta"
"v1.ObjectMetaAccessor" <|- - "v1.ObjectMeta"

namespace validation {
    class LabelSelectorValidationOptions << (S,Aquamarine) >> {
        + AllowInvalidLabelValueInSelector bool

    }
}


hide methods
@enduml

PlantUML version 1.2022.7(Tue Aug 23 01:01:30 CST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: zh
Country: CN
--></g></svg>