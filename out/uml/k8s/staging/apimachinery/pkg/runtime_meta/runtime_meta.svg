<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1302px" preserveAspectRatio="none" style="width:18140px;height:1302px;background:#FFFFFF;" version="1.1" viewBox="0 0 18140 1302" width="18140px" zoomAndPan="magnify"><defs/><g><!--MD5=[58f92eeca1b9b283e19d96b306260adc]
cluster runtime--><g id="cluster_runtime"><path d="M8.5,6.532 L65.5,6.532 A3.75,3.75 0 0 1 68,9.032 L75,32.8039 L6572.5,32.8039 A2.5,2.5 0 0 1 6575,35.3039 L6575,1293.032 A2.5,2.5 0 0 1 6572.5,1295.532 L8.5,1295.532 A2.5,2.5 0 0 1 6,1293.032 L6,9.032 A2.5,2.5 0 0 1 8.5,6.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="75" y1="32.8039" y2="32.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="56" x="10" y="24.7719">runtime</text></g><!--MD5=[9a32cd3984fdd08205638aa42968fc5c]
cluster v1--><g id="cluster_v1"><path d="M6595.5,147.532 L6612.5,147.532 A3.75,3.75 0 0 1 6615,150.032 L6622,173.8039 L17916.5,173.8039 A2.5,2.5 0 0 1 17919,176.3039 L17919,1142.032 A2.5,2.5 0 0 1 17916.5,1144.532 L6595.5,1144.532 A2.5,2.5 0 0 1 6593,1142.032 L6593,150.032 A2.5,2.5 0 0 1 6595.5,147.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6593" x2="6622" y1="173.8039" y2="173.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="16" x="6597" y="165.7719">v1</text></g><!--MD5=[8b06ccfad0f1dcdad0f665dff21fe76e]
class runtime.Allocator--><g id="elem_runtime.Allocator"><rect codeLine="2" fill="#F1F1F1" height="60.2719" id="runtime.Allocator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="91" x="1818.5" y="270.032"/><ellipse cx="1833.95" cy="286.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1834.1375,292.7351 C1836.4344,292.7351 1837.8875,291.1101 1837.8875,289.1101 C1837.8875,287.282 1837.0594,286.4382 1835.9188,285.6414 L1834.9031,284.9226 C1833.7781,284.1101 1833.3563,283.8132 1833.3563,282.9539 C1833.3563,282.2664 1833.8406,281.8601 1834.4188,281.8601 C1835.1531,281.8601 1835.6375,282.2507 1836.3406,282.8914 L1837.6531,281.3132 C1836.6844,280.2976 1835.6688,279.7039 1834.4031,279.7039 C1832.2625,279.7039 1830.8094,281.2195 1830.8094,283.1414 C1830.8094,284.9382 1831.7313,285.8445 1832.825,286.5945 L1833.9188,287.3445 C1834.8563,287.9539 1835.3094,288.532 1835.3094,289.4695 C1835.3094,290.1414 1834.8406,290.5632 1834.1375,290.5632 C1833.4344,290.5632 1832.6844,290.0476 1832.0281,289.2195 L1830.4813,290.907 C1831.5125,292.0945 1832.8094,292.7351 1834.1375,292.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="1848.05" y="292.136">Allocator</text><line style="stroke:#181818;stroke-width:0.5;" x1="1819.5" x2="1908.5" y1="302.032" y2="302.032"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1826.5" y="314.6679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="1838.5" y="322.2719">buf []byte</text></g><!--MD5=[389bac555bac2336734955660517998e]
class runtime.CacheableObject--><g id="elem_runtime.CacheableObject"><rect codeLine="8" fill="#F1F1F1" height="40" id="runtime.CacheableObject" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="145" x="4636.5" y="58.032"/><ellipse cx="4651.5" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4647.8594,80.532 L4654.6406,80.532 L4654.6406,78.4539 L4652.4844,78.4539 L4652.4844,70.0164 L4654.6406,70.0164 L4654.6406,67.907 L4647.8594,67.907 L4647.8594,70.0164 L4649.9531,70.0164 L4649.9531,78.4539 L4647.8594,78.4539 L4647.8594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="113" x="4665.5" y="80.136">CacheableObject</text><line style="stroke:#181818;stroke-width:0.5;" x1="4637.5" x2="4780.5" y1="90.032" y2="90.032"/></g><!--MD5=[e030ca4d28c87f228e60d9a103f81892]
class runtime.ClientNegotiator--><g id="elem_runtime.ClientNegotiator"><rect codeLine="13" fill="#F1F1F1" height="40" id="runtime.ClientNegotiator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="140" x="4439" y="58.032"/><ellipse cx="4454" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4450.3594,80.532 L4457.1406,80.532 L4457.1406,78.4539 L4454.9844,78.4539 L4454.9844,70.0164 L4457.1406,70.0164 L4457.1406,67.907 L4450.3594,67.907 L4450.3594,70.0164 L4452.4531,70.0164 L4452.4531,78.4539 L4450.3594,78.4539 L4450.3594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="108" x="4468" y="80.136">ClientNegotiator</text><line style="stroke:#181818;stroke-width:0.5;" x1="4440" x2="4578" y1="90.032" y2="90.032"/></g><!--MD5=[98eeb27884e54522878ec27df5c319ea]
class runtime.Decoder--><g id="elem_runtime.Decoder"><rect codeLine="19" fill="#F1F1F1" height="40" id="runtime.Decoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="87" x="4034.5" y="58.032"/><ellipse cx="4049.5" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4045.8594,80.532 L4052.6406,80.532 L4052.6406,78.4539 L4050.4844,78.4539 L4050.4844,70.0164 L4052.6406,70.0164 L4052.6406,67.907 L4045.8594,67.907 L4045.8594,70.0164 L4047.9531,70.0164 L4047.9531,78.4539 L4045.8594,78.4539 L4045.8594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="55" x="4063.5" y="80.136">Decoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="4035.5" x2="4120.5" y1="90.032" y2="90.032"/></g><!--MD5=[0b5047d73b05629b4cba0187ff9e1b86]
class runtime.Encoder--><g id="elem_runtime.Encoder"><rect codeLine="23" fill="#F1F1F1" height="40" id="runtime.Encoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="86" x="3756" y="58.032"/><ellipse cx="3771" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3767.3594,80.532 L3774.1406,80.532 L3774.1406,78.4539 L3771.9844,78.4539 L3771.9844,70.0164 L3774.1406,70.0164 L3774.1406,67.907 L3767.3594,67.907 L3767.3594,70.0164 L3769.4531,70.0164 L3769.4531,78.4539 L3767.3594,78.4539 L3767.3594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="54" x="3785" y="80.136">Encoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="3757" x2="3841" y1="90.032" y2="90.032"/></g><!--MD5=[ed85f4b373183b27ac7b4e1fe91f9777]
class runtime.EncoderWithAllocator--><g id="elem_runtime.EncoderWithAllocator"><rect codeLine="28" fill="#F1F1F1" height="40" id="runtime.EncoderWithAllocator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="174" x="4817" y="58.032"/><ellipse cx="4832" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4828.3594,80.532 L4835.1406,80.532 L4835.1406,78.4539 L4832.9844,78.4539 L4832.9844,70.0164 L4835.1406,70.0164 L4835.1406,67.907 L4828.3594,67.907 L4828.3594,70.0164 L4830.4531,70.0164 L4830.4531,78.4539 L4828.3594,78.4539 L4828.3594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="142" x="4846" y="80.136">EncoderWithAllocator</text><line style="stroke:#181818;stroke-width:0.5;" x1="4818" x2="4990" y1="90.032" y2="90.032"/></g><!--MD5=[74c7cc960d0fbefb51a472ebbb2b1ffd]
class runtime.EquivalentResourceMapper--><g id="elem_runtime.EquivalentResourceMapper"><rect codeLine="32" fill="#F1F1F1" height="40" id="runtime.EquivalentResourceMapper" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="214" x="3435" y="58.032"/><ellipse cx="3450" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3446.3594,80.532 L3453.1406,80.532 L3453.1406,78.4539 L3450.9844,78.4539 L3450.9844,70.0164 L3453.1406,70.0164 L3453.1406,67.907 L3446.3594,67.907 L3446.3594,70.0164 L3448.4531,70.0164 L3448.4531,78.4539 L3446.3594,78.4539 L3446.3594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="182" x="3464" y="80.136">EquivalentResourceMapper</text><line style="stroke:#181818;stroke-width:0.5;" x1="3436" x2="3648" y1="90.032" y2="90.032"/></g><!--MD5=[a192f205c3bb72be1ab53bf900bf1981]
class runtime.EquivalentResourceRegistry--><g id="elem_runtime.EquivalentResourceRegistry"><rect codeLine="37" fill="#F1F1F1" height="40" id="runtime.EquivalentResourceRegistry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="217" x="3182.5" y="58.032"/><ellipse cx="3197.5" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3193.8594,80.532 L3200.6406,80.532 L3200.6406,78.4539 L3198.4844,78.4539 L3198.4844,70.0164 L3200.6406,70.0164 L3200.6406,67.907 L3193.8594,67.907 L3193.8594,70.0164 L3195.9531,70.0164 L3195.9531,78.4539 L3193.8594,78.4539 L3193.8594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="185" x="3211.5" y="80.136">EquivalentResourceRegistry</text><line style="stroke:#181818;stroke-width:0.5;" x1="3183.5" x2="3398.5" y1="90.032" y2="90.032"/></g><!--MD5=[38abd6e718c40c53553e8fe6b5f8ad22]
class runtime.Framer--><g id="elem_runtime.Framer"><rect codeLine="41" fill="#F1F1F1" height="40" id="runtime.Framer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="79" x="2932.5" y="58.032"/><ellipse cx="2947.5" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2943.8594,80.532 L2950.6406,80.532 L2950.6406,78.4539 L2948.4844,78.4539 L2948.4844,70.0164 L2950.6406,70.0164 L2950.6406,67.907 L2943.8594,67.907 L2943.8594,70.0164 L2945.9531,70.0164 L2945.9531,78.4539 L2943.8594,78.4539 L2943.8594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="47" x="2961.5" y="80.136">Framer</text><line style="stroke:#181818;stroke-width:0.5;" x1="2933.5" x2="3010.5" y1="90.032" y2="90.032"/></g><!--MD5=[075e4872509922ada57b61efdb9ec512]
class runtime.GroupVersioner--><g id="elem_runtime.GroupVersioner"><rect codeLine="46" fill="#F1F1F1" height="40" id="runtime.GroupVersioner" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="2370.5" y="58.032"/><ellipse cx="2385.5" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2381.8594,80.532 L2388.6406,80.532 L2388.6406,78.4539 L2386.4844,78.4539 L2386.4844,70.0164 L2388.6406,70.0164 L2388.6406,67.907 L2381.8594,67.907 L2381.8594,70.0164 L2383.9531,70.0164 L2383.9531,78.4539 L2381.8594,78.4539 L2381.8594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="2399.5" y="80.136">GroupVersioner</text><line style="stroke:#181818;stroke-width:0.5;" x1="2371.5" x2="2504.5" y1="90.032" y2="90.032"/></g><!--MD5=[78b039f77310525b9d50e17d908690d2]
class runtime.MemoryAllocator--><g id="elem_runtime.MemoryAllocator"><rect codeLine="51" fill="#F1F1F1" height="40" id="runtime.MemoryAllocator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="142" x="1869" y="58.032"/><ellipse cx="1884" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1880.3594,80.532 L1887.1406,80.532 L1887.1406,78.4539 L1884.9844,78.4539 L1884.9844,70.0164 L1887.1406,70.0164 L1887.1406,67.907 L1880.3594,67.907 L1880.3594,70.0164 L1882.4531,70.0164 L1882.4531,78.4539 L1880.3594,78.4539 L1880.3594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="110" x="1898" y="80.136">MemoryAllocator</text><line style="stroke:#181818;stroke-width:0.5;" x1="1870" x2="2010" y1="90.032" y2="90.032"/></g><!--MD5=[bba3842bbb290ceca280635942d5b725]
class runtime.MultiObjectTyper--><g id="elem_runtime.MultiObjectTyper"><rect codeLine="467" fill="#F1F1F1" height="40" id="runtime.MultiObjectTyper" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="145" x="752.5" y="280.032"/><ellipse cx="767.5" cy="296.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M766.2344,303.032 L768.7813,303.032 L768.7813,292.5164 L771.4063,292.5164 L771.4063,290.407 L763.5938,290.407 L763.5938,292.5164 L766.2344,292.5164 L766.2344,303.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="781.5" y="302.136">MultiObjectTyper</text><line style="stroke:#181818;stroke-width:0.5;" x1="753.5" x2="896.5" y1="312.032" y2="312.032"/></g><!--MD5=[c33669a9d00d7d6eed288347787fb960]
class runtime.Namer--><g id="elem_runtime.Namer"><rect codeLine="60" fill="#F1F1F1" height="40" id="runtime.Namer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="76" x="5026" y="58.032"/><ellipse cx="5041" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5037.3594,80.532 L5044.1406,80.532 L5044.1406,78.4539 L5041.9844,78.4539 L5041.9844,70.0164 L5044.1406,70.0164 L5044.1406,67.907 L5037.3594,67.907 L5037.3594,70.0164 L5039.4531,70.0164 L5039.4531,78.4539 L5037.3594,78.4539 L5037.3594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="44" x="5055" y="80.136">Namer</text><line style="stroke:#181818;stroke-width:0.5;" x1="5027" x2="5101" y1="90.032" y2="90.032"/></g><!--MD5=[7cedf428ff1bff9056e2815f4d0e5d03]
class runtime.NegotiateError--><g id="elem_runtime.NegotiateError"><rect codeLine="65" fill="#F1F1F1" height="80.5438" id="runtime.NegotiateError" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="5137" y="37.532"/><ellipse cx="5163.25" cy="53.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5163.4375,60.2351 C5165.7344,60.2351 5167.1875,58.6101 5167.1875,56.6101 C5167.1875,54.782 5166.3594,53.9382 5165.2188,53.1414 L5164.2031,52.4226 C5163.0781,51.6101 5162.6563,51.3132 5162.6563,50.4539 C5162.6563,49.7664 5163.1406,49.3601 5163.7188,49.3601 C5164.4531,49.3601 5164.9375,49.7507 5165.6406,50.3914 L5166.9531,48.8132 C5165.9844,47.7976 5164.9688,47.2039 5163.7031,47.2039 C5161.5625,47.2039 5160.1094,48.7195 5160.1094,50.6414 C5160.1094,52.4382 5161.0313,53.3445 5162.125,54.0945 L5163.2188,54.8445 C5164.1563,55.4539 5164.6094,56.032 5164.6094,56.9695 C5164.6094,57.6414 5164.1406,58.0632 5163.4375,58.0632 C5162.7344,58.0632 5161.9844,57.5476 5161.3281,56.7195 L5159.7813,58.407 C5160.8125,59.5945 5162.1094,60.2351 5163.4375,60.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="5179.75" y="59.636">NegotiateError</text><line style="stroke:#181818;stroke-width:0.5;" x1="5138" x2="5288" y1="69.532" y2="69.532"/><ellipse cx="5148" cy="85.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="5157" y="89.7719">ContentType string</text><ellipse cx="5148" cy="105.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="5157" y="110.0438">Stream bool</text></g><!--MD5=[45b6ecd38f7d8d66191a523c652535dc]
class runtime.NegotiatedSerializer--><g id="elem_runtime.NegotiatedSerializer"><rect codeLine="72" fill="#F1F1F1" height="40" id="runtime.NegotiatedSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="166" x="1595" y="58.032"/><ellipse cx="1610" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1606.3594,80.532 L1613.1406,80.532 L1613.1406,78.4539 L1610.9844,78.4539 L1610.9844,70.0164 L1613.1406,70.0164 L1613.1406,67.907 L1606.3594,67.907 L1606.3594,70.0164 L1608.4531,70.0164 L1608.4531,78.4539 L1606.3594,78.4539 L1606.3594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="134" x="1624" y="80.136">NegotiatedSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="1596" x2="1760" y1="90.032" y2="90.032"/></g><!--MD5=[e0f4ff548f3332fccd6a38bac7cff7ae]
class runtime.NestedObjectDecoder--><g id="elem_runtime.NestedObjectDecoder"><rect codeLine="78" fill="#F1F1F1" height="40" id="runtime.NestedObjectDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="5324.5" y="58.032"/><ellipse cx="5339.5" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5335.8594,80.532 L5342.6406,80.532 L5342.6406,78.4539 L5340.4844,78.4539 L5340.4844,70.0164 L5342.6406,70.0164 L5342.6406,67.907 L5335.8594,67.907 L5335.8594,70.0164 L5337.9531,70.0164 L5337.9531,78.4539 L5335.8594,78.4539 L5335.8594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="145" x="5353.5" y="80.136">NestedObjectDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="5325.5" x2="5500.5" y1="90.032" y2="90.032"/></g><!--MD5=[23532b36ce22b44640d52283c8720c10]
class runtime.NestedObjectEncoder--><g id="elem_runtime.NestedObjectEncoder"><rect codeLine="82" fill="#F1F1F1" height="40" id="runtime.NestedObjectEncoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="176" x="5537" y="58.032"/><ellipse cx="5552" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5548.3594,80.532 L5555.1406,80.532 L5555.1406,78.4539 L5552.9844,78.4539 L5552.9844,70.0164 L5555.1406,70.0164 L5555.1406,67.907 L5548.3594,67.907 L5548.3594,70.0164 L5550.4531,70.0164 L5550.4531,78.4539 L5548.3594,78.4539 L5548.3594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="144" x="5566" y="80.136">NestedObjectEncoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="5538" x2="5712" y1="90.032" y2="90.032"/></g><!--MD5=[9a25dcc5fc963640a33ce1c088bc6ccf]
class runtime.NoopDecoder--><g id="elem_runtime.NoopDecoder"><rect codeLine="86" fill="#F1F1F1" height="40" id="runtime.NoopDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="122" x="4017" y="280.032"/><ellipse cx="4032" cy="296.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4032.1875,302.7351 C4034.4844,302.7351 4035.9375,301.1101 4035.9375,299.1101 C4035.9375,297.282 4035.1094,296.4382 4033.9688,295.6414 L4032.9531,294.9226 C4031.8281,294.1101 4031.4063,293.8132 4031.4063,292.9539 C4031.4063,292.2664 4031.8906,291.8601 4032.4688,291.8601 C4033.2031,291.8601 4033.6875,292.2507 4034.3906,292.8914 L4035.7031,291.3132 C4034.7344,290.2976 4033.7188,289.7039 4032.4531,289.7039 C4030.3125,289.7039 4028.8594,291.2195 4028.8594,293.1414 C4028.8594,294.9382 4029.7813,295.8445 4030.875,296.5945 L4031.9688,297.3445 C4032.9063,297.9539 4033.3594,298.532 4033.3594,299.4695 C4033.3594,300.1414 4032.8906,300.5632 4032.1875,300.5632 C4031.4844,300.5632 4030.7344,300.0476 4030.0781,299.2195 L4028.5313,300.907 C4029.5625,302.0945 4030.8594,302.7351 4032.1875,302.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="4046" y="302.136">NoopDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="4018" x2="4138" y1="312.032" y2="312.032"/></g><!--MD5=[092c6e6747ad6c00dfc25cce5a7464e9]
class runtime.NoopEncoder--><g id="elem_runtime.NoopEncoder"><rect codeLine="90" fill="#F1F1F1" height="40" id="runtime.NoopEncoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="3674.5" y="280.032"/><ellipse cx="3689.5" cy="296.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3689.6875,302.7351 C3691.9844,302.7351 3693.4375,301.1101 3693.4375,299.1101 C3693.4375,297.282 3692.6094,296.4382 3691.4688,295.6414 L3690.4531,294.9226 C3689.3281,294.1101 3688.9063,293.8132 3688.9063,292.9539 C3688.9063,292.2664 3689.3906,291.8601 3689.9688,291.8601 C3690.7031,291.8601 3691.1875,292.2507 3691.8906,292.8914 L3693.2031,291.3132 C3692.2344,290.2976 3691.2188,289.7039 3689.9531,289.7039 C3687.8125,289.7039 3686.3594,291.2195 3686.3594,293.1414 C3686.3594,294.9382 3687.2813,295.8445 3688.375,296.5945 L3689.4688,297.3445 C3690.4063,297.9539 3690.8594,298.532 3690.8594,299.4695 C3690.8594,300.1414 3690.3906,300.5632 3689.6875,300.5632 C3688.9844,300.5632 3688.2344,300.0476 3687.5781,299.2195 L3686.0313,300.907 C3687.0625,302.0945 3688.3594,302.7351 3689.6875,302.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="3703.5" y="302.136">NoopEncoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="3675.5" x2="3794.5" y1="312.032" y2="312.032"/></g><!--MD5=[b23bee5dd1db4caa59cf3be1bc5a836c]
class runtime.Object--><g id="elem_runtime.Object"><rect codeLine="95" fill="#F1F1F1" height="40" id="runtime.Object" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="75" x="6051.5" y="58.032"/><ellipse cx="6066.5" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6062.8594,80.532 L6069.6406,80.532 L6069.6406,78.4539 L6067.4844,78.4539 L6067.4844,70.0164 L6069.6406,70.0164 L6069.6406,67.907 L6062.8594,67.907 L6062.8594,70.0164 L6064.9531,70.0164 L6064.9531,78.4539 L6062.8594,78.4539 L6062.8594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="43" x="6080.5" y="80.136">Object</text><line style="stroke:#181818;stroke-width:0.5;" x1="6052.5" x2="6125.5" y1="90.032" y2="90.032"/></g><!--MD5=[02a3e4a809b13a9c54cf809eac02e708]
class runtime.ObjectConvertor--><g id="elem_runtime.ObjectConvertor"><rect codeLine="100" fill="#F1F1F1" height="40" id="runtime.ObjectConvertor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="1165.5" y="58.032"/><ellipse cx="1180.5" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1176.8594,80.532 L1183.6406,80.532 L1183.6406,78.4539 L1181.4844,78.4539 L1181.4844,70.0164 L1183.6406,70.0164 L1183.6406,67.907 L1176.8594,67.907 L1176.8594,70.0164 L1178.9531,70.0164 L1178.9531,78.4539 L1176.8594,78.4539 L1176.8594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="107" x="1194.5" y="80.136">ObjectConvertor</text><line style="stroke:#181818;stroke-width:0.5;" x1="1166.5" x2="1303.5" y1="90.032" y2="90.032"/></g><!--MD5=[060f956b542c16ccfa4497ceb86db957]
class runtime.ObjectCreater--><g id="elem_runtime.ObjectCreater"><rect codeLine="106" fill="#F1F1F1" height="40" id="runtime.ObjectCreater" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="1007.5" y="58.032"/><ellipse cx="1022.5" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1018.8594,80.532 L1025.6406,80.532 L1025.6406,78.4539 L1023.4844,78.4539 L1023.4844,70.0164 L1025.6406,70.0164 L1025.6406,67.907 L1018.8594,67.907 L1018.8594,70.0164 L1020.9531,70.0164 L1020.9531,78.4539 L1018.8594,78.4539 L1018.8594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="91" x="1036.5" y="80.136">ObjectCreater</text><line style="stroke:#181818;stroke-width:0.5;" x1="1008.5" x2="1129.5" y1="90.032" y2="90.032"/></g><!--MD5=[58e2b8b5bd5cc458db2ecb183b49327d]
class runtime.ObjectDefaulter--><g id="elem_runtime.ObjectDefaulter"><rect codeLine="110" fill="#F1F1F1" height="40" id="runtime.ObjectDefaulter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="137" x="1339.5" y="58.032"/><ellipse cx="1354.5" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1350.8594,80.532 L1357.6406,80.532 L1357.6406,78.4539 L1355.4844,78.4539 L1355.4844,70.0164 L1357.6406,70.0164 L1357.6406,67.907 L1350.8594,67.907 L1350.8594,70.0164 L1352.9531,70.0164 L1352.9531,78.4539 L1350.8594,78.4539 L1350.8594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="105" x="1368.5" y="80.136">ObjectDefaulter</text><line style="stroke:#181818;stroke-width:0.5;" x1="1340.5" x2="1475.5" y1="90.032" y2="90.032"/></g><!--MD5=[97c2977a580e785f020282edc3722b29]
class runtime.ObjectTyper--><g id="elem_runtime.ObjectTyper"><rect codeLine="114" fill="#F1F1F1" height="40" id="runtime.ObjectTyper" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="112" x="814" y="58.032"/><ellipse cx="829" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M825.3594,80.532 L832.1406,80.532 L832.1406,78.4539 L829.9844,78.4539 L829.9844,70.0164 L832.1406,70.0164 L832.1406,67.907 L825.3594,67.907 L825.3594,70.0164 L827.4531,70.0164 L827.4531,78.4539 L825.3594,78.4539 L825.3594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="80" x="843" y="80.136">ObjectTyper</text><line style="stroke:#181818;stroke-width:0.5;" x1="815" x2="925" y1="90.032" y2="90.032"/></g><!--MD5=[a67c48c4358e7d3b20cd93974e01cb3f]
class runtime.ObjectVersioner--><g id="elem_runtime.ObjectVersioner"><rect codeLine="119" fill="#F1F1F1" height="40" id="runtime.ObjectVersioner" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="137" x="598.5" y="58.032"/><ellipse cx="613.5" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M609.8594,80.532 L616.6406,80.532 L616.6406,78.4539 L614.4844,78.4539 L614.4844,70.0164 L616.6406,70.0164 L616.6406,67.907 L609.8594,67.907 L609.8594,70.0164 L611.9531,70.0164 L611.9531,78.4539 L609.8594,78.4539 L609.8594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="105" x="627.5" y="80.136">ObjectVersioner</text><line style="stroke:#181818;stroke-width:0.5;" x1="599.5" x2="734.5" y1="90.032" y2="90.032"/></g><!--MD5=[d8ceecb9b4e647f83673300a22a9404d]
class runtime.Pair--><g id="elem_runtime.Pair"><rect codeLine="123" fill="#F1F1F1" height="60.2719" id="runtime.Pair" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="106" x="4656" y="270.032"/><ellipse cx="4692.6" cy="286.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4692.7875,292.7351 C4695.0844,292.7351 4696.5375,291.1101 4696.5375,289.1101 C4696.5375,287.282 4695.7094,286.4382 4694.5688,285.6414 L4693.5531,284.9226 C4692.4281,284.1101 4692.0063,283.8132 4692.0063,282.9539 C4692.0063,282.2664 4692.4906,281.8601 4693.0688,281.8601 C4693.8031,281.8601 4694.2875,282.2507 4694.9906,282.8914 L4696.3031,281.3132 C4695.3344,280.2976 4694.3188,279.7039 4693.0531,279.7039 C4690.9125,279.7039 4689.4594,281.2195 4689.4594,283.1414 C4689.4594,284.9382 4690.3813,285.8445 4691.475,286.5945 L4692.5688,287.3445 C4693.5063,287.9539 4693.9594,288.532 4693.9594,289.4695 C4693.9594,290.1414 4693.4906,290.5632 4692.7875,290.5632 C4692.0844,290.5632 4691.3344,290.0476 4690.6781,289.2195 L4689.1313,290.907 C4690.1625,292.0945 4691.4594,292.7351 4692.7875,292.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="26" x="4711.4" y="292.136">Pair</text><line style="stroke:#181818;stroke-width:0.5;" x1="4657" x2="4761" y1="302.032" y2="302.032"/><ellipse cx="4667" cy="317.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="4676" y="322.2719">Name string</text></g><!--MD5=[17e5c4c619d1060bdf850d2f75b4c3bf]
class runtime.ParameterCodec--><g id="elem_runtime.ParameterCodec"><rect codeLine="127" fill="#F1F1F1" height="40" id="runtime.ParameterCodec" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="142" x="327" y="58.032"/><ellipse cx="342" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M338.3594,80.532 L345.1406,80.532 L345.1406,78.4539 L342.9844,78.4539 L342.9844,70.0164 L345.1406,70.0164 L345.1406,67.907 L338.3594,67.907 L338.3594,70.0164 L340.4531,70.0164 L340.4531,78.4539 L338.3594,78.4539 L338.3594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="110" x="356" y="80.136">ParameterCodec</text><line style="stroke:#181818;stroke-width:0.5;" x1="328" x2="468" y1="90.032" y2="90.032"/></g><!--MD5=[ad46eb1f1331e9b3165c18e5107ef396]
class runtime.ProtobufMarshaller--><g id="elem_runtime.ProtobufMarshaller"><rect codeLine="132" fill="#F1F1F1" height="40" id="runtime.ProtobufMarshaller" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="159" x="6161.5" y="58.032"/><ellipse cx="6176.5" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6172.8594,80.532 L6179.6406,80.532 L6179.6406,78.4539 L6177.4844,78.4539 L6177.4844,70.0164 L6179.6406,70.0164 L6179.6406,67.907 L6172.8594,67.907 L6172.8594,70.0164 L6174.9531,70.0164 L6174.9531,78.4539 L6172.8594,78.4539 L6172.8594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="127" x="6190.5" y="80.136">ProtobufMarshaller</text><line style="stroke:#181818;stroke-width:0.5;" x1="6162.5" x2="6319.5" y1="90.032" y2="90.032"/></g><!--MD5=[b8fc576884e175d84d12bc4338e7cb1f]
class runtime.ProtobufReverseMarshaller--><g id="elem_runtime.ProtobufReverseMarshaller"><rect codeLine="136" fill="#F1F1F1" height="40" id="runtime.ProtobufReverseMarshaller" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="211" x="6355.5" y="58.032"/><ellipse cx="6370.5" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6366.8594,80.532 L6373.6406,80.532 L6373.6406,78.4539 L6371.4844,78.4539 L6371.4844,70.0164 L6373.6406,70.0164 L6373.6406,67.907 L6366.8594,67.907 L6366.8594,70.0164 L6368.9531,70.0164 L6368.9531,78.4539 L6366.8594,78.4539 L6366.8594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="179" x="6384.5" y="80.136">ProtobufReverseMarshaller</text><line style="stroke:#181818;stroke-width:0.5;" x1="6356.5" x2="6565.5" y1="90.032" y2="90.032"/></g><!--MD5=[51c28a8470bafded1d450532e8bd0b15]
class runtime.RawExtension--><g id="elem_runtime.RawExtension"><rect codeLine="140" fill="#F1F1F1" height="80.5438" id="runtime.RawExtension" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="125" x="6441.5" y="259.532"/><ellipse cx="6456.5" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6456.6875,282.2351 C6458.9844,282.2351 6460.4375,280.6101 6460.4375,278.6101 C6460.4375,276.782 6459.6094,275.9382 6458.4688,275.1414 L6457.4531,274.4226 C6456.3281,273.6101 6455.9063,273.3132 6455.9063,272.4539 C6455.9063,271.7664 6456.3906,271.3601 6456.9688,271.3601 C6457.7031,271.3601 6458.1875,271.7507 6458.8906,272.3914 L6460.2031,270.8132 C6459.2344,269.7976 6458.2188,269.2039 6456.9531,269.2039 C6454.8125,269.2039 6453.3594,270.7195 6453.3594,272.6414 C6453.3594,274.4382 6454.2813,275.3445 6455.375,276.0945 L6456.4688,276.8445 C6457.4063,277.4539 6457.8594,278.032 6457.8594,278.9695 C6457.8594,279.6414 6457.3906,280.0632 6456.6875,280.0632 C6455.9844,280.0632 6455.2344,279.5476 6454.5781,278.7195 L6453.0313,280.407 C6454.0625,281.5945 6455.3594,282.2351 6456.6875,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="6470.5" y="281.636">RawExtension</text><line style="stroke:#181818;stroke-width:0.5;" x1="6442.5" x2="6565.5" y1="291.532" y2="291.532"/><ellipse cx="6452.5" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="6461.5" y="311.7719">Raw []byte</text><ellipse cx="6452.5" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="6461.5" y="332.0438">Object Object</text></g><!--MD5=[fbf2802480f06f5329e15e85d9a96c0f]
class runtime.ResourceVersioner--><g id="elem_runtime.ResourceVersioner"><rect codeLine="164" fill="#F1F1F1" height="40" id="runtime.ResourceVersioner" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="155" x="4797.5" y="280.032"/><ellipse cx="4812.5" cy="296.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4808.8594,302.532 L4815.6406,302.532 L4815.6406,300.4539 L4813.4844,300.4539 L4813.4844,292.0164 L4815.6406,292.0164 L4815.6406,289.907 L4808.8594,289.907 L4808.8594,292.0164 L4810.9531,292.0164 L4810.9531,300.4539 L4808.8594,300.4539 L4808.8594,302.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="123" x="4826.5" y="302.136">ResourceVersioner</text><line style="stroke:#181818;stroke-width:0.5;" x1="4798.5" x2="4951.5" y1="312.032" y2="312.032"/></g><!--MD5=[9af4f84b2b5efe81dcf39e04890719f7]
class runtime.Scheme--><g id="elem_runtime.Scheme"><rect codeLine="169" fill="#F1F1F1" height="222.4472" id="runtime.Scheme" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="604" x="933" y="189.032"/><ellipse cx="1204.25" cy="205.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1204.4375,211.7351 C1206.7344,211.7351 1208.1875,210.1101 1208.1875,208.1101 C1208.1875,206.282 1207.3594,205.4382 1206.2188,204.6414 L1205.2031,203.9226 C1204.0781,203.1101 1203.6563,202.8132 1203.6563,201.9539 C1203.6563,201.2664 1204.1406,200.8601 1204.7188,200.8601 C1205.4531,200.8601 1205.9375,201.2507 1206.6406,201.8914 L1207.9531,200.3132 C1206.9844,199.2976 1205.9688,198.7039 1204.7031,198.7039 C1202.5625,198.7039 1201.1094,200.2195 1201.1094,202.1414 C1201.1094,203.9382 1202.0313,204.8445 1203.125,205.5945 L1204.2188,206.3445 C1205.1563,206.9539 1205.6094,207.532 1205.6094,208.4695 C1205.6094,209.1414 1205.1406,209.5632 1204.4375,209.5632 C1203.7344,209.5632 1202.9844,209.0476 1202.3281,208.2195 L1200.7813,209.907 C1201.8125,211.0945 1203.1094,211.7351 1204.4375,211.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="1224.75" y="211.136">Scheme</text><line style="stroke:#181818;stroke-width:0.5;" x1="934" x2="1536" y1="221.032" y2="221.032"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="941" y="233.6679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="953" y="241.2719">gvkToType</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="1027" y="241.2719">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="1057" y="241.2719">[schema.GroupVersionKind]reflect.Type</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="941" y="253.9398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="953" y="261.5438">typeToGVK</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="1028" y="261.5438">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275" x="1058" y="261.5438">[reflect.Type][]schema.GroupVersionKind</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="941" y="274.2118"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="953" y="281.8157">unversionedTypes</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="1078" y="281.8157">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="1108" y="281.8157">[reflect.Type]schema.GroupVersionKind</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="941" y="294.4837"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="953" y="302.0876">unversionedKinds</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="1077" y="302.0876">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="1107" y="302.0876">[string]reflect.Type</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="941" y="314.7556"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="953" y="322.3596">fieldLabelConversionFuncs</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="1137" y="322.3596">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="364" x="1167" y="322.3596">[schema.GroupVersionKind]FieldLabelConversionFunc</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="941" y="335.0275"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="953" y="342.6315">converter *conversion.Converter</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="941" y="355.2994"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="953" y="362.9034">versionPriority</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="1051" y="362.9034">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="1081" y="362.9034">[string][]string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="941" y="375.5713"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="953" y="383.1753">observedVersions []schema.GroupVersion</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="941" y="395.8432"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="953" y="403.4472">schemeName string</text></g><!--MD5=[c5c94cef955f86d9f5b8cf30d486619e]
class runtime.SchemeBuilder--><g id="elem_runtime.SchemeBuilder"><rect codeLine="469" fill="#F1F1F1" height="40" id="runtime.SchemeBuilder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="4987.5" y="280.032"/><ellipse cx="5002.5" cy="296.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5001.2344,303.032 L5003.7813,303.032 L5003.7813,292.5164 L5006.4063,292.5164 L5006.4063,290.407 L4998.5938,290.407 L4998.5938,292.5164 L5001.2344,292.5164 L5001.2344,303.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="5016.5" y="302.136">SchemeBuilder</text><line style="stroke:#181818;stroke-width:0.5;" x1="4988.5" x2="5119.5" y1="312.032" y2="312.032"/></g><!--MD5=[a5598ad625871a36dbb38b95807c9a03]
class runtime.Serializer--><g id="elem_runtime.Serializer"><rect codeLine="221" fill="#F1F1F1" height="40" id="runtime.Serializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="93" x="5155.5" y="280.032"/><ellipse cx="5170.5" cy="296.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5166.8594,302.532 L5173.6406,302.532 L5173.6406,300.4539 L5171.4844,300.4539 L5171.4844,292.0164 L5173.6406,292.0164 L5173.6406,289.907 L5166.8594,289.907 L5166.8594,292.0164 L5168.9531,292.0164 L5168.9531,300.4539 L5166.8594,300.4539 L5166.8594,302.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="61" x="5184.5" y="302.136">Serializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="5156.5" x2="5247.5" y1="312.032" y2="312.032"/></g><!--MD5=[513b83697d85f7cdc830942e1d64158e]
class runtime.SerializerInfo--><g id="elem_runtime.SerializerInfo"><rect codeLine="223" fill="#F1F1F1" height="202.1753" id="runtime.SerializerInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="278" x="5284" y="199.032"/><ellipse cx="5375.25" cy="215.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5375.4375,221.7351 C5377.7344,221.7351 5379.1875,220.1101 5379.1875,218.1101 C5379.1875,216.282 5378.3594,215.4382 5377.2188,214.6414 L5376.2031,213.9226 C5375.0781,213.1101 5374.6563,212.8132 5374.6563,211.9539 C5374.6563,211.2664 5375.1406,210.8601 5375.7188,210.8601 C5376.4531,210.8601 5376.9375,211.2507 5377.6406,211.8914 L5378.9531,210.3132 C5377.9844,209.2976 5376.9688,208.7039 5375.7031,208.7039 C5373.5625,208.7039 5372.1094,210.2195 5372.1094,212.1414 C5372.1094,213.9382 5373.0313,214.8445 5374.125,215.5945 L5375.2188,216.3445 C5376.1563,216.9539 5376.6094,217.532 5376.6094,218.4695 C5376.6094,219.1414 5376.1406,219.5632 5375.4375,219.5632 C5374.7344,219.5632 5373.9844,219.0476 5373.3281,218.2195 L5371.7813,219.907 C5372.8125,221.0945 5374.1094,221.7351 5375.4375,221.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="5395.75" y="221.136">SerializerInfo</text><line style="stroke:#181818;stroke-width:0.5;" x1="5285" x2="5561" y1="231.032" y2="231.032"/><ellipse cx="5295" cy="246.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="5304" y="251.2719">MediaType string</text><ellipse cx="5295" cy="266.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="5304" y="271.5438">MediaTypeType string</text><ellipse cx="5295" cy="287.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="5304" y="291.8157">MediaTypeSubType string</text><ellipse cx="5295" cy="307.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="5304" y="312.0876">EncodesAsText bool</text><ellipse cx="5295" cy="327.7556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="5304" y="332.3596">Serializer Serializer</text><ellipse cx="5295" cy="348.0275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="5304" y="352.6315">PrettySerializer Serializer</text><ellipse cx="5295" cy="368.2994" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="5304" y="372.9034">StrictSerializer Serializer</text><ellipse cx="5295" cy="388.5713" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="5304" y="393.1753">StreamSerializer *StreamSerializerInfo</text></g><!--MD5=[9d0fe64d1f4569c6bfdf0e9d6f9d2504]
class runtime.SimpleAllocator--><g id="elem_runtime.SimpleAllocator"><rect codeLine="234" fill="#F1F1F1" height="40" id="runtime.SimpleAllocator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="136" x="1945" y="280.032"/><ellipse cx="1960" cy="296.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1960.1875,302.7351 C1962.4844,302.7351 1963.9375,301.1101 1963.9375,299.1101 C1963.9375,297.282 1963.1094,296.4382 1961.9688,295.6414 L1960.9531,294.9226 C1959.8281,294.1101 1959.4063,293.8132 1959.4063,292.9539 C1959.4063,292.2664 1959.8906,291.8601 1960.4688,291.8601 C1961.2031,291.8601 1961.6875,292.2507 1962.3906,292.8914 L1963.7031,291.3132 C1962.7344,290.2976 1961.7188,289.7039 1960.4531,289.7039 C1958.3125,289.7039 1956.8594,291.2195 1956.8594,293.1414 C1956.8594,294.9382 1957.7813,295.8445 1958.875,296.5945 L1959.9688,297.3445 C1960.9063,297.9539 1961.3594,298.532 1961.3594,299.4695 C1961.3594,300.1414 1960.8906,300.5632 1960.1875,300.5632 C1959.4844,300.5632 1958.7344,300.0476 1958.0781,299.2195 L1956.5313,300.907 C1957.5625,302.0945 1958.8594,302.7351 1960.1875,302.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="1974" y="302.136">SimpleAllocator</text><line style="stroke:#181818;stroke-width:0.5;" x1="1946" x2="2080" y1="312.032" y2="312.032"/></g><!--MD5=[9f2723c58b64db7867847cbbadf4922f]
class runtime.StorageSerializer--><g id="elem_runtime.StorageSerializer"><rect codeLine="238" fill="#F1F1F1" height="40" id="runtime.StorageSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="143" x="5597.5" y="280.032"/><ellipse cx="5612.5" cy="296.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5608.8594,302.532 L5615.6406,302.532 L5615.6406,300.4539 L5613.4844,300.4539 L5613.4844,292.0164 L5615.6406,292.0164 L5615.6406,289.907 L5608.8594,289.907 L5608.8594,292.0164 L5610.9531,292.0164 L5610.9531,300.4539 L5608.8594,300.4539 L5608.8594,302.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="111" x="5626.5" y="302.136">StorageSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="5598.5" x2="5739.5" y1="312.032" y2="312.032"/></g><!--MD5=[5c20113dc4f4117a436bc8766ca0f907]
class runtime.StreamSerializerInfo--><g id="elem_runtime.StreamSerializerInfo"><rect codeLine="245" fill="#F1F1F1" height="60.2719" id="runtime.StreamSerializerInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="166" x="4626" y="623.532"/><ellipse cx="4641" cy="639.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4641.1875,646.2351 C4643.4844,646.2351 4644.9375,644.6101 4644.9375,642.6101 C4644.9375,640.782 4644.1094,639.9382 4642.9688,639.1414 L4641.9531,638.4226 C4640.8281,637.6101 4640.4063,637.3132 4640.4063,636.4539 C4640.4063,635.7664 4640.8906,635.3601 4641.4688,635.3601 C4642.2031,635.3601 4642.6875,635.7507 4643.3906,636.3914 L4644.7031,634.8132 C4643.7344,633.7976 4642.7188,633.2039 4641.4531,633.2039 C4639.3125,633.2039 4637.8594,634.7195 4637.8594,636.6414 C4637.8594,638.4382 4638.7813,639.3445 4639.875,640.0945 L4640.9688,640.8445 C4641.9063,641.4539 4642.3594,642.032 4642.3594,642.9695 C4642.3594,643.6414 4641.8906,644.0632 4641.1875,644.0632 C4640.4844,644.0632 4639.7344,643.5476 4639.0781,642.7195 L4637.5313,644.407 C4638.5625,645.5945 4639.8594,646.2351 4641.1875,646.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="4655" y="645.636">StreamSerializerInfo</text><line style="stroke:#181818;stroke-width:0.5;" x1="4627" x2="4791" y1="655.532" y2="655.532"/><ellipse cx="4637" cy="671.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="4646" y="675.7719">EncodesAsText bool</text></g><!--MD5=[02c7eb6217fb458ab70036044939cf7e]
class runtime.TypeMeta--><g id="elem_runtime.TypeMeta"><rect codeLine="249" fill="#F1F1F1" height="80.5438" id="runtime.TypeMeta" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="138" x="6051" y="259.532"/><ellipse cx="6084.9" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6085.0875,282.2351 C6087.3844,282.2351 6088.8375,280.6101 6088.8375,278.6101 C6088.8375,276.782 6088.0094,275.9382 6086.8688,275.1414 L6085.8531,274.4226 C6084.7281,273.6101 6084.3063,273.3132 6084.3063,272.4539 C6084.3063,271.7664 6084.7906,271.3601 6085.3688,271.3601 C6086.1031,271.3601 6086.5875,271.7507 6087.2906,272.3914 L6088.6031,270.8132 C6087.6344,269.7976 6086.6188,269.2039 6085.3531,269.2039 C6083.2125,269.2039 6081.7594,270.7195 6081.7594,272.6414 C6081.7594,274.4382 6082.6813,275.3445 6083.775,276.0945 L6084.8688,276.8445 C6085.8063,277.4539 6086.2594,278.032 6086.2594,278.9695 C6086.2594,279.6414 6085.7906,280.0632 6085.0875,280.0632 C6084.3844,280.0632 6083.6344,279.5476 6082.9781,278.7195 L6081.4313,280.407 C6082.4625,281.5945 6083.7594,282.2351 6085.0875,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="6103.1" y="281.636">TypeMeta</text><line style="stroke:#181818;stroke-width:0.5;" x1="6052" x2="6188" y1="291.532" y2="291.532"/><ellipse cx="6062" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="6071" y="311.7719">APIVersion string</text><ellipse cx="6062" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="6071" y="332.0438">Kind string</text></g><!--MD5=[48d11bd6c2b1bee9c9c1d6b79cd36de2]
class runtime.Unknown--><g id="elem_runtime.Unknown"><rect codeLine="272" fill="#F1F1F1" height="100.8157" id="runtime.Unknown" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="182" x="6224" y="249.532"/><ellipse cx="6278.75" cy="265.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6278.9375,272.2351 C6281.2344,272.2351 6282.6875,270.6101 6282.6875,268.6101 C6282.6875,266.782 6281.8594,265.9382 6280.7188,265.1414 L6279.7031,264.4226 C6278.5781,263.6101 6278.1563,263.3132 6278.1563,262.4539 C6278.1563,261.7664 6278.6406,261.3601 6279.2188,261.3601 C6279.9531,261.3601 6280.4375,261.7507 6281.1406,262.3914 L6282.4531,260.8132 C6281.4844,259.7976 6280.4688,259.2039 6279.2031,259.2039 C6277.0625,259.2039 6275.6094,260.7195 6275.6094,262.6414 C6275.6094,264.4382 6276.5313,265.3445 6277.625,266.0945 L6278.7188,266.8445 C6279.6563,267.4539 6280.1094,268.032 6280.1094,268.9695 C6280.1094,269.6414 6279.6406,270.0632 6278.9375,270.0632 C6278.2344,270.0632 6277.4844,269.5476 6276.8281,268.7195 L6275.2813,270.407 C6276.3125,271.5945 6277.6094,272.2351 6278.9375,272.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="6299.25" y="271.636">Unknown</text><line style="stroke:#181818;stroke-width:0.5;" x1="6225" x2="6405" y1="281.532" y2="281.532"/><ellipse cx="6235" cy="297.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="6244" y="301.7719">Raw []byte</text><ellipse cx="6235" cy="317.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="6244" y="322.0438">ContentEncoding string</text><ellipse cx="6235" cy="337.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="6244" y="342.3157">ContentType string</text></g><!--MD5=[72f0012c63452e1ddc1ff3b3a064790f]
class runtime.Unstructured--><g id="elem_runtime.Unstructured"><rect codeLine="299" fill="#F1F1F1" height="40" id="runtime.Unstructured" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="4827" y="633.532"/><ellipse cx="4842" cy="649.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4838.3594,656.032 L4845.1406,656.032 L4845.1406,653.9539 L4842.9844,653.9539 L4842.9844,645.5164 L4845.1406,645.5164 L4845.1406,643.407 L4838.3594,643.407 L4838.3594,645.5164 L4840.4531,645.5164 L4840.4531,653.9539 L4838.3594,653.9539 L4838.3594,656.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="88" x="4856" y="655.636">Unstructured</text><line style="stroke:#181818;stroke-width:0.5;" x1="4828" x2="4946" y1="665.532" y2="665.532"/></g><!--MD5=[b5ced996922a2a5910ad8ca0ed87de57]
class runtime.UnstructuredConverter--><g id="elem_runtime.UnstructuredConverter"><rect codeLine="307" fill="#F1F1F1" height="40" id="runtime.UnstructuredConverter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="184" x="47" y="58.032"/><ellipse cx="62" cy="74.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M58.3594,80.532 L65.1406,80.532 L65.1406,78.4539 L62.9844,78.4539 L62.9844,70.0164 L65.1406,70.0164 L65.1406,67.907 L58.3594,67.907 L58.3594,70.0164 L60.4531,70.0164 L60.4531,78.4539 L58.3594,78.4539 L58.3594,80.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="152" x="76" y="80.136">UnstructuredConverter</text><line style="stroke:#181818;stroke-width:0.5;" x1="48" x2="230" y1="90.032" y2="90.032"/></g><!--MD5=[bd189c837356cbfa193742b0074f416c]
class runtime.WithVersionEncoder--><g id="elem_runtime.WithVersionEncoder"><rect codeLine="312" fill="#F1F1F1" height="60.2719" id="runtime.WithVersionEncoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="181" x="4982.5" y="623.532"/><ellipse cx="5004.7" cy="639.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5004.8875,646.2351 C5007.1844,646.2351 5008.6375,644.6101 5008.6375,642.6101 C5008.6375,640.782 5007.8094,639.9382 5006.6688,639.1414 L5005.6531,638.4226 C5004.5281,637.6101 5004.1063,637.3132 5004.1063,636.4539 C5004.1063,635.7664 5004.5906,635.3601 5005.1688,635.3601 C5005.9031,635.3601 5006.3875,635.7507 5007.0906,636.3914 L5008.4031,634.8132 C5007.4344,633.7976 5006.4188,633.2039 5005.1531,633.2039 C5003.0125,633.2039 5001.5594,634.7195 5001.5594,636.6414 C5001.5594,638.4382 5002.4813,639.3445 5003.575,640.0945 L5004.6688,640.8445 C5005.6063,641.4539 5006.0594,642.032 5006.0594,642.9695 C5006.0594,643.6414 5005.5906,644.0632 5004.8875,644.0632 C5004.1844,644.0632 5003.4344,643.5476 5002.7781,642.7195 L5001.2313,644.407 C5002.2625,645.5945 5003.5594,646.2351 5004.8875,646.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="5020.3" y="645.636">WithVersionEncoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="4983.5" x2="5162.5" y1="655.532" y2="655.532"/><ellipse cx="4993.5" cy="671.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="5002.5" y="675.7719">Version GroupVersioner</text></g><!--MD5=[71e28e8ba58c01bf65302f0324ced796]
class runtime.WithoutVersionDecoder--><g id="elem_runtime.WithoutVersionDecoder"><rect codeLine="318" fill="#F1F1F1" height="40" id="runtime.WithoutVersionDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="188" x="4174" y="280.032"/><ellipse cx="4189" cy="296.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4189.1875,302.7351 C4191.4844,302.7351 4192.9375,301.1101 4192.9375,299.1101 C4192.9375,297.282 4192.1094,296.4382 4190.9688,295.6414 L4189.9531,294.9226 C4188.8281,294.1101 4188.4063,293.8132 4188.4063,292.9539 C4188.4063,292.2664 4188.8906,291.8601 4189.4688,291.8601 C4190.2031,291.8601 4190.6875,292.2507 4191.3906,292.8914 L4192.7031,291.3132 C4191.7344,290.2976 4190.7188,289.7039 4189.4531,289.7039 C4187.3125,289.7039 4185.8594,291.2195 4185.8594,293.1414 C4185.8594,294.9382 4186.7813,295.8445 4187.875,296.5945 L4188.9688,297.3445 C4189.9063,297.9539 4190.3594,298.532 4190.3594,299.4695 C4190.3594,300.1414 4189.8906,300.5632 4189.1875,300.5632 C4188.4844,300.5632 4187.7344,300.0476 4187.0781,299.2195 L4185.5313,300.907 C4186.5625,302.0945 4187.8594,302.7351 4189.1875,302.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="4203" y="302.136">WithoutVersionDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="4175" x2="4361" y1="312.032" y2="312.032"/></g><!--MD5=[fa517604f4e9a02116ba7b5afaefb2b2]
class runtime.base64Serializer--><g id="elem_runtime.base64Serializer"><rect codeLine="322" fill="#F1F1F1" height="60.2719" id="runtime.base64Serializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="151" x="3830.5" y="270.032"/><ellipse cx="3850" cy="286.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3850.1875,292.7351 C3852.4844,292.7351 3853.9375,291.1101 3853.9375,289.1101 C3853.9375,287.282 3853.1094,286.4382 3851.9688,285.6414 L3850.9531,284.9226 C3849.8281,284.1101 3849.4063,283.8132 3849.4063,282.9539 C3849.4063,282.2664 3849.8906,281.8601 3850.4688,281.8601 C3851.2031,281.8601 3851.6875,282.2507 3852.3906,282.8914 L3853.7031,281.3132 C3852.7344,280.2976 3851.7188,279.7039 3850.4531,279.7039 C3848.3125,279.7039 3846.8594,281.2195 3846.8594,283.1414 C3846.8594,284.9382 3847.7813,285.8445 3848.875,286.5945 L3849.9688,287.3445 C3850.9063,287.9539 3851.3594,288.532 3851.3594,289.4695 C3851.3594,290.1414 3850.8906,290.5632 3850.1875,290.5632 C3849.4844,290.5632 3848.7344,290.0476 3848.0781,289.2195 L3846.5313,290.907 C3847.5625,292.0945 3848.8594,292.7351 3850.1875,292.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="3865" y="292.136">base64Serializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="3831.5" x2="3980.5" y1="302.032" y2="302.032"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3838.5" y="314.6679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="3850.5" y="322.2719">identifier Identifier</text></g><!--MD5=[effae5ff421e776a0bf58cf32ddf4765]
class runtime.buffer--><g id="elem_runtime.buffer"><rect codeLine="332" fill="#F1F1F1" height="60.2719" id="runtime.buffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="158" x="5199" y="623.532"/><ellipse cx="5253.25" cy="639.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5253.4375,646.2351 C5255.7344,646.2351 5257.1875,644.6101 5257.1875,642.6101 C5257.1875,640.782 5256.3594,639.9382 5255.2188,639.1414 L5254.2031,638.4226 C5253.0781,637.6101 5252.6563,637.3132 5252.6563,636.4539 C5252.6563,635.7664 5253.1406,635.3601 5253.7188,635.3601 C5254.4531,635.3601 5254.9375,635.7507 5255.6406,636.3914 L5256.9531,634.8132 C5255.9844,633.7976 5254.9688,633.2039 5253.7031,633.2039 C5251.5625,633.2039 5250.1094,634.7195 5250.1094,636.6414 C5250.1094,638.4382 5251.0313,639.3445 5252.125,640.0945 L5253.2188,640.8445 C5254.1563,641.4539 5254.6094,642.032 5254.6094,642.9695 C5254.6094,643.6414 5254.1406,644.0632 5253.4375,644.0632 C5252.7344,644.0632 5251.9844,643.5476 5251.3281,642.7195 L5249.7813,644.407 C5250.8125,645.5945 5252.1094,646.2351 5253.4375,646.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="5273.75" y="645.636">buffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="5200" x2="5356" y1="655.532" y2="655.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5207" y="668.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="5219" y="675.7719">lines []bufferedLine</text></g><!--MD5=[515f9b3c18f9ad22a680b9802142b37b]
class runtime.bufferedLine--><g id="elem_runtime.bufferedLine"><rect codeLine="339" fill="#F1F1F1" height="80.5438" id="runtime.bufferedLine" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="125" x="5392.5" y="613.032"/><ellipse cx="5410.2" cy="629.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5410.3875,635.7351 C5412.6844,635.7351 5414.1375,634.1101 5414.1375,632.1101 C5414.1375,630.282 5413.3094,629.4382 5412.1688,628.6414 L5411.1531,627.9226 C5410.0281,627.1101 5409.6063,626.8132 5409.6063,625.9539 C5409.6063,625.2664 5410.0906,624.8601 5410.6688,624.8601 C5411.4031,624.8601 5411.8875,625.2507 5412.5906,625.8914 L5413.9031,624.3132 C5412.9344,623.2976 5411.9188,622.7039 5410.6531,622.7039 C5408.5125,622.7039 5407.0594,624.2195 5407.0594,626.1414 C5407.0594,627.9382 5407.9813,628.8445 5409.075,629.5945 L5410.1688,630.3445 C5411.1063,630.9539 5411.5594,631.532 5411.5594,632.4695 C5411.5594,633.1414 5411.0906,633.5632 5410.3875,633.5632 C5409.6844,633.5632 5408.9344,633.0476 5408.2781,632.2195 L5406.7313,633.907 C5407.7625,635.0945 5409.0594,635.7351 5410.3875,635.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="5424.8" y="635.136">bufferedLine</text><line style="stroke:#181818;stroke-width:0.5;" x1="5393.5" x2="5516.5" y1="645.032" y2="645.032"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5400.5" y="657.6679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="5412.5" y="665.2719">line string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5400.5" y="677.9398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="5412.5" y="685.5438">indentation int</text></g><!--MD5=[0385f2b51d7d6e1e4fd1565b1b76c45b]
class runtime.clientNegotiator--><g id="elem_runtime.clientNegotiator"><rect codeLine="344" fill="#F1F1F1" height="80.5438" id="runtime.clientNegotiator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="223" x="4397.5" y="259.532"/><ellipse cx="4451.75" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4451.9375,282.2351 C4454.2344,282.2351 4455.6875,280.6101 4455.6875,278.6101 C4455.6875,276.782 4454.8594,275.9382 4453.7188,275.1414 L4452.7031,274.4226 C4451.5781,273.6101 4451.1563,273.3132 4451.1563,272.4539 C4451.1563,271.7664 4451.6406,271.3601 4452.2188,271.3601 C4452.9531,271.3601 4453.4375,271.7507 4454.1406,272.3914 L4455.4531,270.8132 C4454.4844,269.7976 4453.4688,269.2039 4452.2031,269.2039 C4450.0625,269.2039 4448.6094,270.7195 4448.6094,272.6414 C4448.6094,274.4382 4449.5313,275.3445 4450.625,276.0945 L4451.7188,276.8445 C4452.6563,277.4539 4453.1094,278.032 4453.1094,278.9695 C4453.1094,279.6414 4452.6406,280.0632 4451.9375,280.0632 C4451.2344,280.0632 4450.4844,279.5476 4449.8281,278.7195 L4448.2813,280.407 C4449.3125,281.5945 4450.6094,282.2351 4451.9375,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="4472.25" y="281.636">clientNegotiator</text><line style="stroke:#181818;stroke-width:0.5;" x1="4398.5" x2="4619.5" y1="291.532" y2="291.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4405.5" y="304.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="4417.5" y="311.7719">serializer NegotiatedSerializer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4405.5" y="324.4398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="4417.5" y="332.0438">encode GroupVersioner</text></g><!--MD5=[71c003c748c6c03e337ac2d6af8cbf67]
class runtime.codec--><g id="elem_runtime.codec"><rect codeLine="353" fill="#F1F1F1" height="40" id="runtime.codec" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="71" x="5552.5" y="633.532"/><ellipse cx="5567.5" cy="649.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5567.6875,656.2351 C5569.9844,656.2351 5571.4375,654.6101 5571.4375,652.6101 C5571.4375,650.782 5570.6094,649.9382 5569.4688,649.1414 L5568.4531,648.4226 C5567.3281,647.6101 5566.9063,647.3132 5566.9063,646.4539 C5566.9063,645.7664 5567.3906,645.3601 5567.9688,645.3601 C5568.7031,645.3601 5569.1875,645.7507 5569.8906,646.3914 L5571.2031,644.8132 C5570.2344,643.7976 5569.2188,643.2039 5567.9531,643.2039 C5565.8125,643.2039 5564.3594,644.7195 5564.3594,646.6414 C5564.3594,648.4382 5565.2813,649.3445 5566.375,650.0945 L5567.4688,650.8445 C5568.4063,651.4539 5568.8594,652.032 5568.8594,652.9695 C5568.8594,653.6414 5568.3906,654.0632 5567.6875,654.0632 C5566.9844,654.0632 5566.2344,653.5476 5565.5781,652.7195 L5564.0313,654.407 C5565.0625,655.5945 5566.3594,656.2351 5567.6875,656.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="5581.5" y="655.636">codec</text><line style="stroke:#181818;stroke-width:0.5;" x1="5553.5" x2="5622.5" y1="665.532" y2="665.532"/></g><!--MD5=[ff148cf80f1238542fc994c6a3063648]
class runtime.defaultFramer--><g id="elem_runtime.defaultFramer"><rect codeLine="355" fill="#F1F1F1" height="40" id="runtime.defaultFramer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="127" x="2908.5" y="280.032"/><ellipse cx="2923.5" cy="296.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2923.6875,302.7351 C2925.9844,302.7351 2927.4375,301.1101 2927.4375,299.1101 C2927.4375,297.282 2926.6094,296.4382 2925.4688,295.6414 L2924.4531,294.9226 C2923.3281,294.1101 2922.9063,293.8132 2922.9063,292.9539 C2922.9063,292.2664 2923.3906,291.8601 2923.9688,291.8601 C2924.7031,291.8601 2925.1875,292.2507 2925.8906,292.8914 L2927.2031,291.3132 C2926.2344,290.2976 2925.2188,289.7039 2923.9531,289.7039 C2921.8125,289.7039 2920.3594,291.2195 2920.3594,293.1414 C2920.3594,294.9382 2921.2813,295.8445 2922.375,296.5945 L2923.4688,297.3445 C2924.4063,297.9539 2924.8594,298.532 2924.8594,299.4695 C2924.8594,300.1414 2924.3906,300.5632 2923.6875,300.5632 C2922.9844,300.5632 2922.2344,300.0476 2921.5781,299.2195 L2920.0313,300.907 C2921.0625,302.0945 2922.3594,302.7351 2923.6875,302.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="2937.5" y="302.136">defaultFramer</text><line style="stroke:#181818;stroke-width:0.5;" x1="2909.5" x2="3034.5" y1="312.032" y2="312.032"/></g><!--MD5=[72e2f1ec968ab6614015cb1bd41d17d3]
class runtime.disabledGroupVersioner--><g id="elem_runtime.disabledGroupVersioner"><rect codeLine="360" fill="#F1F1F1" height="40" id="runtime.disabledGroupVersioner" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="193" x="2116.5" y="280.032"/><ellipse cx="2131.5" cy="296.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2131.6875,302.7351 C2133.9844,302.7351 2135.4375,301.1101 2135.4375,299.1101 C2135.4375,297.282 2134.6094,296.4382 2133.4688,295.6414 L2132.4531,294.9226 C2131.3281,294.1101 2130.9063,293.8132 2130.9063,292.9539 C2130.9063,292.2664 2131.3906,291.8601 2131.9688,291.8601 C2132.7031,291.8601 2133.1875,292.2507 2133.8906,292.8914 L2135.2031,291.3132 C2134.2344,290.2976 2133.2188,289.7039 2131.9531,289.7039 C2129.8125,289.7039 2128.3594,291.2195 2128.3594,293.1414 C2128.3594,294.9382 2129.2813,295.8445 2130.375,296.5945 L2131.4688,297.3445 C2132.4063,297.9539 2132.8594,298.532 2132.8594,299.4695 C2132.8594,300.1414 2132.3906,300.5632 2131.6875,300.5632 C2130.9844,300.5632 2130.2344,300.0476 2129.5781,299.2195 L2128.0313,300.907 C2129.0625,302.0945 2130.3594,302.7351 2131.6875,302.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="2145.5" y="302.136">disabledGroupVersioner</text><line style="stroke:#181818;stroke-width:0.5;" x1="2117.5" x2="2308.5" y1="312.032" y2="312.032"/></g><!--MD5=[2487ebc080403266d6ff18526f693e7f]
class runtime.encodable--><g id="elem_runtime.encodable"><rect codeLine="365" fill="#F1F1F1" height="121.0876" id="runtime.encodable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="240" x="5776" y="239.532"/><ellipse cx="5856.75" cy="255.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5856.9375,262.2351 C5859.2344,262.2351 5860.6875,260.6101 5860.6875,258.6101 C5860.6875,256.782 5859.8594,255.9382 5858.7188,255.1414 L5857.7031,254.4226 C5856.5781,253.6101 5856.1563,253.3132 5856.1563,252.4539 C5856.1563,251.7664 5856.6406,251.3601 5857.2188,251.3601 C5857.9531,251.3601 5858.4375,251.7507 5859.1406,252.3914 L5860.4531,250.8132 C5859.4844,249.7976 5858.4688,249.2039 5857.2031,249.2039 C5855.0625,249.2039 5853.6094,250.7195 5853.6094,252.6414 C5853.6094,254.4382 5854.5313,255.3445 5855.625,256.0945 L5856.7188,256.8445 C5857.6563,257.4539 5858.1094,258.032 5858.1094,258.9695 C5858.1094,259.6414 5857.6406,260.0632 5856.9375,260.0632 C5856.2344,260.0632 5855.4844,259.5476 5854.8281,258.7195 L5853.2813,260.407 C5854.3125,261.5945 5855.6094,262.2351 5856.9375,262.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="5877.25" y="261.636">encodable</text><line style="stroke:#181818;stroke-width:0.5;" x1="5777" x2="6015" y1="271.532" y2="271.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5784" y="284.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="5796" y="291.7719">obj Object</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5784" y="304.4398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="5796" y="312.0438">versions []schema.GroupVersion</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="3" x="5796" y="332.3157"> </text><ellipse cx="5787" cy="347.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="5796" y="352.5876">E Encoder</text></g><!--MD5=[7f25385671edbaef56701257aa1c6b55]
class runtime.equivalentResourceRegistry--><g id="elem_runtime.equivalentResourceRegistry"><rect codeLine="377" fill="#F1F1F1" height="121.0876" id="runtime.equivalentResourceRegistry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="568" x="3071" y="239.532"/><ellipse cx="3258.25" cy="255.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3258.4375,262.2351 C3260.7344,262.2351 3262.1875,260.6101 3262.1875,258.6101 C3262.1875,256.782 3261.3594,255.9382 3260.2188,255.1414 L3259.2031,254.4226 C3258.0781,253.6101 3257.6563,253.3132 3257.6563,252.4539 C3257.6563,251.7664 3258.1406,251.3601 3258.7188,251.3601 C3259.4531,251.3601 3259.9375,251.7507 3260.6406,252.3914 L3261.9531,250.8132 C3260.9844,249.7976 3259.9688,249.2039 3258.7031,249.2039 C3256.5625,249.2039 3255.1094,250.7195 3255.1094,252.6414 C3255.1094,254.4382 3256.0313,255.3445 3257.125,256.0945 L3258.2188,256.8445 C3259.1563,257.4539 3259.6094,258.032 3259.6094,258.9695 C3259.6094,259.6414 3259.1406,260.0632 3258.4375,260.0632 C3257.7344,260.0632 3256.9844,259.5476 3256.3281,258.7195 L3254.7813,260.407 C3255.8125,261.5945 3257.1094,262.2351 3258.4375,262.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="3278.75" y="261.636">equivalentResourceRegistry</text><line style="stroke:#181818;stroke-width:0.5;" x1="3072" x2="3638" y1="271.532" y2="271.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3079" y="284.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="3091" y="291.7719">resources</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="3158" y="291.7719">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="3188" y="291.7719">[string]</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="3236" y="291.7719">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="3266" y="291.7719">[string][]schema.GroupVersionResource</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3079" y="304.4398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="37" x="3091" y="312.0438">kinds</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="3131" y="312.0438">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="3161" y="312.0438">[schema.GroupVersionResource]</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="3378" y="312.0438">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="3408" y="312.0438">[string]schema.GroupVersionKind</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3079" y="324.7118"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="3091" y="332.3157">keys</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="3124" y="332.3157">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="206" x="3154" y="332.3157">[schema.GroupResource]string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3079" y="344.9837"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="3091" y="352.5876">mutex sync.RWMutex</text></g><!--MD5=[53271e882576038cb9452408c7761766]
class runtime.fieldInfo--><g id="elem_runtime.fieldInfo"><rect codeLine="389" fill="#F1F1F1" height="100.8157" id="runtime.fieldInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="187" x="4615.5" y="905.532"/><ellipse cx="4676.75" cy="921.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4676.9375,928.2351 C4679.2344,928.2351 4680.6875,926.6101 4680.6875,924.6101 C4680.6875,922.782 4679.8594,921.9382 4678.7188,921.1414 L4677.7031,920.4226 C4676.5781,919.6101 4676.1563,919.3132 4676.1563,918.4539 C4676.1563,917.7664 4676.6406,917.3601 4677.2188,917.3601 C4677.9531,917.3601 4678.4375,917.7507 4679.1406,918.3914 L4680.4531,916.8132 C4679.4844,915.7976 4678.4688,915.2039 4677.2031,915.2039 C4675.0625,915.2039 4673.6094,916.7195 4673.6094,918.6414 C4673.6094,920.4382 4674.5313,921.3445 4675.625,922.0945 L4676.7188,922.8445 C4677.6563,923.4539 4678.1094,924.032 4678.1094,924.9695 C4678.1094,925.6414 4677.6406,926.0632 4676.9375,926.0632 C4676.2344,926.0632 4675.4844,925.5476 4674.8281,924.7195 L4673.2813,926.407 C4674.3125,927.5945 4675.6094,928.2351 4676.9375,928.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="4697.25" y="927.636">fieldInfo</text><line style="stroke:#181818;stroke-width:0.5;" x1="4616.5" x2="4801.5" y1="937.532" y2="937.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4623.5" y="950.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="4635.5" y="957.7719">name string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4623.5" y="970.4398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="4635.5" y="978.0438">nameValue reflect.Value</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4623.5" y="990.7118"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="4635.5" y="998.3157">omitempty bool</text></g><!--MD5=[6b926d54873bdbce978db65ee9517522]
class runtime.fieldsCache--><g id="elem_runtime.fieldsCache"><rect codeLine="395" fill="#F1F1F1" height="60.2719" id="runtime.fieldsCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="151" x="4837.5" y="926.032"/><ellipse cx="4870.95" cy="942.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4871.1375,948.7351 C4873.4344,948.7351 4874.8875,947.1101 4874.8875,945.1101 C4874.8875,943.282 4874.0594,942.4382 4872.9188,941.6414 L4871.9031,940.9226 C4870.7781,940.1101 4870.3563,939.8132 4870.3563,938.9539 C4870.3563,938.2664 4870.8406,937.8601 4871.4188,937.8601 C4872.1531,937.8601 4872.6375,938.2507 4873.3406,938.8914 L4874.6531,937.3132 C4873.6844,936.2976 4872.6688,935.7039 4871.4031,935.7039 C4869.2625,935.7039 4867.8094,937.2195 4867.8094,939.1414 C4867.8094,940.9382 4868.7313,941.8445 4869.825,942.5945 L4870.9188,943.3445 C4871.8563,943.9539 4872.3094,944.532 4872.3094,945.4695 C4872.3094,946.1414 4871.8406,946.5632 4871.1375,946.5632 C4870.4344,946.5632 4869.6844,946.0476 4869.0281,945.2195 L4867.4813,946.907 C4868.5125,948.0945 4869.8094,948.7351 4871.1375,948.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="4889.05" y="948.136">fieldsCache</text><line style="stroke:#181818;stroke-width:0.5;" x1="4838.5" x2="4987.5" y1="958.032" y2="958.032"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4845.5" y="970.6679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="4857.5" y="978.2719">value atomic.Value</text></g><!--MD5=[7b725106da6666a38092a5cb82736485]
class runtime.fromUnstructuredContext--><g id="elem_runtime.fromUnstructuredContext"><rect codeLine="399" fill="#F1F1F1" height="141.3596" id="runtime.fromUnstructuredContext" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="255" x="5023.5" y="885.532"/><ellipse cx="5062.35" cy="901.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5062.5375,908.2351 C5064.8344,908.2351 5066.2875,906.6101 5066.2875,904.6101 C5066.2875,902.782 5065.4594,901.9382 5064.3188,901.1414 L5063.3031,900.4226 C5062.1781,899.6101 5061.7563,899.3132 5061.7563,898.4539 C5061.7563,897.7664 5062.2406,897.3601 5062.8188,897.3601 C5063.5531,897.3601 5064.0375,897.7507 5064.7406,898.3914 L5066.0531,896.8132 C5065.0844,895.7976 5064.0688,895.2039 5062.8031,895.2039 C5060.6625,895.2039 5059.2094,896.7195 5059.2094,898.6414 C5059.2094,900.4382 5060.1313,901.3445 5061.225,902.0945 L5062.3188,902.8445 C5063.2563,903.4539 5063.7094,904.032 5063.7094,904.9695 C5063.7094,905.6414 5063.2406,906.0632 5062.5375,906.0632 C5061.8344,906.0632 5061.0844,905.5476 5060.4281,904.7195 L5058.8813,906.407 C5059.9125,907.5945 5061.2094,908.2351 5062.5375,908.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="5081.65" y="907.636">fromUnstructuredContext</text><line style="stroke:#181818;stroke-width:0.5;" x1="5024.5" x2="5277.5" y1="917.532" y2="917.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5031.5" y="930.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="5043.5" y="937.7719">isInlined bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5031.5" y="950.4398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="5043.5" y="958.0438">matchedKeys []</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="5146.5" y="958.0438">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="5176.5" y="958.0438">[string]</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="38" x="5224.5" y="958.0438">struct</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="5262.5" y="958.0438">{}</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5031.5" y="970.7118"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="5043.5" y="978.3157">parentPath []string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5031.5" y="990.9837"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="5043.5" y="998.5876">returnUnknownFields bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5031.5" y="1011.2556"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="5043.5" y="1018.8596">unknownFieldErrors []error</text></g><!--MD5=[5d47b507c1f1741ace2a0b2ab0a49ad0]
class runtime.internalGroupVersioner--><g id="elem_runtime.internalGroupVersioner"><rect codeLine="414" fill="#F1F1F1" height="40" id="runtime.internalGroupVersioner" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="187" x="2344.5" y="280.032"/><ellipse cx="2359.5" cy="296.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2359.6875,302.7351 C2361.9844,302.7351 2363.4375,301.1101 2363.4375,299.1101 C2363.4375,297.282 2362.6094,296.4382 2361.4688,295.6414 L2360.4531,294.9226 C2359.3281,294.1101 2358.9063,293.8132 2358.9063,292.9539 C2358.9063,292.2664 2359.3906,291.8601 2359.9688,291.8601 C2360.7031,291.8601 2361.1875,292.2507 2361.8906,292.8914 L2363.2031,291.3132 C2362.2344,290.2976 2361.2188,289.7039 2359.9531,289.7039 C2357.8125,289.7039 2356.3594,291.2195 2356.3594,293.1414 C2356.3594,294.9382 2357.2813,295.8445 2358.375,296.5945 L2359.4688,297.3445 C2360.4063,297.9539 2360.8594,298.532 2360.8594,299.4695 C2360.8594,300.1414 2360.3906,300.5632 2359.6875,300.5632 C2358.9844,300.5632 2358.2344,300.0476 2357.5781,299.2195 L2356.0313,300.907 C2357.0625,302.0945 2358.3594,302.7351 2359.6875,302.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="2373.5" y="302.136">internalGroupVersioner</text><line style="stroke:#181818;stroke-width:0.5;" x1="2345.5" x2="2530.5" y1="312.032" y2="312.032"/></g><!--MD5=[0ad7ab418b1bd323a42ed4a942ef2082]
class runtime.missingKindErr--><g id="elem_runtime.missingKindErr"><rect codeLine="419" fill="#F1F1F1" height="60.2719" id="runtime.missingKindErr" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="5313.5" y="926.032"/><ellipse cx="5328.5" cy="942.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5328.6875,948.7351 C5330.9844,948.7351 5332.4375,947.1101 5332.4375,945.1101 C5332.4375,943.282 5331.6094,942.4382 5330.4688,941.6414 L5329.4531,940.9226 C5328.3281,940.1101 5327.9063,939.8132 5327.9063,938.9539 C5327.9063,938.2664 5328.3906,937.8601 5328.9688,937.8601 C5329.7031,937.8601 5330.1875,938.2507 5330.8906,938.8914 L5332.2031,937.3132 C5331.2344,936.2976 5330.2188,935.7039 5328.9531,935.7039 C5326.8125,935.7039 5325.3594,937.2195 5325.3594,939.1414 C5325.3594,940.9382 5326.2813,941.8445 5327.375,942.5945 L5328.4688,943.3445 C5329.4063,943.9539 5329.8594,944.532 5329.8594,945.4695 C5329.8594,946.1414 5329.3906,946.5632 5328.6875,946.5632 C5327.9844,946.5632 5327.2344,946.0476 5326.5781,945.2195 L5325.0313,946.907 C5326.0625,948.0945 5327.3594,948.7351 5328.6875,948.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="5342.5" y="948.136">missingKindErr</text><line style="stroke:#181818;stroke-width:0.5;" x1="5314.5" x2="5445.5" y1="958.032" y2="958.032"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5321.5" y="970.6679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="5333.5" y="978.2719">data string</text></g><!--MD5=[b8799a16b4227ec3d3cf401596d19d86]
class runtime.missingVersionErr--><g id="elem_runtime.missingVersionErr"><rect codeLine="425" fill="#F1F1F1" height="60.2719" id="runtime.missingVersionErr" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="151" x="5481.5" y="926.032"/><ellipse cx="5496.5" cy="942.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5496.6875,948.7351 C5498.9844,948.7351 5500.4375,947.1101 5500.4375,945.1101 C5500.4375,943.282 5499.6094,942.4382 5498.4688,941.6414 L5497.4531,940.9226 C5496.3281,940.1101 5495.9063,939.8132 5495.9063,938.9539 C5495.9063,938.2664 5496.3906,937.8601 5496.9688,937.8601 C5497.7031,937.8601 5498.1875,938.2507 5498.8906,938.8914 L5500.2031,937.3132 C5499.2344,936.2976 5498.2188,935.7039 5496.9531,935.7039 C5494.8125,935.7039 5493.3594,937.2195 5493.3594,939.1414 C5493.3594,940.9382 5494.2813,941.8445 5495.375,942.5945 L5496.4688,943.3445 C5497.4063,943.9539 5497.8594,944.532 5497.8594,945.4695 C5497.8594,946.1414 5497.3906,946.5632 5496.6875,946.5632 C5495.9844,946.5632 5495.2344,946.0476 5494.5781,945.2195 L5493.0313,946.907 C5494.0625,948.0945 5495.3594,948.7351 5496.6875,948.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="5510.5" y="948.136">missingVersionErr</text><line style="stroke:#181818;stroke-width:0.5;" x1="5482.5" x2="5631.5" y1="958.032" y2="958.032"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5489.5" y="970.6679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="5501.5" y="978.2719">data string</text></g><!--MD5=[397bda2b5501bb181ee3490f28917176]
class runtime.multiGroupVersioner--><g id="elem_runtime.multiGroupVersioner"><rect codeLine="431" fill="#F1F1F1" height="100.8157" id="runtime.multiGroupVersioner" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="307" x="2566.5" y="249.532"/><ellipse cx="2646.75" cy="265.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2646.9375,272.2351 C2649.2344,272.2351 2650.6875,270.6101 2650.6875,268.6101 C2650.6875,266.782 2649.8594,265.9382 2648.7188,265.1414 L2647.7031,264.4226 C2646.5781,263.6101 2646.1563,263.3132 2646.1563,262.4539 C2646.1563,261.7664 2646.6406,261.3601 2647.2188,261.3601 C2647.9531,261.3601 2648.4375,261.7507 2649.1406,262.3914 L2650.4531,260.8132 C2649.4844,259.7976 2648.4688,259.2039 2647.2031,259.2039 C2645.0625,259.2039 2643.6094,260.7195 2643.6094,262.6414 C2643.6094,264.4382 2644.5313,265.3445 2645.625,266.0945 L2646.7188,266.8445 C2647.6563,267.4539 2648.1094,268.032 2648.1094,268.9695 C2648.1094,269.6414 2647.6406,270.0632 2646.9375,270.0632 C2646.2344,270.0632 2645.4844,269.5476 2644.8281,268.7195 L2643.2813,270.407 C2644.3125,271.5945 2645.6094,272.2351 2646.9375,272.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="2667.25" y="271.636">multiGroupVersioner</text><line style="stroke:#181818;stroke-width:0.5;" x1="2567.5" x2="2872.5" y1="281.532" y2="281.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2574.5" y="294.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="2586.5" y="301.7719">target schema.GroupVersion</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2574.5" y="314.4398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="281" x="2586.5" y="322.0438">acceptedGroupKinds []schema.GroupKind</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2574.5" y="334.7118"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="2586.5" y="342.3157">coerce bool</text></g><!--MD5=[b6c769dc3ff47a12c53f265f3827b677]
class runtime.notRegisteredErr--><g id="elem_runtime.notRegisteredErr"><rect codeLine="440" fill="#F1F1F1" height="121.0876" id="runtime.notRegisteredErr" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="229" x="5667.5" y="895.532"/><ellipse cx="5722.25" cy="911.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5722.4375,918.2351 C5724.7344,918.2351 5726.1875,916.6101 5726.1875,914.6101 C5726.1875,912.782 5725.3594,911.9382 5724.2188,911.1414 L5723.2031,910.4226 C5722.0781,909.6101 5721.6563,909.3132 5721.6563,908.4539 C5721.6563,907.7664 5722.1406,907.3601 5722.7188,907.3601 C5723.4531,907.3601 5723.9375,907.7507 5724.6406,908.3914 L5725.9531,906.8132 C5724.9844,905.7976 5723.9688,905.2039 5722.7031,905.2039 C5720.5625,905.2039 5719.1094,906.7195 5719.1094,908.6414 C5719.1094,910.4382 5720.0313,911.3445 5721.125,912.0945 L5722.2188,912.8445 C5723.1563,913.4539 5723.6094,914.032 5723.6094,914.9695 C5723.6094,915.6414 5723.1406,916.0632 5722.4375,916.0632 C5721.7344,916.0632 5720.9844,915.5476 5720.3281,914.7195 L5718.7813,916.407 C5719.8125,917.5945 5721.1094,918.2351 5722.4375,918.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="5742.75" y="917.636">notRegisteredErr</text><line style="stroke:#181818;stroke-width:0.5;" x1="5668.5" x2="5895.5" y1="927.532" y2="927.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5675.5" y="940.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="5687.5" y="947.7719">schemeName string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5675.5" y="960.4398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="5687.5" y="968.0438">gvk schema.GroupVersionKind</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5675.5" y="980.7118"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="5687.5" y="988.3157">target GroupVersioner</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5675.5" y="1000.9837"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="5687.5" y="1008.5876">t reflect.Type</text></g><!--MD5=[180db1882bc612becb2703f862d05342]
class runtime.parameterCodec--><g id="elem_runtime.parameterCodec"><rect codeLine="449" fill="#F1F1F1" height="121.0876" id="runtime.parameterCodec" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="198" x="299" y="239.532"/><ellipse cx="339.2" cy="255.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M339.3875,262.2351 C341.6844,262.2351 343.1375,260.6101 343.1375,258.6101 C343.1375,256.782 342.3094,255.9382 341.1688,255.1414 L340.1531,254.4226 C339.0281,253.6101 338.6063,253.3132 338.6063,252.4539 C338.6063,251.7664 339.0906,251.3601 339.6688,251.3601 C340.4031,251.3601 340.8875,251.7507 341.5906,252.3914 L342.9031,250.8132 C341.9344,249.7976 340.9188,249.2039 339.6531,249.2039 C337.5125,249.2039 336.0594,250.7195 336.0594,252.6414 C336.0594,254.4382 336.9813,255.3445 338.075,256.0945 L339.1688,256.8445 C340.1063,257.4539 340.5594,258.032 340.5594,258.9695 C340.5594,259.6414 340.0906,260.0632 339.3875,260.0632 C338.6844,260.0632 337.9344,259.5476 337.2781,258.7195 L335.7313,260.407 C336.7625,261.5945 338.0594,262.2351 339.3875,262.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="358.8" y="261.636">parameterCodec</text><line style="stroke:#181818;stroke-width:0.5;" x1="300" x2="496" y1="271.532" y2="271.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="307" y="284.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="319" y="291.7719">typer ObjectTyper</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="307" y="304.4398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="319" y="312.0438">convertor ObjectConvertor</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="307" y="324.7118"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="319" y="332.3157">creator ObjectCreater</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="307" y="344.9837"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="319" y="352.5876">defaulter ObjectDefaulter</text></g><!--MD5=[48b07776426d6e65a3618936b3e01e84]
class runtime.Codec--><g id="elem_runtime.Codec"><rect codeLine="459" fill="#F1F1F1" height="40" id="runtime.Codec" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="73" x="4672.5" y="1096.532"/><ellipse cx="4687.5" cy="1112.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4686.2344,1119.532 L4688.7813,1119.532 L4688.7813,1109.0164 L4691.4063,1109.0164 L4691.4063,1106.907 L4683.5938,1106.907 L4683.5938,1109.0164 L4686.2344,1109.0164 L4686.2344,1119.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="4701.5" y="1118.636">Codec</text><line style="stroke:#181818;stroke-width:0.5;" x1="4673.5" x2="4744.5" y1="1128.532" y2="1128.532"/></g><!--MD5=[cfce80e68006cdc9acd4036ec6cb2522]
class runtime.FieldLabelConversionFunc--><g id="elem_runtime.FieldLabelConversionFunc"><rect codeLine="461" fill="#F1F1F1" height="40" id="runtime.FieldLabelConversionFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="209" x="4780.5" y="1096.532"/><ellipse cx="4795.5" cy="1112.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4794.2344,1119.532 L4796.7813,1119.532 L4796.7813,1109.0164 L4799.4063,1109.0164 L4799.4063,1106.907 L4791.5938,1106.907 L4791.5938,1109.0164 L4794.2344,1109.0164 L4794.2344,1119.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="4809.5" y="1118.636">FieldLabelConversionFunc</text><line style="stroke:#181818;stroke-width:0.5;" x1="4781.5" x2="4988.5" y1="1128.532" y2="1128.532"/></g><!--MD5=[c9d32ddbce1a55501407368e850e4784]
class runtime.Identifier--><g id="elem_runtime.Identifier"><rect codeLine="463" fill="#F1F1F1" height="40" id="runtime.Identifier" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="93" x="5024.5" y="1096.532"/><ellipse cx="5039.5" cy="1112.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5038.2344,1119.532 L5040.7813,1119.532 L5040.7813,1109.0164 L5043.4063,1109.0164 L5043.4063,1106.907 L5035.5938,1106.907 L5035.5938,1109.0164 L5038.2344,1109.0164 L5038.2344,1119.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="5053.5" y="1118.636">Identifier</text><line style="stroke:#181818;stroke-width:0.5;" x1="5025.5" x2="5116.5" y1="1128.532" y2="1128.532"/></g><!--MD5=[6dd3c1c84d1ece554285261ac13e1396]
class runtime.KubeTypes--><g id="elem_runtime.KubeTypes"><rect codeLine="465" fill="#F1F1F1" height="40" id="runtime.KubeTypes" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="106" x="5153" y="1096.532"/><ellipse cx="5168" cy="1112.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5166.7344,1119.532 L5169.2813,1119.532 L5169.2813,1109.0164 L5171.9063,1109.0164 L5171.9063,1106.907 L5164.0938,1106.907 L5164.0938,1109.0164 L5166.7344,1109.0164 L5166.7344,1119.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="5182" y="1118.636">KubeTypes</text><line style="stroke:#181818;stroke-width:0.5;" x1="5154" x2="5258" y1="1128.532" y2="1128.532"/></g><!--MD5=[28ed959f1033e3fd81d8549f6f05ae39]
class runtime.fieldsCacheMap--><g id="elem_runtime.fieldsCacheMap"><rect codeLine="471" fill="#F1F1F1" height="40" id="runtime.fieldsCacheMap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="138" x="5294" y="1096.532"/><ellipse cx="5309" cy="1112.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5307.7344,1119.532 L5310.2813,1119.532 L5310.2813,1109.0164 L5312.9063,1109.0164 L5312.9063,1106.907 L5305.0938,1106.907 L5305.0938,1109.0164 L5307.7344,1109.0164 L5307.7344,1119.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="5323" y="1118.636">fieldsCacheMap</text><line style="stroke:#181818;stroke-width:0.5;" x1="5295" x2="5431" y1="1128.532" y2="1128.532"/></g><!--MD5=[2b3ffb13c786ad0913517cd6b6d24973]
class runtime.simpleNegotiatedSerializer--><g id="elem_runtime.simpleNegotiatedSerializer"><rect codeLine="473" fill="#F1F1F1" height="60.2719" id="runtime.simpleNegotiatedSerializer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="211" x="1572.5" y="270.032"/><ellipse cx="1587.5" cy="286.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1587.6875,292.7351 C1589.9844,292.7351 1591.4375,291.1101 1591.4375,289.1101 C1591.4375,287.282 1590.6094,286.4382 1589.4688,285.6414 L1588.4531,284.9226 C1587.3281,284.1101 1586.9063,283.8132 1586.9063,282.9539 C1586.9063,282.2664 1587.3906,281.8601 1587.9688,281.8601 C1588.7031,281.8601 1589.1875,282.2507 1589.8906,282.8914 L1591.2031,281.3132 C1590.2344,280.2976 1589.2188,279.7039 1587.9531,279.7039 C1585.8125,279.7039 1584.3594,281.2195 1584.3594,283.1414 C1584.3594,284.9382 1585.2813,285.8445 1586.375,286.5945 L1587.4688,287.3445 C1588.4063,287.9539 1588.8594,288.532 1588.8594,289.4695 C1588.8594,290.1414 1588.3906,290.5632 1587.6875,290.5632 C1586.9844,290.5632 1586.2344,290.0476 1585.5781,289.2195 L1584.0313,290.907 C1585.0625,292.0945 1586.3594,292.7351 1587.6875,292.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="1601.5" y="292.136">simpleNegotiatedSerializer</text><line style="stroke:#181818;stroke-width:0.5;" x1="1573.5" x2="1782.5" y1="302.032" y2="302.032"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1580.5" y="314.6679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="1592.5" y="322.2719">info SerializerInfo</text></g><!--MD5=[c482bda148f6bd1bcd24320b5fd4cc1f]
class runtime.strictDecodingError--><g id="elem_runtime.strictDecodingError"><rect codeLine="481" fill="#F1F1F1" height="60.2719" id="runtime.strictDecodingError" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="159" x="5467.5" y="1086.532"/><ellipse cx="5482.5" cy="1102.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5482.6875,1109.2351 C5484.9844,1109.2351 5486.4375,1107.6101 5486.4375,1105.6101 C5486.4375,1103.782 5485.6094,1102.9382 5484.4688,1102.1414 L5483.4531,1101.4226 C5482.3281,1100.6101 5481.9063,1100.3132 5481.9063,1099.4539 C5481.9063,1098.7664 5482.3906,1098.3601 5482.9688,1098.3601 C5483.7031,1098.3601 5484.1875,1098.7507 5484.8906,1099.3914 L5486.2031,1097.8132 C5485.2344,1096.7976 5484.2188,1096.2039 5482.9531,1096.2039 C5480.8125,1096.2039 5479.3594,1097.7195 5479.3594,1099.6414 C5479.3594,1101.4382 5480.2813,1102.3445 5481.375,1103.0945 L5482.4688,1103.8445 C5483.4063,1104.4539 5483.8594,1105.032 5483.8594,1105.9695 C5483.8594,1106.6414 5483.3906,1107.0632 5482.6875,1107.0632 C5481.9844,1107.0632 5481.2344,1106.5476 5480.5781,1105.7195 L5479.0313,1107.407 C5480.0625,1108.5945 5481.3594,1109.2351 5482.6875,1109.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="5496.5" y="1108.636">strictDecodingError</text><line style="stroke:#181818;stroke-width:0.5;" x1="5468.5" x2="5625.5" y1="1118.532" y2="1118.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5475.5" y="1131.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="5487.5" y="1138.7719">errors []error</text></g><!--MD5=[eaea59dc3fe8f5ee0bc3a65d43094b9c]
class runtime.structField--><g id="elem_runtime.structField"><rect codeLine="488" fill="#F1F1F1" height="80.5438" id="runtime.structField" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="4620.5" y="1206.532"/><ellipse cx="4669.25" cy="1222.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4669.4375,1229.2351 C4671.7344,1229.2351 4673.1875,1227.6101 4673.1875,1225.6101 C4673.1875,1223.782 4672.3594,1222.9382 4671.2188,1222.1414 L4670.2031,1221.4226 C4669.0781,1220.6101 4668.6563,1220.3132 4668.6563,1219.4539 C4668.6563,1218.7664 4669.1406,1218.3601 4669.7188,1218.3601 C4670.4531,1218.3601 4670.9375,1218.7507 4671.6406,1219.3914 L4672.9531,1217.8132 C4671.9844,1216.7976 4670.9688,1216.2039 4669.7031,1216.2039 C4667.5625,1216.2039 4666.1094,1217.7195 4666.1094,1219.6414 C4666.1094,1221.4382 4667.0313,1222.3445 4668.125,1223.0945 L4669.2188,1223.8445 C4670.1563,1224.4539 4670.6094,1225.032 4670.6094,1225.9695 C4670.6094,1226.6414 4670.1406,1227.0632 4669.4375,1227.0632 C4668.7344,1227.0632 4667.9844,1226.5476 4667.3281,1225.7195 L4665.7813,1227.407 C4666.8125,1228.5945 4668.1094,1229.2351 4669.4375,1229.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="4689.75" y="1228.636">structField</text><line style="stroke:#181818;stroke-width:0.5;" x1="4621.5" x2="4796.5" y1="1238.532" y2="1238.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4628.5" y="1251.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="4640.5" y="1258.7719">structType reflect.Type</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4628.5" y="1271.4398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="4640.5" y="1279.0438">field int</text></g><!--MD5=[9281b4e26693e58bdc1addc3f535ee40]
class runtime.unsafeObjectConvertor--><g id="elem_runtime.unsafeObjectConvertor"><rect codeLine="493" fill="#F1F1F1" height="40" id="runtime.unsafeObjectConvertor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="185" x="532.5" y="280.032"/><ellipse cx="547.5" cy="296.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M547.6875,302.7351 C549.9844,302.7351 551.4375,301.1101 551.4375,299.1101 C551.4375,297.282 550.6094,296.4382 549.4688,295.6414 L548.4531,294.9226 C547.3281,294.1101 546.9063,293.8132 546.9063,292.9539 C546.9063,292.2664 547.3906,291.8601 547.9688,291.8601 C548.7031,291.8601 549.1875,292.2507 549.8906,292.8914 L551.2031,291.3132 C550.2344,290.2976 549.2188,289.7039 547.9531,289.7039 C545.8125,289.7039 544.3594,291.2195 544.3594,293.1414 C544.3594,294.9382 545.2813,295.8445 546.375,296.5945 L547.4688,297.3445 C548.4063,297.9539 548.8594,298.532 548.8594,299.4695 C548.8594,300.1414 548.3906,300.5632 547.6875,300.5632 C546.9844,300.5632 546.2344,300.0476 545.5781,299.2195 L544.0313,300.907 C545.0625,302.0945 546.3594,302.7351 547.6875,302.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="561.5" y="302.136">unsafeObjectConvertor</text><line style="stroke:#181818;stroke-width:0.5;" x1="533.5" x2="716.5" y1="312.032" y2="312.032"/></g><!--MD5=[02cd01eda72bc4602fb64e213eb3164f]
class runtime.unstructuredConverter--><g id="elem_runtime.unstructuredConverter"><rect codeLine="497" fill="#F1F1F1" height="80.5438" id="runtime.unstructuredConverter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="249" x="14.5" y="259.532"/><ellipse cx="59.25" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M59.4375,282.2351 C61.7344,282.2351 63.1875,280.6101 63.1875,278.6101 C63.1875,276.782 62.3594,275.9382 61.2188,275.1414 L60.2031,274.4226 C59.0781,273.6101 58.6563,273.3132 58.6563,272.4539 C58.6563,271.7664 59.1406,271.3601 59.7188,271.3601 C60.4531,271.3601 60.9375,271.7507 61.6406,272.3914 L62.9531,270.8132 C61.9844,269.7976 60.9688,269.2039 59.7031,269.2039 C57.5625,269.2039 56.1094,270.7195 56.1094,272.6414 C56.1094,274.4382 57.0313,275.3445 58.125,276.0945 L59.2188,276.8445 C60.1563,277.4539 60.6094,278.032 60.6094,278.9695 C60.6094,279.6414 60.1406,280.0632 59.4375,280.0632 C58.7344,280.0632 57.9844,279.5476 57.3281,278.7195 L55.7813,280.407 C56.8125,281.5945 58.1094,282.2351 59.4375,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="79.75" y="281.636">unstructuredConverter</text><line style="stroke:#181818;stroke-width:0.5;" x1="15.5" x2="262.5" y1="291.532" y2="291.532"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="22.5" y="304.1679"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="34.5" y="311.7719">mismatchDetection bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="22.5" y="324.4398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="34.5" y="332.0438">comparison conversion.Equalities</text></g><!--MD5=[b0c2f17a2d7f276e9ed954b1fd170289]
class v1.APIGroup--><g id="elem_v1.APIGroup"><rect codeLine="540" fill="#F1F1F1" height="121.0876" id="v1.APIGroup" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="410" x="9209" y="239.532"/><ellipse cx="9378.25" cy="255.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9378.4375,262.2351 C9380.7344,262.2351 9382.1875,260.6101 9382.1875,258.6101 C9382.1875,256.782 9381.3594,255.9382 9380.2188,255.1414 L9379.2031,254.4226 C9378.0781,253.6101 9377.6563,253.3132 9377.6563,252.4539 C9377.6563,251.7664 9378.1406,251.3601 9378.7188,251.3601 C9379.4531,251.3601 9379.9375,251.7507 9380.6406,252.3914 L9381.9531,250.8132 C9380.9844,249.7976 9379.9688,249.2039 9378.7031,249.2039 C9376.5625,249.2039 9375.1094,250.7195 9375.1094,252.6414 C9375.1094,254.4382 9376.0313,255.3445 9377.125,256.0945 L9378.2188,256.8445 C9379.1563,257.4539 9379.6094,258.032 9379.6094,258.9695 C9379.6094,259.6414 9379.1406,260.0632 9378.4375,260.0632 C9377.7344,260.0632 9376.9844,259.5476 9376.3281,258.7195 L9374.7813,260.407 C9375.8125,261.5945 9377.1094,262.2351 9378.4375,262.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="9398.75" y="261.636">APIGroup</text><line style="stroke:#181818;stroke-width:0.5;" x1="9210" x2="9618" y1="271.532" y2="271.532"/><ellipse cx="9220" cy="287.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="9229" y="291.7719">Name string</text><ellipse cx="9220" cy="307.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="9229" y="312.0438">Versions []GroupVersionForDiscovery</text><ellipse cx="9220" cy="327.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="9229" y="332.3157">PreferredVersion GroupVersionForDiscovery</text><ellipse cx="9220" cy="347.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="384" x="9229" y="352.5876">ServerAddressByClientCIDRs []ServerAddressByClientCIDR</text></g><!--MD5=[1b1c227d3e4b02c4a5f54f1ffc4b7c80]
class v1.APIGroupList--><g id="elem_v1.APIGroupList"><rect codeLine="566" fill="#F1F1F1" height="60.2719" id="v1.APIGroupList" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="150" x="8391" y="270.032"/><ellipse cx="8419.95" cy="286.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8420.1375,292.7351 C8422.4344,292.7351 8423.8875,291.1101 8423.8875,289.1101 C8423.8875,287.282 8423.0594,286.4382 8421.9188,285.6414 L8420.9031,284.9226 C8419.7781,284.1101 8419.3563,283.8132 8419.3563,282.9539 C8419.3563,282.2664 8419.8406,281.8601 8420.4188,281.8601 C8421.1531,281.8601 8421.6375,282.2507 8422.3406,282.8914 L8423.6531,281.3132 C8422.6844,280.2976 8421.6688,279.7039 8420.4031,279.7039 C8418.2625,279.7039 8416.8094,281.2195 8416.8094,283.1414 C8416.8094,284.9382 8417.7313,285.8445 8418.825,286.5945 L8419.9188,287.3445 C8420.8563,287.9539 8421.3094,288.532 8421.3094,289.4695 C8421.3094,290.1414 8420.8406,290.5632 8420.1375,290.5632 C8419.4344,290.5632 8418.6844,290.0476 8418.0281,289.2195 L8416.4813,290.907 C8417.5125,292.0945 8418.8094,292.7351 8420.1375,292.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="8437.05" y="292.136">APIGroupList</text><line style="stroke:#181818;stroke-width:0.5;" x1="8392" x2="8540" y1="302.032" y2="302.032"/><ellipse cx="8402" cy="317.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="8411" y="322.2719">Groups []APIGroup</text></g><!--MD5=[ca8171a2cd5a2e28a496eb52037ec881]
class v1.APIResource--><g id="elem_v1.APIResource"><rect codeLine="589" fill="#F1F1F1" height="242.7191" id="v1.APIResource" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="200" x="8156" y="178.532"/><ellipse cx="8210.25" cy="194.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8210.4375,201.2351 C8212.7344,201.2351 8214.1875,199.6101 8214.1875,197.6101 C8214.1875,195.782 8213.3594,194.9382 8212.2188,194.1414 L8211.2031,193.4226 C8210.0781,192.6101 8209.6563,192.3132 8209.6563,191.4539 C8209.6563,190.7664 8210.1406,190.3601 8210.7188,190.3601 C8211.4531,190.3601 8211.9375,190.7507 8212.6406,191.3914 L8213.9531,189.8132 C8212.9844,188.7976 8211.9688,188.2039 8210.7031,188.2039 C8208.5625,188.2039 8207.1094,189.7195 8207.1094,191.6414 C8207.1094,193.4382 8208.0313,194.3445 8209.125,195.0945 L8210.2188,195.8445 C8211.1563,196.4539 8211.6094,197.032 8211.6094,197.9695 C8211.6094,198.6414 8211.1406,199.0632 8210.4375,199.0632 C8209.7344,199.0632 8208.9844,198.5476 8208.3281,197.7195 L8206.7813,199.407 C8207.8125,200.5945 8209.1094,201.2351 8210.4375,201.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="8230.75" y="200.636">APIResource</text><line style="stroke:#181818;stroke-width:0.5;" x1="8157" x2="8355" y1="210.532" y2="210.532"/><ellipse cx="8167" cy="226.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="8176" y="230.7719">Name string</text><ellipse cx="8167" cy="246.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="8176" y="251.0438">SingularName string</text><ellipse cx="8167" cy="266.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="8176" y="271.3157">Namespaced bool</text><ellipse cx="8167" cy="286.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="8176" y="291.5876">Group string</text><ellipse cx="8167" cy="307.2556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="8176" y="311.8596">Version string</text><ellipse cx="8167" cy="327.5275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="8176" y="332.1315">Kind string</text><ellipse cx="8167" cy="347.7994" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="8176" y="352.4034">Verbs Verbs</text><ellipse cx="8167" cy="368.0713" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="8176" y="372.6753">ShortNames []string</text><ellipse cx="8167" cy="388.3432" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="8176" y="392.9472">Categories []string</text><ellipse cx="8167" cy="408.6151" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="8176" y="413.2191">StorageVersionHash string</text></g><!--MD5=[b18981af4c811251bd81335e88acb070]
class v1.APIResourceList--><g id="elem_v1.APIResourceList"><rect codeLine="620" fill="#F1F1F1" height="80.5438" id="v1.APIResourceList" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="212" x="7909" y="259.532"/><ellipse cx="7957.25" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7957.4375,282.2351 C7959.7344,282.2351 7961.1875,280.6101 7961.1875,278.6101 C7961.1875,276.782 7960.3594,275.9382 7959.2188,275.1414 L7958.2031,274.4226 C7957.0781,273.6101 7956.6563,273.3132 7956.6563,272.4539 C7956.6563,271.7664 7957.1406,271.3601 7957.7188,271.3601 C7958.4531,271.3601 7958.9375,271.7507 7959.6406,272.3914 L7960.9531,270.8132 C7959.9844,269.7976 7958.9688,269.2039 7957.7031,269.2039 C7955.5625,269.2039 7954.1094,270.7195 7954.1094,272.6414 C7954.1094,274.4382 7955.0313,275.3445 7956.125,276.0945 L7957.2188,276.8445 C7958.1563,277.4539 7958.6094,278.032 7958.6094,278.9695 C7958.6094,279.6414 7958.1406,280.0632 7957.4375,280.0632 C7956.7344,280.0632 7955.9844,279.5476 7955.3281,278.7195 L7953.7813,280.407 C7954.8125,281.5945 7956.1094,282.2351 7957.4375,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="7977.75" y="281.636">APIResourceList</text><line style="stroke:#181818;stroke-width:0.5;" x1="7910" x2="8120" y1="291.532" y2="291.532"/><ellipse cx="7920" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="7929" y="311.7719">GroupVersion string</text><ellipse cx="7920" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="7929" y="332.0438">APIResources []APIResource</text></g><!--MD5=[60de531fccafb71365a0290d31377460]
class v1.APIVersions--><g id="elem_v1.APIVersions"><rect codeLine="644" fill="#F1F1F1" height="80.5438" id="v1.APIVersions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="410" x="15518" y="259.532"/><ellipse cx="15679.75" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M15679.9375,282.2351 C15682.2344,282.2351 15683.6875,280.6101 15683.6875,278.6101 C15683.6875,276.782 15682.8594,275.9382 15681.7188,275.1414 L15680.7031,274.4226 C15679.5781,273.6101 15679.1563,273.3132 15679.1563,272.4539 C15679.1563,271.7664 15679.6406,271.3601 15680.2188,271.3601 C15680.9531,271.3601 15681.4375,271.7507 15682.1406,272.3914 L15683.4531,270.8132 C15682.4844,269.7976 15681.4688,269.2039 15680.2031,269.2039 C15678.0625,269.2039 15676.6094,270.7195 15676.6094,272.6414 C15676.6094,274.4382 15677.5313,275.3445 15678.625,276.0945 L15679.7188,276.8445 C15680.6563,277.4539 15681.1094,278.032 15681.1094,278.9695 C15681.1094,279.6414 15680.6406,280.0632 15679.9375,280.0632 C15679.2344,280.0632 15678.4844,279.5476 15677.8281,278.7195 L15676.2813,280.407 C15677.3125,281.5945 15678.6094,282.2351 15679.9375,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="15700.25" y="281.636">APIVersions</text><line style="stroke:#181818;stroke-width:0.5;" x1="15519" x2="15927" y1="291.532" y2="291.532"/><ellipse cx="15529" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="15538" y="311.7719">Versions []string</text><ellipse cx="15529" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="384" x="15538" y="332.0438">ServerAddressByClientCIDRs []ServerAddressByClientCIDR</text></g><!--MD5=[8fcf8bb754259d7224654ebe3ef11376]
class v1.ApplyOptions--><g id="elem_v1.ApplyOptions"><rect codeLine="669" fill="#F1F1F1" height="100.8157" id="v1.ApplyOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="157" x="15325.5" y="249.532"/><ellipse cx="15356.25" cy="265.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M15356.4375,272.2351 C15358.7344,272.2351 15360.1875,270.6101 15360.1875,268.6101 C15360.1875,266.782 15359.3594,265.9382 15358.2188,265.1414 L15357.2031,264.4226 C15356.0781,263.6101 15355.6563,263.3132 15355.6563,262.4539 C15355.6563,261.7664 15356.1406,261.3601 15356.7188,261.3601 C15357.4531,261.3601 15357.9375,261.7507 15358.6406,262.3914 L15359.9531,260.8132 C15358.9844,259.7976 15357.9688,259.2039 15356.7031,259.2039 C15354.5625,259.2039 15353.1094,260.7195 15353.1094,262.6414 C15353.1094,264.4382 15354.0313,265.3445 15355.125,266.0945 L15356.2188,266.8445 C15357.1563,267.4539 15357.6094,268.032 15357.6094,268.9695 C15357.6094,269.6414 15357.1406,270.0632 15356.4375,270.0632 C15355.7344,270.0632 15354.9844,269.5476 15354.3281,268.7195 L15352.7813,270.407 C15353.8125,271.5945 15355.1094,272.2351 15356.4375,272.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="15373.75" y="271.636">ApplyOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="15326.5" x2="15481.5" y1="281.532" y2="281.532"/><ellipse cx="15336.5" cy="297.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="15345.5" y="301.7719">DryRun []string</text><ellipse cx="15336.5" cy="317.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="15345.5" y="322.0438">Force bool</text><ellipse cx="15336.5" cy="337.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="15345.5" y="342.3157">FieldManager string</text></g><!--MD5=[1879184bdb9be09e7308bf431e04e8c7]
class v1.Common--><g id="elem_v1.Common"><rect codeLine="694" fill="#F1F1F1" height="40" id="v1.Common" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="92" x="11180" y="280.032"/><ellipse cx="11195" cy="296.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11191.3594,302.532 L11198.1406,302.532 L11198.1406,300.4539 L11195.9844,300.4539 L11195.9844,292.0164 L11198.1406,292.0164 L11198.1406,289.907 L11191.3594,289.907 L11191.3594,292.0164 L11193.4531,292.0164 L11193.4531,300.4539 L11191.3594,300.4539 L11191.3594,302.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="60" x="11209" y="302.136">Common</text><line style="stroke:#181818;stroke-width:0.5;" x1="11181" x2="11271" y1="312.032" y2="312.032"/></g><!--MD5=[01ce38f65433ce47ffb06f7ef4f3c8de]
class v1.Condition--><g id="elem_v1.Condition"><rect codeLine="701" fill="#F1F1F1" height="161.6315" id="v1.Condition" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="200" x="16637" y="219.032"/><ellipse cx="16700.25" cy="235.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M16700.4375,241.7351 C16702.7344,241.7351 16704.1875,240.1101 16704.1875,238.1101 C16704.1875,236.282 16703.3594,235.4382 16702.2188,234.6414 L16701.2031,233.9226 C16700.0781,233.1101 16699.6563,232.8132 16699.6563,231.9539 C16699.6563,231.2664 16700.1406,230.8601 16700.7188,230.8601 C16701.4531,230.8601 16701.9375,231.2507 16702.6406,231.8914 L16703.9531,230.3132 C16702.9844,229.2976 16701.9688,228.7039 16700.7031,228.7039 C16698.5625,228.7039 16697.1094,230.2195 16697.1094,232.1414 C16697.1094,233.9382 16698.0313,234.8445 16699.125,235.5945 L16700.2188,236.3445 C16701.1563,236.9539 16701.6094,237.532 16701.6094,238.4695 C16701.6094,239.1414 16701.1406,239.5632 16700.4375,239.5632 C16699.7344,239.5632 16698.9844,239.0476 16698.3281,238.2195 L16696.7813,239.907 C16697.8125,241.0945 16699.1094,241.7351 16700.4375,241.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="16720.75" y="241.136">Condition</text><line style="stroke:#181818;stroke-width:0.5;" x1="16638" x2="16836" y1="251.032" y2="251.032"/><ellipse cx="16648" cy="266.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="16657" y="271.2719">Type string</text><ellipse cx="16648" cy="286.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="16657" y="291.5438">Status ConditionStatus</text><ellipse cx="16648" cy="307.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="16657" y="311.8157">ObservedGeneration int64</text><ellipse cx="16648" cy="327.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="16657" y="332.0876">LastTransitionTime Time</text><ellipse cx="16648" cy="347.7556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="16657" y="352.3596">Reason string</text><ellipse cx="16648" cy="368.0275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="16657" y="372.6315">Message string</text></g><!--MD5=[b344002c35114b96b5f721a16ddf542e]
class v1.CreateOptions--><g id="elem_v1.CreateOptions"><rect codeLine="728" fill="#F1F1F1" height="100.8157" id="v1.CreateOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="167" x="16434.5" y="249.532"/><ellipse cx="16467.5" cy="265.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M16467.6875,272.2351 C16469.9844,272.2351 16471.4375,270.6101 16471.4375,268.6101 C16471.4375,266.782 16470.6094,265.9382 16469.4688,265.1414 L16468.4531,264.4226 C16467.3281,263.6101 16466.9063,263.3132 16466.9063,262.4539 C16466.9063,261.7664 16467.3906,261.3601 16467.9688,261.3601 C16468.7031,261.3601 16469.1875,261.7507 16469.8906,262.3914 L16471.2031,260.8132 C16470.2344,259.7976 16469.2188,259.2039 16467.9531,259.2039 C16465.8125,259.2039 16464.3594,260.7195 16464.3594,262.6414 C16464.3594,264.4382 16465.2813,265.3445 16466.375,266.0945 L16467.4688,266.8445 C16468.4063,267.4539 16468.8594,268.032 16468.8594,268.9695 C16468.8594,269.6414 16468.3906,270.0632 16467.6875,270.0632 C16466.9844,270.0632 16466.2344,269.5476 16465.5781,268.7195 L16464.0313,270.407 C16465.0625,271.5945 16466.3594,272.2351 16467.6875,272.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="16485.5" y="271.636">CreateOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="16435.5" x2="16600.5" y1="281.532" y2="281.532"/><ellipse cx="16445.5" cy="297.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="16454.5" y="301.7719">DryRun []string</text><ellipse cx="16445.5" cy="317.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="16454.5" y="322.0438">FieldManager string</text><ellipse cx="16445.5" cy="337.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="16454.5" y="342.3157">FieldValidation string</text></g><!--MD5=[d14bfdbe8335d5870f925f6001e62c78]
class v1.DeleteOptions--><g id="elem_v1.DeleteOptions"><rect codeLine="753" fill="#F1F1F1" height="141.3596" id="v1.DeleteOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="293" x="16106.5" y="229.532"/><ellipse cx="16201.25" cy="245.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M16201.4375,252.2351 C16203.7344,252.2351 16205.1875,250.6101 16205.1875,248.6101 C16205.1875,246.782 16204.3594,245.9382 16203.2188,245.1414 L16202.2031,244.4226 C16201.0781,243.6101 16200.6563,243.3132 16200.6563,242.4539 C16200.6563,241.7664 16201.1406,241.3601 16201.7188,241.3601 C16202.4531,241.3601 16202.9375,241.7507 16203.6406,242.3914 L16204.9531,240.8132 C16203.9844,239.7976 16202.9688,239.2039 16201.7031,239.2039 C16199.5625,239.2039 16198.1094,240.7195 16198.1094,242.6414 C16198.1094,244.4382 16199.0313,245.3445 16200.125,246.0945 L16201.2188,246.8445 C16202.1563,247.4539 16202.6094,248.032 16202.6094,248.9695 C16202.6094,249.6414 16202.1406,250.0632 16201.4375,250.0632 C16200.7344,250.0632 16199.9844,249.5476 16199.3281,248.7195 L16197.7813,250.407 C16198.8125,251.5945 16200.1094,252.2351 16201.4375,252.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="16221.75" y="251.636">DeleteOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="16107.5" x2="16398.5" y1="261.532" y2="261.532"/><ellipse cx="16117.5" cy="277.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="16126.5" y="281.7719">GracePeriodSeconds *int64</text><ellipse cx="16117.5" cy="297.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="16126.5" y="302.0438">Preconditions *Preconditions</text><ellipse cx="16117.5" cy="317.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="16126.5" y="322.3157">OrphanDependents *bool</text><ellipse cx="16117.5" cy="337.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="16126.5" y="342.5876">PropagationPolicy *DeletionPropagation</text><ellipse cx="16117.5" cy="358.2556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="16126.5" y="362.8596">DryRun []string</text></g><!--MD5=[8625ffb930e6f02ce94f9dbb0ed14cac]
class v1.Duration--><g id="elem_v1.Duration"><rect codeLine="780" fill="#F1F1F1" height="40" id="v1.Duration" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="90" x="9990" y="280.032"/><ellipse cx="10005" cy="296.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10005.1875,302.7351 C10007.4844,302.7351 10008.9375,301.1101 10008.9375,299.1101 C10008.9375,297.282 10008.1094,296.4382 10006.9688,295.6414 L10005.9531,294.9226 C10004.8281,294.1101 10004.4063,293.8132 10004.4063,292.9539 C10004.4063,292.2664 10004.8906,291.8601 10005.4688,291.8601 C10006.2031,291.8601 10006.6875,292.2507 10007.3906,292.8914 L10008.7031,291.3132 C10007.7344,290.2976 10006.7188,289.7039 10005.4531,289.7039 C10003.3125,289.7039 10001.8594,291.2195 10001.8594,293.1414 C10001.8594,294.9382 10002.7813,295.8445 10003.875,296.5945 L10004.9688,297.3445 C10005.9063,297.9539 10006.3594,298.532 10006.3594,299.4695 C10006.3594,300.1414 10005.8906,300.5632 10005.1875,300.5632 C10004.4844,300.5632 10003.7344,300.0476 10003.0781,299.2195 L10001.5313,300.907 C10002.5625,302.0945 10003.8594,302.7351 10005.1875,302.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="10019" y="302.136">Duration</text><line style="stroke:#181818;stroke-width:0.5;" x1="9991" x2="10079" y1="312.032" y2="312.032"/></g><!--MD5=[25aaf5a06db06eaec17a7d9483505d92]
class v1.FieldsV1--><g id="elem_v1.FieldsV1"><rect codeLine="804" fill="#F1F1F1" height="60.2719" id="v1.FieldsV1" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="96" x="9859" y="270.032"/><ellipse cx="9877.6" cy="286.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9877.7875,292.7351 C9880.0844,292.7351 9881.5375,291.1101 9881.5375,289.1101 C9881.5375,287.282 9880.7094,286.4382 9879.5688,285.6414 L9878.5531,284.9226 C9877.4281,284.1101 9877.0063,283.8132 9877.0063,282.9539 C9877.0063,282.2664 9877.4906,281.8601 9878.0688,281.8601 C9878.8031,281.8601 9879.2875,282.2507 9879.9906,282.8914 L9881.3031,281.3132 C9880.3344,280.2976 9879.3188,279.7039 9878.0531,279.7039 C9875.9125,279.7039 9874.4594,281.2195 9874.4594,283.1414 C9874.4594,284.9382 9875.3813,285.8445 9876.475,286.5945 L9877.5688,287.3445 C9878.5063,287.9539 9878.9594,288.532 9878.9594,289.4695 C9878.9594,290.1414 9878.4906,290.5632 9877.7875,290.5632 C9877.0844,290.5632 9876.3344,290.0476 9875.6781,289.2195 L9874.1313,290.907 C9875.1625,292.0945 9876.4594,292.7351 9877.7875,292.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="9892.4" y="292.136">FieldsV1</text><line style="stroke:#181818;stroke-width:0.5;" x1="9860" x2="9954" y1="302.032" y2="302.032"/><ellipse cx="9870" cy="317.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="9879" y="322.2719">Raw []byte</text></g><!--MD5=[06994ffa32bab7454b9658cac00cbb9a]
class v1.GetOptions--><g id="elem_v1.GetOptions"><rect codeLine="828" fill="#F1F1F1" height="60.2719" id="v1.GetOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="14035.5" y="270.032"/><ellipse cx="14082.25" cy="286.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14082.4375,292.7351 C14084.7344,292.7351 14086.1875,291.1101 14086.1875,289.1101 C14086.1875,287.282 14085.3594,286.4382 14084.2188,285.6414 L14083.2031,284.9226 C14082.0781,284.1101 14081.6563,283.8132 14081.6563,282.9539 C14081.6563,282.2664 14082.1406,281.8601 14082.7188,281.8601 C14083.4531,281.8601 14083.9375,282.2507 14084.6406,282.8914 L14085.9531,281.3132 C14084.9844,280.2976 14083.9688,279.7039 14082.7031,279.7039 C14080.5625,279.7039 14079.1094,281.2195 14079.1094,283.1414 C14079.1094,284.9382 14080.0313,285.8445 14081.125,286.5945 L14082.2188,287.3445 C14083.1563,287.9539 14083.6094,288.532 14083.6094,289.4695 C14083.6094,290.1414 14083.1406,290.5632 14082.4375,290.5632 C14081.7344,290.5632 14080.9844,290.0476 14080.3281,289.2195 L14078.7813,290.907 C14079.8125,292.0945 14081.1094,292.7351 14082.4375,292.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="14102.75" y="292.136">GetOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="14036.5" x2="14211.5" y1="302.032" y2="302.032"/><ellipse cx="14046.5" cy="317.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="14055.5" y="322.2719">ResourceVersion string</text></g><!--MD5=[fa2a66b28c548eeaee4b70e50ed96299]
class v1.GroupKind--><g id="elem_v1.GroupKind"><rect codeLine="851" fill="#F1F1F1" height="80.5438" id="v1.GroupKind" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="108" x="15963" y="259.532"/><ellipse cx="15979.8" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M15979.9875,282.2351 C15982.2844,282.2351 15983.7375,280.6101 15983.7375,278.6101 C15983.7375,276.782 15982.9094,275.9382 15981.7688,275.1414 L15980.7531,274.4226 C15979.6281,273.6101 15979.2063,273.3132 15979.2063,272.4539 C15979.2063,271.7664 15979.6906,271.3601 15980.2688,271.3601 C15981.0031,271.3601 15981.4875,271.7507 15982.1906,272.3914 L15983.5031,270.8132 C15982.5344,269.7976 15981.5188,269.2039 15980.2531,269.2039 C15978.1125,269.2039 15976.6594,270.7195 15976.6594,272.6414 C15976.6594,274.4382 15977.5813,275.3445 15978.675,276.0945 L15979.7688,276.8445 C15980.7063,277.4539 15981.1594,278.032 15981.1594,278.9695 C15981.1594,279.6414 15980.6906,280.0632 15979.9875,280.0632 C15979.2844,280.0632 15978.5344,279.5476 15977.8781,278.7195 L15976.3313,280.407 C15977.3625,281.5945 15978.6594,282.2351 15979.9875,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="15994.2" y="281.636">GroupKind</text><line style="stroke:#181818;stroke-width:0.5;" x1="15964" x2="16070" y1="291.532" y2="291.532"/><ellipse cx="15974" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="15983" y="311.7719">Group string</text><ellipse cx="15974" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="15983" y="332.0438">Kind string</text></g><!--MD5=[aea36f975de98ab9d5c9eb46f631c26e]
class v1.GroupResource--><g id="elem_v1.GroupResource"><rect codeLine="873" fill="#F1F1F1" height="80.5438" id="v1.GroupResource" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="14248" y="259.532"/><ellipse cx="14263" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14263.1875,282.2351 C14265.4844,282.2351 14266.9375,280.6101 14266.9375,278.6101 C14266.9375,276.782 14266.1094,275.9382 14264.9688,275.1414 L14263.9531,274.4226 C14262.8281,273.6101 14262.4063,273.3132 14262.4063,272.4539 C14262.4063,271.7664 14262.8906,271.3601 14263.4688,271.3601 C14264.2031,271.3601 14264.6875,271.7507 14265.3906,272.3914 L14266.7031,270.8132 C14265.7344,269.7976 14264.7188,269.2039 14263.4531,269.2039 C14261.3125,269.2039 14259.8594,270.7195 14259.8594,272.6414 C14259.8594,274.4382 14260.7813,275.3445 14261.875,276.0945 L14262.9688,276.8445 C14263.9063,277.4539 14264.3594,278.032 14264.3594,278.9695 C14264.3594,279.6414 14263.8906,280.0632 14263.1875,280.0632 C14262.4844,280.0632 14261.7344,279.5476 14261.0781,278.7195 L14259.5313,280.407 C14260.5625,281.5945 14261.8594,282.2351 14263.1875,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="14277" y="281.636">GroupResource</text><line style="stroke:#181818;stroke-width:0.5;" x1="14249" x2="14381" y1="291.532" y2="291.532"/><ellipse cx="14259" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="14268" y="311.7719">Group string</text><ellipse cx="14259" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="14268" y="332.0438">Resource string</text></g><!--MD5=[f12d9b502a873654e4a0e4f2fc2af06b]
class v1.GroupVersion--><g id="elem_v1.GroupVersion"><rect codeLine="895" fill="#F1F1F1" height="80.5438" id="v1.GroupVersion" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="122" x="13457" y="259.532"/><ellipse cx="13472" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13472.1875,282.2351 C13474.4844,282.2351 13475.9375,280.6101 13475.9375,278.6101 C13475.9375,276.782 13475.1094,275.9382 13473.9688,275.1414 L13472.9531,274.4226 C13471.8281,273.6101 13471.4063,273.3132 13471.4063,272.4539 C13471.4063,271.7664 13471.8906,271.3601 13472.4688,271.3601 C13473.2031,271.3601 13473.6875,271.7507 13474.3906,272.3914 L13475.7031,270.8132 C13474.7344,269.7976 13473.7188,269.2039 13472.4531,269.2039 C13470.3125,269.2039 13468.8594,270.7195 13468.8594,272.6414 C13468.8594,274.4382 13469.7813,275.3445 13470.875,276.0945 L13471.9688,276.8445 C13472.9063,277.4539 13473.3594,278.032 13473.3594,278.9695 C13473.3594,279.6414 13472.8906,280.0632 13472.1875,280.0632 C13471.4844,280.0632 13470.7344,279.5476 13470.0781,278.7195 L13468.5313,280.407 C13469.5625,281.5945 13470.8594,282.2351 13472.1875,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="13486" y="281.636">GroupVersion</text><line style="stroke:#181818;stroke-width:0.5;" x1="13458" x2="13578" y1="291.532" y2="291.532"/><ellipse cx="13468" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="13477" y="311.7719">Group string</text><ellipse cx="13468" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="13477" y="332.0438">Version string</text></g><!--MD5=[18b221ddb8ef424c84219f8319e28f7c]
class v1.GroupVersionForDiscovery--><g id="elem_v1.GroupVersionForDiscovery"><rect codeLine="923" fill="#F1F1F1" height="80.5438" id="v1.GroupVersionForDiscovery" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="206" x="8765" y="259.532"/><ellipse cx="8780" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8780.1875,282.2351 C8782.4844,282.2351 8783.9375,280.6101 8783.9375,278.6101 C8783.9375,276.782 8783.1094,275.9382 8781.9688,275.1414 L8780.9531,274.4226 C8779.8281,273.6101 8779.4063,273.3132 8779.4063,272.4539 C8779.4063,271.7664 8779.8906,271.3601 8780.4688,271.3601 C8781.2031,271.3601 8781.6875,271.7507 8782.3906,272.3914 L8783.7031,270.8132 C8782.7344,269.7976 8781.7188,269.2039 8780.4531,269.2039 C8778.3125,269.2039 8776.8594,270.7195 8776.8594,272.6414 C8776.8594,274.4382 8777.7813,275.3445 8778.875,276.0945 L8779.9688,276.8445 C8780.9063,277.4539 8781.3594,278.032 8781.3594,278.9695 C8781.3594,279.6414 8780.8906,280.0632 8780.1875,280.0632 C8779.4844,280.0632 8778.7344,279.5476 8778.0781,278.7195 L8776.5313,280.407 C8777.5625,281.5945 8778.8594,282.2351 8780.1875,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="8794" y="281.636">GroupVersionForDiscovery</text><line style="stroke:#181818;stroke-width:0.5;" x1="8766" x2="8970" y1="291.532" y2="291.532"/><ellipse cx="8776" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="8785" y="311.7719">GroupVersion string</text><ellipse cx="8776" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="8785" y="332.0438">Version string</text></g><!--MD5=[8d417f822bd1c45a677fe7f28141b421]
class v1.GroupVersionKind--><g id="elem_v1.GroupVersionKind"><rect codeLine="946" fill="#F1F1F1" height="100.8157" id="v1.GroupVersionKind" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="8576.5" y="249.532"/><ellipse cx="8591.5" cy="265.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8591.6875,272.2351 C8593.9844,272.2351 8595.4375,270.6101 8595.4375,268.6101 C8595.4375,266.782 8594.6094,265.9382 8593.4688,265.1414 L8592.4531,264.4226 C8591.3281,263.6101 8590.9063,263.3132 8590.9063,262.4539 C8590.9063,261.7664 8591.3906,261.3601 8591.9688,261.3601 C8592.7031,261.3601 8593.1875,261.7507 8593.8906,262.3914 L8595.2031,260.8132 C8594.2344,259.7976 8593.2188,259.2039 8591.9531,259.2039 C8589.8125,259.2039 8588.3594,260.7195 8588.3594,262.6414 C8588.3594,264.4382 8589.2813,265.3445 8590.375,266.0945 L8591.4688,266.8445 C8592.4063,267.4539 8592.8594,268.032 8592.8594,268.9695 C8592.8594,269.6414 8592.3906,270.0632 8591.6875,270.0632 C8590.9844,270.0632 8590.2344,269.5476 8589.5781,268.7195 L8588.0313,270.407 C8589.0625,271.5945 8590.3594,272.2351 8591.6875,272.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="8605.5" y="271.636">GroupVersionKind</text><line style="stroke:#181818;stroke-width:0.5;" x1="8577.5" x2="8728.5" y1="281.532" y2="281.532"/><ellipse cx="8587.5" cy="297.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="8596.5" y="301.7719">Group string</text><ellipse cx="8587.5" cy="317.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="8596.5" y="322.0438">Version string</text><ellipse cx="8587.5" cy="337.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="8596.5" y="342.3157">Kind string</text></g><!--MD5=[f87a0cd88d76f8a93807799b76a1970d]
class v1.GroupVersionResource--><g id="elem_v1.GroupVersionResource"><rect codeLine="969" fill="#F1F1F1" height="100.8157" id="v1.GroupVersionResource" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="183" x="12544.5" y="249.532"/><ellipse cx="12559.5" cy="265.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12559.6875,272.2351 C12561.9844,272.2351 12563.4375,270.6101 12563.4375,268.6101 C12563.4375,266.782 12562.6094,265.9382 12561.4688,265.1414 L12560.4531,264.4226 C12559.3281,263.6101 12558.9063,263.3132 12558.9063,262.4539 C12558.9063,261.7664 12559.3906,261.3601 12559.9688,261.3601 C12560.7031,261.3601 12561.1875,261.7507 12561.8906,262.3914 L12563.2031,260.8132 C12562.2344,259.7976 12561.2188,259.2039 12559.9531,259.2039 C12557.8125,259.2039 12556.3594,260.7195 12556.3594,262.6414 C12556.3594,264.4382 12557.2813,265.3445 12558.375,266.0945 L12559.4688,266.8445 C12560.4063,267.4539 12560.8594,268.032 12560.8594,268.9695 C12560.8594,269.6414 12560.3906,270.0632 12559.6875,270.0632 C12558.9844,270.0632 12558.2344,269.5476 12557.5781,268.7195 L12556.0313,270.407 C12557.0625,271.5945 12558.3594,272.2351 12559.6875,272.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="12573.5" y="271.636">GroupVersionResource</text><line style="stroke:#181818;stroke-width:0.5;" x1="12545.5" x2="12726.5" y1="281.532" y2="281.532"/><ellipse cx="12555.5" cy="297.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="12564.5" y="301.7719">Group string</text><ellipse cx="12555.5" cy="317.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="12564.5" y="322.0438">Version string</text><ellipse cx="12555.5" cy="337.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="12564.5" y="342.3157">Resource string</text></g><!--MD5=[53edf419cba91d3364e260fdb1fc87d6]
class v1.InternalEvent--><g id="elem_v1.InternalEvent"><rect codeLine="1802" fill="#F1F1F1" height="40" id="v1.InternalEvent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="6601.5" y="280.032"/><ellipse cx="6616.5" cy="296.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6615.2344,303.032 L6617.7813,303.032 L6617.7813,292.5164 L6620.4063,292.5164 L6620.4063,290.407 L6612.5938,290.407 L6612.5938,292.5164 L6615.2344,292.5164 L6615.2344,303.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="6630.5" y="302.136">InternalEvent</text><line style="stroke:#181818;stroke-width:0.5;" x1="6602.5" x2="6721.5" y1="312.032" y2="312.032"/></g><!--MD5=[412553490f4d696605336c03485c68be]
class v1.LabelSelector--><g id="elem_v1.LabelSelector"><rect codeLine="999" fill="#F1F1F1" height="80.5438" id="v1.LabelSelector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="335" x="12174.5" y="259.532"/><ellipse cx="12292.75" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12292.9375,282.2351 C12295.2344,282.2351 12296.6875,280.6101 12296.6875,278.6101 C12296.6875,276.782 12295.8594,275.9382 12294.7188,275.1414 L12293.7031,274.4226 C12292.5781,273.6101 12292.1563,273.3132 12292.1563,272.4539 C12292.1563,271.7664 12292.6406,271.3601 12293.2188,271.3601 C12293.9531,271.3601 12294.4375,271.7507 12295.1406,272.3914 L12296.4531,270.8132 C12295.4844,269.7976 12294.4688,269.2039 12293.2031,269.2039 C12291.0625,269.2039 12289.6094,270.7195 12289.6094,272.6414 C12289.6094,274.4382 12290.5313,275.3445 12291.625,276.0945 L12292.7188,276.8445 C12293.6563,277.4539 12294.1094,278.032 12294.1094,278.9695 C12294.1094,279.6414 12293.6406,280.0632 12292.9375,280.0632 C12292.2344,280.0632 12291.4844,279.5476 12290.8281,278.7195 L12289.2813,280.407 C12290.3125,281.5945 12291.6094,282.2351 12292.9375,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="12313.25" y="281.636">LabelSelector</text><line style="stroke:#181818;stroke-width:0.5;" x1="12175.5" x2="12508.5" y1="291.532" y2="291.532"/><ellipse cx="12185.5" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="12194.5" y="311.7719">MatchLabels</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="12281.5" y="311.7719">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="12311.5" y="311.7719">[string]string</text><ellipse cx="12185.5" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="309" x="12194.5" y="332.0438">MatchExpressions []LabelSelectorRequirement</text></g><!--MD5=[8ea77b4009b99efd5361f0bfac18ca93]
class v1.LabelSelectorRequirement--><g id="elem_v1.LabelSelectorRequirement"><rect codeLine="1022" fill="#F1F1F1" height="100.8157" id="v1.LabelSelectorRequirement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="235" x="11904.5" y="249.532"/><ellipse cx="11931.2" cy="265.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11931.3875,272.2351 C11933.6844,272.2351 11935.1375,270.6101 11935.1375,268.6101 C11935.1375,266.782 11934.3094,265.9382 11933.1688,265.1414 L11932.1531,264.4226 C11931.0281,263.6101 11930.6063,263.3132 11930.6063,262.4539 C11930.6063,261.7664 11931.0906,261.3601 11931.6688,261.3601 C11932.4031,261.3601 11932.8875,261.7507 11933.5906,262.3914 L11934.9031,260.8132 C11933.9344,259.7976 11932.9188,259.2039 11931.6531,259.2039 C11929.5125,259.2039 11928.0594,260.7195 11928.0594,262.6414 C11928.0594,264.4382 11928.9813,265.3445 11930.075,266.0945 L11931.1688,266.8445 C11932.1063,267.4539 11932.5594,268.032 11932.5594,268.9695 C11932.5594,269.6414 11932.0906,270.0632 11931.3875,270.0632 C11930.6844,270.0632 11929.9344,269.5476 11929.2781,268.7195 L11927.7313,270.407 C11928.7625,271.5945 11930.0594,272.2351 11931.3875,272.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="11947.8" y="271.636">LabelSelectorRequirement</text><line style="stroke:#181818;stroke-width:0.5;" x1="11905.5" x2="12138.5" y1="281.532" y2="281.532"/><ellipse cx="11915.5" cy="297.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="11924.5" y="301.7719">Key string</text><ellipse cx="11915.5" cy="317.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="11924.5" y="322.0438">Operator LabelSelectorOperator</text><ellipse cx="11915.5" cy="337.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="11924.5" y="342.3157">Values []string</text></g><!--MD5=[388c7159529a4d9dc54825e204680b77]
class v1.List--><g id="elem_v1.List"><rect codeLine="1046" fill="#F1F1F1" height="60.2719" id="v1.List" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="226" x="11643" y="270.032"/><ellipse cx="11739.75" cy="286.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11739.9375,292.7351 C11742.2344,292.7351 11743.6875,291.1101 11743.6875,289.1101 C11743.6875,287.282 11742.8594,286.4382 11741.7188,285.6414 L11740.7031,284.9226 C11739.5781,284.1101 11739.1563,283.8132 11739.1563,282.9539 C11739.1563,282.2664 11739.6406,281.8601 11740.2188,281.8601 C11740.9531,281.8601 11741.4375,282.2507 11742.1406,282.8914 L11743.4531,281.3132 C11742.4844,280.2976 11741.4688,279.7039 11740.2031,279.7039 C11738.0625,279.7039 11736.6094,281.2195 11736.6094,283.1414 C11736.6094,284.9382 11737.5313,285.8445 11738.625,286.5945 L11739.7188,287.3445 C11740.6563,287.9539 11741.1094,288.532 11741.1094,289.4695 C11741.1094,290.1414 11740.6406,290.5632 11739.9375,290.5632 C11739.2344,290.5632 11738.4844,290.0476 11737.8281,289.2195 L11736.2813,290.907 C11737.3125,292.0945 11738.6094,292.7351 11739.9375,292.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="24" x="11760.25" y="292.136">List</text><line style="stroke:#181818;stroke-width:0.5;" x1="11644" x2="11868" y1="302.032" y2="302.032"/><ellipse cx="11654" cy="317.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="11663" y="322.2719">Items []runtime.RawExtension</text></g><!--MD5=[51dc5f0f6037e533cf3c0e06d7426130]
class v1.ListInterface--><g id="elem_v1.ListInterface"><rect codeLine="1069" fill="#F1F1F1" height="40" id="v1.ListInterface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="15175.5" y="280.032"/><ellipse cx="15190.5" cy="296.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M15186.8594,302.532 L15193.6406,302.532 L15193.6406,300.4539 L15191.4844,300.4539 L15191.4844,292.0164 L15193.6406,292.0164 L15193.6406,289.907 L15186.8594,289.907 L15186.8594,292.0164 L15188.9531,292.0164 L15188.9531,300.4539 L15186.8594,300.4539 L15186.8594,302.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="83" x="15204.5" y="302.136">ListInterface</text><line style="stroke:#181818;stroke-width:0.5;" x1="15176.5" x2="15289.5" y1="312.032" y2="312.032"/></g><!--MD5=[b5696a2cf2c46832ed574440c18adef7]
class v1.ListMeta--><g id="elem_v1.ListMeta"><rect codeLine="1080" fill="#F1F1F1" height="121.0876" id="v1.ListMeta" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="212" x="15127" y="593.032"/><ellipse cx="15200.75" cy="609.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M15200.9375,615.7351 C15203.2344,615.7351 15204.6875,614.1101 15204.6875,612.1101 C15204.6875,610.282 15203.8594,609.4382 15202.7188,608.6414 L15201.7031,607.9226 C15200.5781,607.1101 15200.1563,606.8132 15200.1563,605.9539 C15200.1563,605.2664 15200.6406,604.8601 15201.2188,604.8601 C15201.9531,604.8601 15202.4375,605.2507 15203.1406,605.8914 L15204.4531,604.3132 C15203.4844,603.2976 15202.4688,602.7039 15201.2031,602.7039 C15199.0625,602.7039 15197.6094,604.2195 15197.6094,606.1414 C15197.6094,607.9382 15198.5313,608.8445 15199.625,609.5945 L15200.7188,610.3445 C15201.6563,610.9539 15202.1094,611.532 15202.1094,612.4695 C15202.1094,613.1414 15201.6406,613.5632 15200.9375,613.5632 C15200.2344,613.5632 15199.4844,613.0476 15198.8281,612.2195 L15197.2813,613.907 C15198.3125,615.0945 15199.6094,615.7351 15200.9375,615.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="15221.25" y="615.136">ListMeta</text><line style="stroke:#181818;stroke-width:0.5;" x1="15128" x2="15338" y1="625.032" y2="625.032"/><ellipse cx="15138" cy="640.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="15147" y="645.2719">SelfLink string</text><ellipse cx="15138" cy="660.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="15147" y="665.5438">ResourceVersion string</text><ellipse cx="15138" cy="681.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="15147" y="685.8157">Continue string</text><ellipse cx="15138" cy="701.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="15147" y="706.0876">RemainingItemCount *int64</text></g><!--MD5=[0a550cd1e4734c0bfa5aadf6e099baed]
class v1.ListMetaAccessor--><g id="elem_v1.ListMetaAccessor"><rect codeLine="1114" fill="#F1F1F1" height="40" id="v1.ListMetaAccessor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="11307" y="280.032"/><ellipse cx="11322" cy="296.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11318.3594,302.532 L11325.1406,302.532 L11325.1406,300.4539 L11322.9844,300.4539 L11322.9844,292.0164 L11325.1406,292.0164 L11325.1406,289.907 L11318.3594,289.907 L11318.3594,292.0164 L11320.4531,292.0164 L11320.4531,300.4539 L11318.3594,300.4539 L11318.3594,302.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114" x="11336" y="302.136">ListMetaAccessor</text><line style="stroke:#181818;stroke-width:0.5;" x1="11308" x2="11452" y1="312.032" y2="312.032"/></g><!--MD5=[697cffb73fb9ae85dac1ca069d3fdcd9]
class v1.ListOptions--><g id="elem_v1.ListOptions"><rect codeLine="1118" fill="#F1F1F1" height="222.4472" id="v1.ListOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="329" x="13092.5" y="189.032"/><ellipse cx="13214.75" cy="205.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13214.9375,211.7351 C13217.2344,211.7351 13218.6875,210.1101 13218.6875,208.1101 C13218.6875,206.282 13217.8594,205.4382 13216.7188,204.6414 L13215.7031,203.9226 C13214.5781,203.1101 13214.1563,202.8132 13214.1563,201.9539 C13214.1563,201.2664 13214.6406,200.8601 13215.2188,200.8601 C13215.9531,200.8601 13216.4375,201.2507 13217.1406,201.8914 L13218.4531,200.3132 C13217.4844,199.2976 13216.4688,198.7039 13215.2031,198.7039 C13213.0625,198.7039 13211.6094,200.2195 13211.6094,202.1414 C13211.6094,203.9382 13212.5313,204.8445 13213.625,205.5945 L13214.7188,206.3445 C13215.6563,206.9539 13216.1094,207.532 13216.1094,208.4695 C13216.1094,209.1414 13215.6406,209.5632 13214.9375,209.5632 C13214.2344,209.5632 13213.4844,209.0476 13212.8281,208.2195 L13211.2813,209.907 C13212.3125,211.0945 13213.6094,211.7351 13214.9375,211.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="13235.25" y="211.136">ListOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="13093.5" x2="13420.5" y1="221.032" y2="221.032"/><ellipse cx="13103.5" cy="236.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="13112.5" y="241.2719">LabelSelector string</text><ellipse cx="13103.5" cy="256.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="13112.5" y="261.5438">FieldSelector string</text><ellipse cx="13103.5" cy="277.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="13112.5" y="281.8157">Watch bool</text><ellipse cx="13103.5" cy="297.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="13112.5" y="302.0876">AllowWatchBookmarks bool</text><ellipse cx="13103.5" cy="317.7556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="13112.5" y="322.3596">ResourceVersion string</text><ellipse cx="13103.5" cy="338.0275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="303" x="13112.5" y="342.6315">ResourceVersionMatch ResourceVersionMatch</text><ellipse cx="13103.5" cy="358.2994" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="13112.5" y="362.9034">TimeoutSeconds *int64</text><ellipse cx="13103.5" cy="378.5713" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="13112.5" y="383.1753">Limit int64</text><ellipse cx="13103.5" cy="398.8432" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="13112.5" y="403.4472">Continue string</text></g><!--MD5=[e3919be471e578f8294705791120fcab]
class v1.ManagedFieldsEntry--><g id="elem_v1.ManagedFieldsEntry"><rect codeLine="1149" fill="#F1F1F1" height="181.9034" id="v1.ManagedFieldsEntry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="294" x="12763" y="209.032"/><ellipse cx="12838.25" cy="225.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12838.4375,231.7351 C12840.7344,231.7351 12842.1875,230.1101 12842.1875,228.1101 C12842.1875,226.282 12841.3594,225.4382 12840.2188,224.6414 L12839.2031,223.9226 C12838.0781,223.1101 12837.6563,222.8132 12837.6563,221.9539 C12837.6563,221.2664 12838.1406,220.8601 12838.7188,220.8601 C12839.4531,220.8601 12839.9375,221.2507 12840.6406,221.8914 L12841.9531,220.3132 C12840.9844,219.2976 12839.9688,218.7039 12838.7031,218.7039 C12836.5625,218.7039 12835.1094,220.2195 12835.1094,222.1414 C12835.1094,223.9382 12836.0313,224.8445 12837.125,225.5945 L12838.2188,226.3445 C12839.1563,226.9539 12839.6094,227.532 12839.6094,228.4695 C12839.6094,229.1414 12839.1406,229.5632 12838.4375,229.5632 C12837.7344,229.5632 12836.9844,229.0476 12836.3281,228.2195 L12834.7813,229.907 C12835.8125,231.0945 12837.1094,231.7351 12838.4375,231.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="12858.75" y="231.136">ManagedFieldsEntry</text><line style="stroke:#181818;stroke-width:0.5;" x1="12764" x2="13056" y1="241.032" y2="241.032"/><ellipse cx="12774" cy="256.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="12783" y="261.2719">Manager string</text><ellipse cx="12774" cy="276.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="12783" y="281.5438">Operation ManagedFieldsOperationType</text><ellipse cx="12774" cy="297.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="12783" y="301.8157">APIVersion string</text><ellipse cx="12774" cy="317.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="12783" y="322.0876">Time *Time</text><ellipse cx="12774" cy="337.7556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="12783" y="342.3596">FieldsType string</text><ellipse cx="12774" cy="358.0275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="12783" y="362.6315">FieldsV1 *FieldsV1</text><ellipse cx="12774" cy="378.2994" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="12783" y="382.9034">Subresource string</text></g><!--MD5=[dc2cb7357920fea0098c69b097794d3f]
class v1.MicroTime--><g id="elem_v1.MicroTime"><rect codeLine="1177" fill="#F1F1F1" height="40" id="v1.MicroTime" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="100" x="14867" y="280.032"/><ellipse cx="14882" cy="296.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14882.1875,302.7351 C14884.4844,302.7351 14885.9375,301.1101 14885.9375,299.1101 C14885.9375,297.282 14885.1094,296.4382 14883.9688,295.6414 L14882.9531,294.9226 C14881.8281,294.1101 14881.4063,293.8132 14881.4063,292.9539 C14881.4063,292.2664 14881.8906,291.8601 14882.4688,291.8601 C14883.2031,291.8601 14883.6875,292.2507 14884.3906,292.8914 L14885.7031,291.3132 C14884.7344,290.2976 14883.7188,289.7039 14882.4531,289.7039 C14880.3125,289.7039 14878.8594,291.2195 14878.8594,293.1414 C14878.8594,294.9382 14879.7813,295.8445 14880.875,296.5945 L14881.9688,297.3445 C14882.9063,297.9539 14883.3594,298.532 14883.3594,299.4695 C14883.3594,300.1414 14882.8906,300.5632 14882.1875,300.5632 C14881.4844,300.5632 14880.7344,300.0476 14880.0781,299.2195 L14878.5313,300.907 C14879.5625,302.0945 14880.8594,302.7351 14882.1875,302.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="14896" y="302.136">MicroTime</text><line style="stroke:#181818;stroke-width:0.5;" x1="14868" x2="14966" y1="312.032" y2="312.032"/></g><!--MD5=[96ce20a9cf489ca171f7a90fe5f01dba]
class v1.Object--><g id="elem_v1.Object"><rect codeLine="1208" fill="#F1F1F1" height="40" id="v1.Object" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="75" x="10484.5" y="280.032"/><ellipse cx="10499.5" cy="296.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10495.8594,302.532 L10502.6406,302.532 L10502.6406,300.4539 L10500.4844,300.4539 L10500.4844,292.0164 L10502.6406,292.0164 L10502.6406,289.907 L10495.8594,289.907 L10495.8594,292.0164 L10497.9531,292.0164 L10497.9531,300.4539 L10495.8594,300.4539 L10495.8594,302.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="43" x="10513.5" y="302.136">Object</text><line style="stroke:#181818;stroke-width:0.5;" x1="10485.5" x2="10558.5" y1="312.032" y2="312.032"/></g><!--MD5=[124d468aa21dfcf6b30392591926ae1b]
class v1.ObjectMeta--><g id="elem_v1.ObjectMeta"><rect codeLine="1241" fill="#F1F1F1" height="344.0787" id="v1.ObjectMeta" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="275" x="11088.5" y="481.532"/><ellipse cx="11184.25" cy="497.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11184.4375,504.2351 C11186.7344,504.2351 11188.1875,502.6101 11188.1875,500.6101 C11188.1875,498.782 11187.3594,497.9382 11186.2188,497.1414 L11185.2031,496.4226 C11184.0781,495.6101 11183.6563,495.3132 11183.6563,494.4539 C11183.6563,493.7664 11184.1406,493.3601 11184.7188,493.3601 C11185.4531,493.3601 11185.9375,493.7507 11186.6406,494.3914 L11187.9531,492.8132 C11186.9844,491.7976 11185.9688,491.2039 11184.7031,491.2039 C11182.5625,491.2039 11181.1094,492.7195 11181.1094,494.6414 C11181.1094,496.4382 11182.0313,497.3445 11183.125,498.0945 L11184.2188,498.8445 C11185.1563,499.4539 11185.6094,500.032 11185.6094,500.9695 C11185.6094,501.6414 11185.1406,502.0632 11184.4375,502.0632 C11183.7344,502.0632 11182.9844,501.5476 11182.3281,500.7195 L11180.7813,502.407 C11181.8125,503.5945 11183.1094,504.2351 11184.4375,504.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="11204.75" y="503.636">ObjectMeta</text><line style="stroke:#181818;stroke-width:0.5;" x1="11089.5" x2="11362.5" y1="513.532" y2="513.532"/><ellipse cx="11099.5" cy="529.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="11108.5" y="533.7719">Name string</text><ellipse cx="11099.5" cy="549.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="11108.5" y="554.0438">GenerateName string</text><ellipse cx="11099.5" cy="569.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="11108.5" y="574.3157">Namespace string</text><ellipse cx="11099.5" cy="589.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="11108.5" y="594.5876">SelfLink string</text><ellipse cx="11099.5" cy="610.2556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="11108.5" y="614.8596">UID types.UID</text><ellipse cx="11099.5" cy="630.5275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="11108.5" y="635.1315">ResourceVersion string</text><ellipse cx="11099.5" cy="650.7994" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="11108.5" y="655.4034">Generation int64</text><ellipse cx="11099.5" cy="671.0713" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="11108.5" y="675.6753">CreationTimestamp Time</text><ellipse cx="11099.5" cy="691.3432" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="11108.5" y="695.9472">DeletionTimestamp *Time</text><ellipse cx="11099.5" cy="711.6151" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="11108.5" y="716.2191">DeletionGracePeriodSeconds *int64</text><ellipse cx="11099.5" cy="731.8871" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="11108.5" y="736.491">Labels</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="11155.5" y="736.491">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="11185.5" y="736.491">[string]string</text><ellipse cx="11099.5" cy="752.159" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="11108.5" y="756.7629">Annotations</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="11192.5" y="756.7629">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="11222.5" y="756.7629">[string]string</text><ellipse cx="11099.5" cy="772.4309" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="11108.5" y="777.0349">OwnerReferences []OwnerReference</text><ellipse cx="11099.5" cy="792.7028" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="11108.5" y="797.3068">Finalizers []string</text><ellipse cx="11099.5" cy="812.9747" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="11108.5" y="817.5787">ManagedFields []ManagedFieldsEntry</text></g><!--MD5=[7a92b58df60425295d0dca65ec9fcdcd]
class v1.ObjectMetaAccessor--><g id="elem_v1.ObjectMetaAccessor"><rect codeLine="1308" fill="#F1F1F1" height="40" id="v1.ObjectMetaAccessor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="165" x="10284.5" y="280.032"/><ellipse cx="10299.5" cy="296.032" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10295.8594,302.532 L10302.6406,302.532 L10302.6406,300.4539 L10300.4844,300.4539 L10300.4844,292.0164 L10302.6406,292.0164 L10302.6406,289.907 L10295.8594,289.907 L10295.8594,292.0164 L10297.9531,292.0164 L10297.9531,300.4539 L10295.8594,300.4539 L10295.8594,302.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="10313.5" y="302.136">ObjectMetaAccessor</text><line style="stroke:#181818;stroke-width:0.5;" x1="10285.5" x2="10448.5" y1="312.032" y2="312.032"/></g><!--MD5=[2d25b3e835a84d34119f68eb51712c8f]
class v1.OwnerReference--><g id="elem_v1.OwnerReference"><rect codeLine="1312" fill="#F1F1F1" height="161.6315" id="v1.OwnerReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="200" x="14632" y="219.032"/><ellipse cx="14673.1" cy="235.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14673.2875,241.7351 C14675.5844,241.7351 14677.0375,240.1101 14677.0375,238.1101 C14677.0375,236.282 14676.2094,235.4382 14675.0688,234.6414 L14674.0531,233.9226 C14672.9281,233.1101 14672.5063,232.8132 14672.5063,231.9539 C14672.5063,231.2664 14672.9906,230.8601 14673.5688,230.8601 C14674.3031,230.8601 14674.7875,231.2507 14675.4906,231.8914 L14676.8031,230.3132 C14675.8344,229.2976 14674.8188,228.7039 14673.5531,228.7039 C14671.4125,228.7039 14669.9594,230.2195 14669.9594,232.1414 C14669.9594,233.9382 14670.8813,234.8445 14671.975,235.5945 L14673.0688,236.3445 C14674.0063,236.9539 14674.4594,237.532 14674.4594,238.4695 C14674.4594,239.1414 14673.9906,239.5632 14673.2875,239.5632 C14672.5844,239.5632 14671.8344,239.0476 14671.1781,238.2195 L14669.6313,239.907 C14670.6625,241.0945 14671.9594,241.7351 14673.2875,241.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="14692.9" y="241.136">OwnerReference</text><line style="stroke:#181818;stroke-width:0.5;" x1="14633" x2="14831" y1="251.032" y2="251.032"/><ellipse cx="14643" cy="266.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="14652" y="271.2719">APIVersion string</text><ellipse cx="14643" cy="286.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="14652" y="291.5438">Kind string</text><ellipse cx="14643" cy="307.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="14652" y="311.8157">Name string</text><ellipse cx="14643" cy="327.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="14652" y="332.0876">UID types.UID</text><ellipse cx="14643" cy="347.7556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="14652" y="352.3596">Controller *bool</text><ellipse cx="14643" cy="368.0275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="14652" y="372.6315">BlockOwnerDeletion *bool</text></g><!--MD5=[79fa7f2eabe0a916b1422afad66fc925]
class v1.PartialObjectMetadata--><g id="elem_v1.PartialObjectMetadata"><rect codeLine="1339" fill="#F1F1F1" height="40" id="v1.PartialObjectMetadata" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="180" x="14417" y="280.032"/><ellipse cx="14432" cy="296.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M14432.1875,302.7351 C14434.4844,302.7351 14435.9375,301.1101 14435.9375,299.1101 C14435.9375,297.282 14435.1094,296.4382 14433.9688,295.6414 L14432.9531,294.9226 C14431.8281,294.1101 14431.4063,293.8132 14431.4063,292.9539 C14431.4063,292.2664 14431.8906,291.8601 14432.4688,291.8601 C14433.2031,291.8601 14433.6875,292.2507 14434.3906,292.8914 L14435.7031,291.3132 C14434.7344,290.2976 14433.7188,289.7039 14432.4531,289.7039 C14430.3125,289.7039 14428.8594,291.2195 14428.8594,293.1414 C14428.8594,294.9382 14429.7813,295.8445 14430.875,296.5945 L14431.9688,297.3445 C14432.9063,297.9539 14433.3594,298.532 14433.3594,299.4695 C14433.3594,300.1414 14432.8906,300.5632 14432.1875,300.5632 C14431.4844,300.5632 14430.7344,300.0476 14430.0781,299.2195 L14428.5313,300.907 C14429.5625,302.0945 14430.8594,302.7351 14432.1875,302.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="14446" y="302.136">PartialObjectMetadata</text><line style="stroke:#181818;stroke-width:0.5;" x1="14418" x2="14596" y1="312.032" y2="312.032"/></g><!--MD5=[1e3dadac2fc4f368e12f768f857bc92a]
class v1.PartialObjectMetadataList--><g id="elem_v1.PartialObjectMetadataList"><rect codeLine="1360" fill="#F1F1F1" height="60.2719" id="v1.PartialObjectMetadataList" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="224" x="10700" y="270.032"/><ellipse cx="10724" cy="286.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10724.1875,292.7351 C10726.4844,292.7351 10727.9375,291.1101 10727.9375,289.1101 C10727.9375,287.282 10727.1094,286.4382 10725.9688,285.6414 L10724.9531,284.9226 C10723.8281,284.1101 10723.4063,283.8132 10723.4063,282.9539 C10723.4063,282.2664 10723.8906,281.8601 10724.4688,281.8601 C10725.2031,281.8601 10725.6875,282.2507 10726.3906,282.8914 L10727.7031,281.3132 C10726.7344,280.2976 10725.7188,279.7039 10724.4531,279.7039 C10722.3125,279.7039 10720.8594,281.2195 10720.8594,283.1414 C10720.8594,284.9382 10721.7813,285.8445 10722.875,286.5945 L10723.9688,287.3445 C10724.9063,287.9539 10725.3594,288.532 10725.3594,289.4695 C10725.3594,290.1414 10724.8906,290.5632 10724.1875,290.5632 C10723.4844,290.5632 10722.7344,290.0476 10722.0781,289.2195 L10720.5313,290.907 C10721.5625,292.0945 10722.8594,292.7351 10724.1875,292.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="10740" y="292.136">PartialObjectMetadataList</text><line style="stroke:#181818;stroke-width:0.5;" x1="10701" x2="10923" y1="302.032" y2="302.032"/><ellipse cx="10711" cy="317.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="10720" y="322.2719">Items []PartialObjectMetadata</text></g><!--MD5=[f9fd6a5601a7052fd2e0129f53592400]
class v1.Patch--><g id="elem_v1.Patch"><rect codeLine="1383" fill="#F1F1F1" height="40" id="v1.Patch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="70" x="10595" y="280.032"/><ellipse cx="10610" cy="296.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10610.1875,302.7351 C10612.4844,302.7351 10613.9375,301.1101 10613.9375,299.1101 C10613.9375,297.282 10613.1094,296.4382 10611.9688,295.6414 L10610.9531,294.9226 C10609.8281,294.1101 10609.4063,293.8132 10609.4063,292.9539 C10609.4063,292.2664 10609.8906,291.8601 10610.4688,291.8601 C10611.2031,291.8601 10611.6875,292.2507 10612.3906,292.8914 L10613.7031,291.3132 C10612.7344,290.2976 10611.7188,289.7039 10610.4531,289.7039 C10608.3125,289.7039 10606.8594,291.2195 10606.8594,293.1414 C10606.8594,294.9382 10607.7813,295.8445 10608.875,296.5945 L10609.9688,297.3445 C10610.9063,297.9539 10611.3594,298.532 10611.3594,299.4695 C10611.3594,300.1414 10610.8906,300.5632 10610.1875,300.5632 C10609.4844,300.5632 10608.7344,300.0476 10608.0781,299.2195 L10606.5313,300.907 C10607.5625,302.0945 10608.8594,302.7351 10610.1875,302.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="38" x="10624" y="302.136">Patch</text><line style="stroke:#181818;stroke-width:0.5;" x1="10596" x2="10664" y1="312.032" y2="312.032"/></g><!--MD5=[ddca62756c00380e4a2a470041572e15]
class v1.PatchOptions--><g id="elem_v1.PatchOptions"><rect codeLine="1403" fill="#F1F1F1" height="121.0876" id="v1.PatchOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="167" x="13833.5" y="239.532"/><ellipse cx="13868.75" cy="255.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13868.9375,262.2351 C13871.2344,262.2351 13872.6875,260.6101 13872.6875,258.6101 C13872.6875,256.782 13871.8594,255.9382 13870.7188,255.1414 L13869.7031,254.4226 C13868.5781,253.6101 13868.1563,253.3132 13868.1563,252.4539 C13868.1563,251.7664 13868.6406,251.3601 13869.2188,251.3601 C13869.9531,251.3601 13870.4375,251.7507 13871.1406,252.3914 L13872.4531,250.8132 C13871.4844,249.7976 13870.4688,249.2039 13869.2031,249.2039 C13867.0625,249.2039 13865.6094,250.7195 13865.6094,252.6414 C13865.6094,254.4382 13866.5313,255.3445 13867.625,256.0945 L13868.7188,256.8445 C13869.6563,257.4539 13870.1094,258.032 13870.1094,258.9695 C13870.1094,259.6414 13869.6406,260.0632 13868.9375,260.0632 C13868.2344,260.0632 13867.4844,259.5476 13866.8281,258.7195 L13865.2813,260.407 C13866.3125,261.5945 13867.6094,262.2351 13868.9375,262.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="13887.25" y="261.636">PatchOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="13834.5" x2="13999.5" y1="271.532" y2="271.532"/><ellipse cx="13844.5" cy="287.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="13853.5" y="291.7719">DryRun []string</text><ellipse cx="13844.5" cy="307.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="13853.5" y="312.0438">Force *bool</text><ellipse cx="13844.5" cy="327.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="13853.5" y="332.3157">FieldManager string</text><ellipse cx="13844.5" cy="347.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="13853.5" y="352.5876">FieldValidation string</text></g><!--MD5=[14ae47e2b572b938dad238575281c646]
class v1.Preconditions--><g id="elem_v1.Preconditions"><rect codeLine="1429" fill="#F1F1F1" height="80.5438" id="v1.Preconditions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="184" x="13614" y="259.532"/><ellipse cx="13656" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M13656.1875,282.2351 C13658.4844,282.2351 13659.9375,280.6101 13659.9375,278.6101 C13659.9375,276.782 13659.1094,275.9382 13657.9688,275.1414 L13656.9531,274.4226 C13655.8281,273.6101 13655.4063,273.3132 13655.4063,272.4539 C13655.4063,271.7664 13655.8906,271.3601 13656.4688,271.3601 C13657.2031,271.3601 13657.6875,271.7507 13658.3906,272.3914 L13659.7031,270.8132 C13658.7344,269.7976 13657.7188,269.2039 13656.4531,269.2039 C13654.3125,269.2039 13652.8594,270.7195 13652.8594,272.6414 C13652.8594,274.4382 13653.7813,275.3445 13654.875,276.0945 L13655.9688,276.8445 C13656.9063,277.4539 13657.3594,278.032 13657.3594,278.9695 C13657.3594,279.6414 13656.8906,280.0632 13656.1875,280.0632 C13655.4844,280.0632 13654.7344,279.5476 13654.0781,278.7195 L13652.5313,280.407 C13653.5625,281.5945 13654.8594,282.2351 13656.1875,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="13676" y="281.636">Preconditions</text><line style="stroke:#181818;stroke-width:0.5;" x1="13615" x2="13797" y1="291.532" y2="291.532"/><ellipse cx="13625" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="13634" y="311.7719">UID *types.UID</text><ellipse cx="13625" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="13634" y="332.0438">ResourceVersion *string</text></g><!--MD5=[f1ffcba968499b225fce857429e0cfc9]
class v1.RootPaths--><g id="elem_v1.RootPaths"><rect codeLine="1452" fill="#F1F1F1" height="60.2719" id="v1.RootPaths" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="7469.5" y="270.032"/><ellipse cx="7491.25" cy="286.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7491.4375,292.7351 C7493.7344,292.7351 7495.1875,291.1101 7495.1875,289.1101 C7495.1875,287.282 7494.3594,286.4382 7493.2188,285.6414 L7492.2031,284.9226 C7491.0781,284.1101 7490.6563,283.8132 7490.6563,282.9539 C7490.6563,282.2664 7491.1406,281.8601 7491.7188,281.8601 C7492.4531,281.8601 7492.9375,282.2507 7493.6406,282.8914 L7494.9531,281.3132 C7493.9844,280.2976 7492.9688,279.7039 7491.7031,279.7039 C7489.5625,279.7039 7488.1094,281.2195 7488.1094,283.1414 C7488.1094,284.9382 7489.0313,285.8445 7490.125,286.5945 L7491.2188,287.3445 C7492.1563,287.9539 7492.6094,288.532 7492.6094,289.4695 C7492.6094,290.1414 7492.1406,290.5632 7491.4375,290.5632 C7490.7344,290.5632 7489.9844,290.0476 7489.3281,289.2195 L7487.7813,290.907 C7488.8125,292.0945 7490.1094,292.7351 7491.4375,292.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="7506.75" y="292.136">RootPaths</text><line style="stroke:#181818;stroke-width:0.5;" x1="7470.5" x2="7583.5" y1="302.032" y2="302.032"/><ellipse cx="7480.5" cy="317.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="7489.5" y="322.2719">Paths []string</text></g><!--MD5=[73557558d521745f248eb0de4f205449]
class v1.ServerAddressByClientCIDR--><g id="elem_v1.ServerAddressByClientCIDR"><rect codeLine="1474" fill="#F1F1F1" height="80.5438" id="v1.ServerAddressByClientCIDR" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="214" x="7220" y="259.532"/><ellipse cx="7235" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7235.1875,282.2351 C7237.4844,282.2351 7238.9375,280.6101 7238.9375,278.6101 C7238.9375,276.782 7238.1094,275.9382 7236.9688,275.1414 L7235.9531,274.4226 C7234.8281,273.6101 7234.4063,273.3132 7234.4063,272.4539 C7234.4063,271.7664 7234.8906,271.3601 7235.4688,271.3601 C7236.2031,271.3601 7236.6875,271.7507 7237.3906,272.3914 L7238.7031,270.8132 C7237.7344,269.7976 7236.7188,269.2039 7235.4531,269.2039 C7233.3125,269.2039 7231.8594,270.7195 7231.8594,272.6414 C7231.8594,274.4382 7232.7813,275.3445 7233.875,276.0945 L7234.9688,276.8445 C7235.9063,277.4539 7236.3594,278.032 7236.3594,278.9695 C7236.3594,279.6414 7235.8906,280.0632 7235.1875,280.0632 C7234.4844,280.0632 7233.7344,279.5476 7233.0781,278.7195 L7231.5313,280.407 C7232.5625,281.5945 7233.8594,282.2351 7235.1875,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="7249" y="281.636">ServerAddressByClientCIDR</text><line style="stroke:#181818;stroke-width:0.5;" x1="7221" x2="7433" y1="291.532" y2="291.532"/><ellipse cx="7231" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="7240" y="311.7719">ClientCIDR string</text><ellipse cx="7231" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="7240" y="332.0438">ServerAddress string</text></g><!--MD5=[6e82abb22b1144079fc9ddf6451a544e]
class v1.Status--><g id="elem_v1.Status"><rect codeLine="1497" fill="#F1F1F1" height="141.3596" id="v1.Status" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="170" x="7015" y="229.532"/><ellipse cx="7074.75" cy="245.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7074.9375,252.2351 C7077.2344,252.2351 7078.6875,250.6101 7078.6875,248.6101 C7078.6875,246.782 7077.8594,245.9382 7076.7188,245.1414 L7075.7031,244.4226 C7074.5781,243.6101 7074.1563,243.3132 7074.1563,242.4539 C7074.1563,241.7664 7074.6406,241.3601 7075.2188,241.3601 C7075.9531,241.3601 7076.4375,241.7507 7077.1406,242.3914 L7078.4531,240.8132 C7077.4844,239.7976 7076.4688,239.2039 7075.2031,239.2039 C7073.0625,239.2039 7071.6094,240.7195 7071.6094,242.6414 C7071.6094,244.4382 7072.5313,245.3445 7073.625,246.0945 L7074.7188,246.8445 C7075.6563,247.4539 7076.1094,248.032 7076.1094,248.9695 C7076.1094,249.6414 7075.6406,250.0632 7074.9375,250.0632 C7074.2344,250.0632 7073.4844,249.5476 7072.8281,248.7195 L7071.2813,250.407 C7072.3125,251.5945 7073.6094,252.2351 7074.9375,252.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="7095.25" y="251.636">Status</text><line style="stroke:#181818;stroke-width:0.5;" x1="7016" x2="7184" y1="261.532" y2="261.532"/><ellipse cx="7026" cy="277.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="7035" y="281.7719">Status string</text><ellipse cx="7026" cy="297.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="7035" y="302.0438">Message string</text><ellipse cx="7026" cy="317.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="7035" y="322.3157">Reason StatusReason</text><ellipse cx="7026" cy="337.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="7035" y="342.5876">Details *StatusDetails</text><ellipse cx="7026" cy="358.2556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="7035" y="362.8596">Code int32</text></g><!--MD5=[7f7b5a7ae6d44076027ad1dda3dcea57]
class v1.StatusCause--><g id="elem_v1.StatusCause"><rect codeLine="1524" fill="#F1F1F1" height="100.8157" id="v1.StatusCause" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="10115" y="249.532"/><ellipse cx="10138.55" cy="265.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10138.7375,272.2351 C10141.0344,272.2351 10142.4875,270.6101 10142.4875,268.6101 C10142.4875,266.782 10141.6594,265.9382 10140.5188,265.1414 L10139.5031,264.4226 C10138.3781,263.6101 10137.9563,263.3132 10137.9563,262.4539 C10137.9563,261.7664 10138.4406,261.3601 10139.0188,261.3601 C10139.7531,261.3601 10140.2375,261.7507 10140.9406,262.3914 L10142.2531,260.8132 C10141.2844,259.7976 10140.2688,259.2039 10139.0031,259.2039 C10136.8625,259.2039 10135.4094,260.7195 10135.4094,262.6414 C10135.4094,264.4382 10136.3313,265.3445 10137.425,266.0945 L10138.5188,266.8445 C10139.4563,267.4539 10139.9094,268.032 10139.9094,268.9695 C10139.9094,269.6414 10139.4406,270.0632 10138.7375,270.0632 C10138.0344,270.0632 10137.2844,269.5476 10136.6281,268.7195 L10135.0813,270.407 C10136.1125,271.5945 10137.4094,272.2351 10138.7375,272.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="10154.45" y="271.636">StatusCause</text><line style="stroke:#181818;stroke-width:0.5;" x1="10116" x2="10248" y1="281.532" y2="281.532"/><ellipse cx="10126" cy="297.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="10135" y="301.7719">Type CauseType</text><ellipse cx="10126" cy="317.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="10135" y="322.0438">Message string</text><ellipse cx="10126" cy="337.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="10135" y="342.3157">Field string</text></g><!--MD5=[a8ffcaea0eae87f1d250743121dc7edc]
class v1.StatusDetails--><g id="elem_v1.StatusDetails"><rect codeLine="1548" fill="#F1F1F1" height="161.6315" id="v1.StatusDetails" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="185" x="10959.5" y="219.032"/><ellipse cx="11003.75" cy="235.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11003.9375,241.7351 C11006.2344,241.7351 11007.6875,240.1101 11007.6875,238.1101 C11007.6875,236.282 11006.8594,235.4382 11005.7188,234.6414 L11004.7031,233.9226 C11003.5781,233.1101 11003.1563,232.8132 11003.1563,231.9539 C11003.1563,231.2664 11003.6406,230.8601 11004.2188,230.8601 C11004.9531,230.8601 11005.4375,231.2507 11006.1406,231.8914 L11007.4531,230.3132 C11006.4844,229.2976 11005.4688,228.7039 11004.2031,228.7039 C11002.0625,228.7039 11000.6094,230.2195 11000.6094,232.1414 C11000.6094,233.9382 11001.5313,234.8445 11002.625,235.5945 L11003.7188,236.3445 C11004.6563,236.9539 11005.1094,237.532 11005.1094,238.4695 C11005.1094,239.1414 11004.6406,239.5632 11003.9375,239.5632 C11003.2344,239.5632 11002.4844,239.0476 11001.8281,238.2195 L11000.2813,239.907 C11001.3125,241.0945 11002.6094,241.7351 11003.9375,241.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="11024.25" y="241.136">StatusDetails</text><line style="stroke:#181818;stroke-width:0.5;" x1="10960.5" x2="11143.5" y1="251.032" y2="251.032"/><ellipse cx="10970.5" cy="266.6679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="10979.5" y="271.2719">Name string</text><ellipse cx="10970.5" cy="286.9398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="10979.5" y="291.5438">Group string</text><ellipse cx="10970.5" cy="307.2118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="10979.5" y="311.8157">Kind string</text><ellipse cx="10970.5" cy="327.4837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="10979.5" y="332.0876">UID types.UID</text><ellipse cx="10970.5" cy="347.7556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="10979.5" y="352.3596">Causes []StatusCause</text><ellipse cx="10970.5" cy="368.0275" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="10979.5" y="372.6315">RetryAfterSeconds int32</text></g><!--MD5=[6f93c934fbdf614710169f6258173852]
class v1.Table--><g id="elem_v1.Table"><rect codeLine="1575" fill="#F1F1F1" height="80.5438" id="v1.Table" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="319" x="16872.5" y="259.532"/><ellipse cx="17009.25" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17009.4375,282.2351 C17011.7344,282.2351 17013.1875,280.6101 17013.1875,278.6101 C17013.1875,276.782 17012.3594,275.9382 17011.2188,275.1414 L17010.2031,274.4226 C17009.0781,273.6101 17008.6563,273.3132 17008.6563,272.4539 C17008.6563,271.7664 17009.1406,271.3601 17009.7188,271.3601 C17010.4531,271.3601 17010.9375,271.7507 17011.6406,272.3914 L17012.9531,270.8132 C17011.9844,269.7976 17010.9688,269.2039 17009.7031,269.2039 C17007.5625,269.2039 17006.1094,270.7195 17006.1094,272.6414 C17006.1094,274.4382 17007.0313,275.3445 17008.125,276.0945 L17009.2188,276.8445 C17010.1563,277.4539 17010.6094,278.032 17010.6094,278.9695 C17010.6094,279.6414 17010.1406,280.0632 17009.4375,280.0632 C17008.7344,280.0632 17007.9844,279.5476 17007.3281,278.7195 L17005.7813,280.407 C17006.8125,281.5945 17008.1094,282.2351 17009.4375,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="37" x="17029.75" y="281.636">Table</text><line style="stroke:#181818;stroke-width:0.5;" x1="16873.5" x2="17190.5" y1="291.532" y2="291.532"/><ellipse cx="16883.5" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="16892.5" y="311.7719">ColumnDefinitions []TableColumnDefinition</text><ellipse cx="16883.5" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="16892.5" y="332.0438">Rows []TableRow</text></g><!--MD5=[39ce2553949d4103bad9f738260aa8c2]
class v1.TableColumnDefinition--><g id="elem_v1.TableColumnDefinition"><rect codeLine="1585" fill="#F1F1F1" height="141.3596" id="v1.TableColumnDefinition" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="187" x="17226.5" y="229.532"/><ellipse cx="17241.5" cy="245.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17241.6875,252.2351 C17243.9844,252.2351 17245.4375,250.6101 17245.4375,248.6101 C17245.4375,246.782 17244.6094,245.9382 17243.4688,245.1414 L17242.4531,244.4226 C17241.3281,243.6101 17240.9063,243.3132 17240.9063,242.4539 C17240.9063,241.7664 17241.3906,241.3601 17241.9688,241.3601 C17242.7031,241.3601 17243.1875,241.7507 17243.8906,242.3914 L17245.2031,240.8132 C17244.2344,239.7976 17243.2188,239.2039 17241.9531,239.2039 C17239.8125,239.2039 17238.3594,240.7195 17238.3594,242.6414 C17238.3594,244.4382 17239.2813,245.3445 17240.375,246.0945 L17241.4688,246.8445 C17242.4063,247.4539 17242.8594,248.032 17242.8594,248.9695 C17242.8594,249.6414 17242.3906,250.0632 17241.6875,250.0632 C17240.9844,250.0632 17240.2344,249.5476 17239.5781,248.7195 L17238.0313,250.407 C17239.0625,251.5945 17240.3594,252.2351 17241.6875,252.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="17255.5" y="251.636">TableColumnDefinition</text><line style="stroke:#181818;stroke-width:0.5;" x1="17227.5" x2="17412.5" y1="261.532" y2="261.532"/><ellipse cx="17237.5" cy="277.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="17246.5" y="281.7719">Name string</text><ellipse cx="17237.5" cy="297.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="17246.5" y="302.0438">Type string</text><ellipse cx="17237.5" cy="317.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="17246.5" y="322.3157">Format string</text><ellipse cx="17237.5" cy="337.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="17246.5" y="342.5876">Description string</text><ellipse cx="17237.5" cy="358.2556" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="17246.5" y="362.8596">Priority int32</text></g><!--MD5=[fb1b537d09b17acb757f3be6cbbdc1e7]
class v1.TableOptions--><g id="elem_v1.TableOptions"><rect codeLine="1597" fill="#F1F1F1" height="80.5438" id="v1.TableOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="254" x="7620" y="259.532"/><ellipse cx="7698.25" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7698.4375,282.2351 C7700.7344,282.2351 7702.1875,280.6101 7702.1875,278.6101 C7702.1875,276.782 7701.3594,275.9382 7700.2188,275.1414 L7699.2031,274.4226 C7698.0781,273.6101 7697.6563,273.3132 7697.6563,272.4539 C7697.6563,271.7664 7698.1406,271.3601 7698.7188,271.3601 C7699.4531,271.3601 7699.9375,271.7507 7700.6406,272.3914 L7701.9531,270.8132 C7700.9844,269.7976 7699.9688,269.2039 7698.7031,269.2039 C7696.5625,269.2039 7695.1094,270.7195 7695.1094,272.6414 C7695.1094,274.4382 7696.0313,275.3445 7697.125,276.0945 L7698.2188,276.8445 C7699.1563,277.4539 7699.6094,278.032 7699.6094,278.9695 C7699.6094,279.6414 7699.1406,280.0632 7698.4375,280.0632 C7697.7344,280.0632 7696.9844,279.5476 7696.3281,278.7195 L7694.7813,280.407 C7695.8125,281.5945 7697.1094,282.2351 7698.4375,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="7718.75" y="281.636">TableOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="7621" x2="7873" y1="291.532" y2="291.532"/><ellipse cx="7631" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="7640" y="311.7719">NoHeaders bool</text><ellipse cx="7631" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="7640" y="332.0438">IncludeObject IncludeObjectPolicy</text></g><!--MD5=[d8d3a137937f89a38fa11a8a25343693]
class v1.TableRow--><g id="elem_v1.TableRow"><rect codeLine="1621" fill="#F1F1F1" height="100.8157" id="v1.TableRow" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="241" x="17448.5" y="249.532"/><ellipse cx="17532.25" cy="265.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17532.4375,272.2351 C17534.7344,272.2351 17536.1875,270.6101 17536.1875,268.6101 C17536.1875,266.782 17535.3594,265.9382 17534.2188,265.1414 L17533.2031,264.4226 C17532.0781,263.6101 17531.6563,263.3132 17531.6563,262.4539 C17531.6563,261.7664 17532.1406,261.3601 17532.7188,261.3601 C17533.4531,261.3601 17533.9375,261.7507 17534.6406,262.3914 L17535.9531,260.8132 C17534.9844,259.7976 17533.9688,259.2039 17532.7031,259.2039 C17530.5625,259.2039 17529.1094,260.7195 17529.1094,262.6414 C17529.1094,264.4382 17530.0313,265.3445 17531.125,266.0945 L17532.2188,266.8445 C17533.1563,267.4539 17533.6094,268.032 17533.6094,268.9695 C17533.6094,269.6414 17533.1406,270.0632 17532.4375,270.0632 C17531.7344,270.0632 17530.9844,269.5476 17530.3281,268.7195 L17528.7813,270.407 C17529.8125,271.5945 17531.1094,272.2351 17532.4375,272.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="17552.75" y="271.636">TableRow</text><line style="stroke:#181818;stroke-width:0.5;" x1="17449.5" x2="17688.5" y1="281.532" y2="281.532"/><ellipse cx="17459.5" cy="297.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="45" x="17468.5" y="301.7719">Cells []</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="17513.5" y="301.7719">interface</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="17572.5" y="301.7719">{}</text><ellipse cx="17459.5" cy="317.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="17468.5" y="322.0438">Conditions []TableRowCondition</text><ellipse cx="17459.5" cy="337.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="17468.5" y="342.3157">Object runtime.RawExtension</text></g><!--MD5=[92d0c777336f44485072c3f2f008b1fb]
class v1.TableRowCondition--><g id="elem_v1.TableRowCondition"><rect codeLine="1631" fill="#F1F1F1" height="121.0876" id="v1.TableRowCondition" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="17725" y="239.532"/><ellipse cx="17750.8" cy="255.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17750.9875,262.2351 C17753.2844,262.2351 17754.7375,260.6101 17754.7375,258.6101 C17754.7375,256.782 17753.9094,255.9382 17752.7688,255.1414 L17751.7531,254.4226 C17750.6281,253.6101 17750.2063,253.3132 17750.2063,252.4539 C17750.2063,251.7664 17750.6906,251.3601 17751.2688,251.3601 C17752.0031,251.3601 17752.4875,251.7507 17753.1906,252.3914 L17754.5031,250.8132 C17753.5344,249.7976 17752.5188,249.2039 17751.2531,249.2039 C17749.1125,249.2039 17747.6594,250.7195 17747.6594,252.6414 C17747.6594,254.4382 17748.5813,255.3445 17749.675,256.0945 L17750.7688,256.8445 C17751.7063,257.4539 17752.1594,258.032 17752.1594,258.9695 C17752.1594,259.6414 17751.6906,260.0632 17750.9875,260.0632 C17750.2844,260.0632 17749.5344,259.5476 17748.8781,258.7195 L17747.3313,260.407 C17748.3625,261.5945 17749.6594,262.2351 17750.9875,262.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="17767.2" y="261.636">TableRowCondition</text><line style="stroke:#181818;stroke-width:0.5;" x1="17726" x2="17910" y1="271.532" y2="271.532"/><ellipse cx="17736" cy="287.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="17745" y="291.7719">Type RowConditionType</text><ellipse cx="17736" cy="307.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="17745" y="312.0438">Status ConditionStatus</text><ellipse cx="17736" cy="327.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="17745" y="332.3157">Reason string</text><ellipse cx="17736" cy="347.9837" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="17745" y="352.5876">Message string</text></g><!--MD5=[e64a824d3351a703c40fca4c4957701b]
class v1.Time--><g id="elem_v1.Time"><rect codeLine="1642" fill="#F1F1F1" height="40" id="v1.Time" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="65" x="9758.5" y="280.032"/><ellipse cx="9773.5" cy="296.032" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9773.6875,302.7351 C9775.9844,302.7351 9777.4375,301.1101 9777.4375,299.1101 C9777.4375,297.282 9776.6094,296.4382 9775.4688,295.6414 L9774.4531,294.9226 C9773.3281,294.1101 9772.9063,293.8132 9772.9063,292.9539 C9772.9063,292.2664 9773.3906,291.8601 9773.9688,291.8601 C9774.7031,291.8601 9775.1875,292.2507 9775.8906,292.8914 L9777.2031,291.3132 C9776.2344,290.2976 9775.2188,289.7039 9773.9531,289.7039 C9771.8125,289.7039 9770.3594,291.2195 9770.3594,293.1414 C9770.3594,294.9382 9771.2813,295.8445 9772.375,296.5945 L9773.4688,297.3445 C9774.4063,297.9539 9774.8594,298.532 9774.8594,299.4695 C9774.8594,300.1414 9774.3906,300.5632 9773.6875,300.5632 C9772.9844,300.5632 9772.2344,300.0476 9771.5781,299.2195 L9770.0313,300.907 C9771.0625,302.0945 9772.3594,302.7351 9773.6875,302.7351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="9787.5" y="302.136">Time</text><line style="stroke:#181818;stroke-width:0.5;" x1="9759.5" x2="9822.5" y1="312.032" y2="312.032"/></g><!--MD5=[2afe174ef9266796457db523f26f9e20]
class v1.Timestamp--><g id="elem_v1.Timestamp"><rect codeLine="1673" fill="#F1F1F1" height="80.5438" id="v1.Timestamp" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="119" x="11488.5" y="259.532"/><ellipse cx="11508.9" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11509.0875,282.2351 C11511.3844,282.2351 11512.8375,280.6101 11512.8375,278.6101 C11512.8375,276.782 11512.0094,275.9382 11510.8688,275.1414 L11509.8531,274.4226 C11508.7281,273.6101 11508.3063,273.3132 11508.3063,272.4539 C11508.3063,271.7664 11508.7906,271.3601 11509.3688,271.3601 C11510.1031,271.3601 11510.5875,271.7507 11511.2906,272.3914 L11512.6031,270.8132 C11511.6344,269.7976 11510.6188,269.2039 11509.3531,269.2039 C11507.2125,269.2039 11505.7594,270.7195 11505.7594,272.6414 C11505.7594,274.4382 11506.6813,275.3445 11507.775,276.0945 L11508.8688,276.8445 C11509.8063,277.4539 11510.2594,278.032 11510.2594,278.9695 C11510.2594,279.6414 11509.7906,280.0632 11509.0875,280.0632 C11508.3844,280.0632 11507.6344,279.5476 11506.9781,278.7195 L11505.4313,280.407 C11506.4625,281.5945 11507.7594,282.2351 11509.0875,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="11524.1" y="281.636">Timestamp</text><line style="stroke:#181818;stroke-width:0.5;" x1="11489.5" x2="11606.5" y1="291.532" y2="291.532"/><ellipse cx="11499.5" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="11508.5" y="311.7719">Seconds int64</text><ellipse cx="11499.5" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="11508.5" y="332.0438">Nanos int32</text></g><!--MD5=[25856dd515094cf5d5bcdc3ae218e034]
class v1.Type--><g id="elem_v1.Type"><rect codeLine="1695" fill="#F1F1F1" height="40" id="v1.Type" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="64" x="17000" y="633.532"/><ellipse cx="17015" cy="649.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17011.3594,656.032 L17018.1406,656.032 L17018.1406,653.9539 L17015.9844,653.9539 L17015.9844,645.5164 L17018.1406,645.5164 L17018.1406,643.407 L17011.3594,643.407 L17011.3594,645.5164 L17013.4531,645.5164 L17013.4531,653.9539 L17011.3594,653.9539 L17011.3594,656.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="32" x="17029" y="655.636">Type</text><line style="stroke:#181818;stroke-width:0.5;" x1="17001" x2="17063" y1="665.532" y2="665.532"/></g><!--MD5=[01f2749ff2f01cd8f34994e59ef72c7c]
class v1.TypeMeta--><g id="elem_v1.TypeMeta"><rect codeLine="1702" fill="#F1F1F1" height="80.5438" id="v1.TypeMeta" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="138" x="15002" y="259.532"/><ellipse cx="15035.9" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M15036.0875,282.2351 C15038.3844,282.2351 15039.8375,280.6101 15039.8375,278.6101 C15039.8375,276.782 15039.0094,275.9382 15037.8688,275.1414 L15036.8531,274.4226 C15035.7281,273.6101 15035.3063,273.3132 15035.3063,272.4539 C15035.3063,271.7664 15035.7906,271.3601 15036.3688,271.3601 C15037.1031,271.3601 15037.5875,271.7507 15038.2906,272.3914 L15039.6031,270.8132 C15038.6344,269.7976 15037.6188,269.2039 15036.3531,269.2039 C15034.2125,269.2039 15032.7594,270.7195 15032.7594,272.6414 C15032.7594,274.4382 15033.6813,275.3445 15034.775,276.0945 L15035.8688,276.8445 C15036.8063,277.4539 15037.2594,278.032 15037.2594,278.9695 C15037.2594,279.6414 15036.7906,280.0632 15036.0875,280.0632 C15035.3844,280.0632 15034.6344,279.5476 15033.9781,278.7195 L15032.4313,280.407 C15033.4625,281.5945 15034.7594,282.2351 15036.0875,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="15054.1" y="281.636">TypeMeta</text><line style="stroke:#181818;stroke-width:0.5;" x1="15003" x2="15139" y1="291.532" y2="291.532"/><ellipse cx="15013" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="15022" y="311.7719">Kind string</text><ellipse cx="15013" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="15022" y="332.0438">APIVersion string</text></g><!--MD5=[417b3c4ebde89b7a3638b1ece5c86212]
class v1.UpdateOptions--><g id="elem_v1.UpdateOptions"><rect codeLine="1726" fill="#F1F1F1" height="100.8157" id="v1.UpdateOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="167" x="9006.5" y="249.532"/><ellipse cx="9036.8" cy="265.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9036.9875,272.2351 C9039.2844,272.2351 9040.7375,270.6101 9040.7375,268.6101 C9040.7375,266.782 9039.9094,265.9382 9038.7688,265.1414 L9037.7531,264.4226 C9036.6281,263.6101 9036.2063,263.3132 9036.2063,262.4539 C9036.2063,261.7664 9036.6906,261.3601 9037.2688,261.3601 C9038.0031,261.3601 9038.4875,261.7507 9039.1906,262.3914 L9040.5031,260.8132 C9039.5344,259.7976 9038.5188,259.2039 9037.2531,259.2039 C9035.1125,259.2039 9033.6594,260.7195 9033.6594,262.6414 C9033.6594,264.4382 9034.5813,265.3445 9035.675,266.0945 L9036.7688,266.8445 C9037.7063,267.4539 9038.1594,268.032 9038.1594,268.9695 C9038.1594,269.6414 9037.6906,270.0632 9036.9875,270.0632 C9036.2844,270.0632 9035.5344,269.5476 9034.8781,268.7195 L9033.3313,270.407 C9034.3625,271.5945 9035.6594,272.2351 9036.9875,272.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="9054.2" y="271.636">UpdateOptions</text><line style="stroke:#181818;stroke-width:0.5;" x1="9007.5" x2="9172.5" y1="281.532" y2="281.532"/><ellipse cx="9017.5" cy="297.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="9026.5" y="301.7719">DryRun []string</text><ellipse cx="9017.5" cy="317.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="9026.5" y="322.0438">FieldManager string</text><ellipse cx="9017.5" cy="337.7118" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="9026.5" y="342.3157">FieldValidation string</text></g><!--MD5=[2149754398769fb0fc048070970ccd9e]
class v1.Verbs--><g id="elem_v1.Verbs"><rect codeLine="1814" fill="#F1F1F1" height="40" id="v1.Verbs" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="69" x="9654.5" y="280.032"/><ellipse cx="9669.5" cy="296.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9668.2344,303.032 L9670.7813,303.032 L9670.7813,292.5164 L9673.4063,292.5164 L9673.4063,290.407 L9665.5938,290.407 L9665.5938,292.5164 L9668.2344,292.5164 L9668.2344,303.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="37" x="9683.5" y="302.136">Verbs</text><line style="stroke:#181818;stroke-width:0.5;" x1="9655.5" x2="9722.5" y1="312.032" y2="312.032"/></g><!--MD5=[772f94bb19da9543aa8c1ad79dd23cc3]
class v1.WatchEvent--><g id="elem_v1.WatchEvent"><rect codeLine="1770" fill="#F1F1F1" height="80.5438" id="v1.WatchEvent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="222" x="6758" y="259.532"/><ellipse cx="6825.75" cy="275.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6825.9375,282.2351 C6828.2344,282.2351 6829.6875,280.6101 6829.6875,278.6101 C6829.6875,276.782 6828.8594,275.9382 6827.7188,275.1414 L6826.7031,274.4226 C6825.5781,273.6101 6825.1563,273.3132 6825.1563,272.4539 C6825.1563,271.7664 6825.6406,271.3601 6826.2188,271.3601 C6826.9531,271.3601 6827.4375,271.7507 6828.1406,272.3914 L6829.4531,270.8132 C6828.4844,269.7976 6827.4688,269.2039 6826.2031,269.2039 C6824.0625,269.2039 6822.6094,270.7195 6822.6094,272.6414 C6822.6094,274.4382 6823.5313,275.3445 6824.625,276.0945 L6825.7188,276.8445 C6826.6563,277.4539 6827.1094,278.032 6827.1094,278.9695 C6827.1094,279.6414 6826.6406,280.0632 6825.9375,280.0632 C6825.2344,280.0632 6824.4844,279.5476 6823.8281,278.7195 L6822.2813,280.407 C6823.3125,281.5945 6824.6094,282.2351 6825.9375,282.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="6846.25" y="281.636">WatchEvent</text><line style="stroke:#181818;stroke-width:0.5;" x1="6759" x2="6979" y1="291.532" y2="291.532"/><ellipse cx="6769" cy="307.1679" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="6778" y="311.7719">Type string</text><ellipse cx="6769" cy="327.4398" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="6778" y="332.0438">Object runtime.RawExtension</text></g><!--MD5=[4b1359490ec74125796c9c24be3cd25e]
class v1.CauseType--><g id="elem_v1.CauseType"><rect codeLine="1794" fill="#F1F1F1" height="40" id="v1.CauseType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="105" x="17099.5" y="633.532"/><ellipse cx="17114.5" cy="649.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17113.2344,656.532 L17115.7813,656.532 L17115.7813,646.0164 L17118.4063,646.0164 L17118.4063,643.907 L17110.5938,643.907 L17110.5938,646.0164 L17113.2344,646.0164 L17113.2344,656.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="17128.5" y="655.636">CauseType</text><line style="stroke:#181818;stroke-width:0.5;" x1="17100.5" x2="17203.5" y1="665.532" y2="665.532"/></g><!--MD5=[c00c49641c86e0e1efc7f699bc8b274d]
class v1.ConditionStatus--><g id="elem_v1.ConditionStatus"><rect codeLine="1796" fill="#F1F1F1" height="40" id="v1.ConditionStatus" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="17239.5" y="633.532"/><ellipse cx="17254.5" cy="649.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17253.2344,656.532 L17255.7813,656.532 L17255.7813,646.0164 L17258.4063,646.0164 L17258.4063,643.907 L17250.5938,643.907 L17250.5938,646.0164 L17253.2344,646.0164 L17253.2344,656.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="17268.5" y="655.636">ConditionStatus</text><line style="stroke:#181818;stroke-width:0.5;" x1="17240.5" x2="17377.5" y1="665.532" y2="665.532"/></g><!--MD5=[ee4e1220b8a46bd6f5a93f843d323d60]
class v1.DeletionPropagation--><g id="elem_v1.DeletionPropagation"><rect codeLine="1798" fill="#F1F1F1" height="40" id="v1.DeletionPropagation" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="169" x="17413.5" y="633.532"/><ellipse cx="17428.5" cy="649.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17427.2344,656.532 L17429.7813,656.532 L17429.7813,646.0164 L17432.4063,646.0164 L17432.4063,643.907 L17424.5938,643.907 L17424.5938,646.0164 L17427.2344,646.0164 L17427.2344,656.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="17442.5" y="655.636">DeletionPropagation</text><line style="stroke:#181818;stroke-width:0.5;" x1="17414.5" x2="17581.5" y1="665.532" y2="665.532"/></g><!--MD5=[fc10d3bb4ed5906d0e7bbd2b2c13e76d]
class v1.IncludeObjectPolicy--><g id="elem_v1.IncludeObjectPolicy"><rect codeLine="1800" fill="#F1F1F1" height="40" id="v1.IncludeObjectPolicy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="164" x="16950" y="936.032"/><ellipse cx="16965" cy="952.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M16963.7344,959.032 L16966.2813,959.032 L16966.2813,948.5164 L16968.9063,948.5164 L16968.9063,946.407 L16961.0938,946.407 L16961.0938,948.5164 L16963.7344,948.5164 L16963.7344,959.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="16979" y="958.136">IncludeObjectPolicy</text><line style="stroke:#181818;stroke-width:0.5;" x1="16951" x2="17113" y1="968.032" y2="968.032"/></g><!--MD5=[19681bc7681b9a20f8d4dc0de538ff8c]
class v1.LabelSelectorOperator--><g id="elem_v1.LabelSelectorOperator"><rect codeLine="1804" fill="#F1F1F1" height="40" id="v1.LabelSelectorOperator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="180" x="17149" y="936.032"/><ellipse cx="17164" cy="952.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17162.7344,959.032 L17165.2813,959.032 L17165.2813,948.5164 L17167.9063,948.5164 L17167.9063,946.407 L17160.0938,946.407 L17160.0938,948.5164 L17162.7344,948.5164 L17162.7344,959.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="17178" y="958.136">LabelSelectorOperator</text><line style="stroke:#181818;stroke-width:0.5;" x1="17150" x2="17328" y1="968.032" y2="968.032"/></g><!--MD5=[991b1f8cb2d71cae365195dae5469029]
class v1.ManagedFieldsOperationType--><g id="elem_v1.ManagedFieldsOperationType"><rect codeLine="1806" fill="#F1F1F1" height="40" id="v1.ManagedFieldsOperationType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="231" x="17364.5" y="936.032"/><ellipse cx="17379.5" cy="952.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17378.2344,959.032 L17380.7813,959.032 L17380.7813,948.5164 L17383.4063,948.5164 L17383.4063,946.407 L17375.5938,946.407 L17375.5938,948.5164 L17378.2344,948.5164 L17378.2344,959.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="17393.5" y="958.136">ManagedFieldsOperationType</text><line style="stroke:#181818;stroke-width:0.5;" x1="17365.5" x2="17594.5" y1="968.032" y2="968.032"/></g><!--MD5=[13357a8f908bc32f1dd0cd463b1024e9]
class v1.ResourceVersionMatch--><g id="elem_v1.ResourceVersionMatch"><rect codeLine="1808" fill="#F1F1F1" height="40" id="v1.ResourceVersionMatch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="182" x="17631" y="936.032"/><ellipse cx="17646" cy="952.032" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17644.7344,959.032 L17647.2813,959.032 L17647.2813,948.5164 L17649.9063,948.5164 L17649.9063,946.407 L17642.0938,946.407 L17642.0938,948.5164 L17644.7344,948.5164 L17644.7344,959.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="17660" y="958.136">ResourceVersionMatch</text><line style="stroke:#181818;stroke-width:0.5;" x1="17632" x2="17812" y1="968.032" y2="968.032"/></g><!--MD5=[70de6390314e5c705b3744ad58c4768a]
class v1.RowConditionType--><g id="elem_v1.RowConditionType"><rect codeLine="1810" fill="#F1F1F1" height="40" id="v1.RowConditionType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="157" x="16953.5" y="1096.532"/><ellipse cx="16968.5" cy="1112.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M16967.2344,1119.532 L16969.7813,1119.532 L16969.7813,1109.0164 L16972.4063,1109.0164 L16972.4063,1106.907 L16964.5938,1106.907 L16964.5938,1109.0164 L16967.2344,1109.0164 L16967.2344,1119.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="16982.5" y="1118.636">RowConditionType</text><line style="stroke:#181818;stroke-width:0.5;" x1="16954.5" x2="17109.5" y1="1128.532" y2="1128.532"/></g><!--MD5=[744fc454ab069d4f96a48a61b9a13f78]
class v1.StatusReason--><g id="elem_v1.StatusReason"><rect codeLine="1812" fill="#F1F1F1" height="40" id="v1.StatusReason" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="17145.5" y="1096.532"/><ellipse cx="17160.5" cy="1112.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17159.2344,1119.532 L17161.7813,1119.532 L17161.7813,1109.0164 L17164.4063,1109.0164 L17164.4063,1106.907 L17156.5938,1106.907 L17156.5938,1109.0164 L17159.2344,1109.0164 L17159.2344,1119.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="17174.5" y="1118.636">StatusReason</text><line style="stroke:#181818;stroke-width:0.5;" x1="17146.5" x2="17267.5" y1="1128.532" y2="1128.532"/></g><!--MD5=[9303142592bef8f71d16dee375b02f22]
class v1.watchEvent--><g id="elem_v1.watchEvent"><rect codeLine="1816" fill="#F1F1F1" height="40" id="v1.watchEvent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="113" x="17303.5" y="1096.532"/><ellipse cx="17318.5" cy="1112.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M17318.7344,1119.2351 C17319.8906,1119.2351 17320.9844,1118.7507 17321.8125,1117.7195 L17320.3906,1116.2039 C17320,1116.7507 17319.5313,1117.0632 17318.9688,1117.0632 C17317.7813,1117.0632 17316.7656,1115.9226 17316.7656,1112.6882 C17316.7656,1109.532 17317.8281,1108.3601 17318.8594,1108.3601 C17319.4531,1108.3601 17319.8281,1108.657 17320.25,1109.157 L17321.6719,1107.5945 C17321,1106.8445 17320.0313,1106.2039 17318.75,1106.2039 C17316.3281,1106.2039 17314.1875,1108.1726 17314.1875,1112.7976 C17314.1875,1117.4382 17316.3281,1119.2351 17318.7344,1119.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="17332.5" y="1118.636">watch.Event</text><line style="stroke:#181818;stroke-width:0.5;" x1="17304.5" x2="17415.5" y1="1128.532" y2="1128.532"/></g><!--MD5=[ed6d48352993260dda6654870a4cb842]
reverse link runtime.MemoryAllocator to runtime.Allocator--><g id="link_runtime.MemoryAllocator_runtime.Allocator"><path codeLine="507" d="M1926.6018,117.1688 C1911.703,160.689 1887.9543,230.0602 1874.3938,269.671 " fill="none" id="runtime.MemoryAllocator-backto-runtime.Allocator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1920.021,114.7792,1933.1215,98.1246,1933.2663,119.3137,1920.021,114.7792" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e8e46942fd1ac2011aca7918bb90c310]
reverse link runtime.ObjectTyper to runtime.MultiObjectTyper--><g id="link_runtime.ObjectTyper_runtime.MultiObjectTyper"><path codeLine="508" d="M861.918,117.9033 C852.2689,165.5052 836.5077,243.2608 829.096,279.8249 " fill="none" id="runtime.ObjectTyper-backto-runtime.MultiObjectTyper" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="855.0934,116.3353,865.9272,98.1246,868.8143,119.1166,855.0934,116.3353" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5d58a19c8555879e6a70c3425340eb7c]
reverse link runtime.Decoder to runtime.NoopDecoder--><g id="link_runtime.Decoder_runtime.NoopDecoder"><path codeLine="509" d="M4078,118.2261 C4078,165.8561 4078,243.3433 4078,279.8249 " fill="none" id="runtime.Decoder-backto-runtime.NoopDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4071.0001,118.1246,4078,98.1246,4085.0001,118.1245,4071.0001,118.1246" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2a83891fc0e21e5b7bba8756bf488f1f]
reverse link runtime.Encoder to runtime.NoopEncoder--><g id="link_runtime.Encoder_runtime.NoopEncoder"><path codeLine="510" d="M3787.5984,117.5814 C3773.8838,165.154 3751.3903,243.1783 3740.8255,279.8249 " fill="none" id="runtime.Encoder-backto-runtime.NoopEncoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3780.9413,115.4029,3793.2075,98.1246,3794.3934,119.281,3780.9413,115.4029" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9d923e60e890f6013cb7e88e7280e3ee]
reverse link runtime.ProtobufMarshaller to runtime.RawExtension--><g id="link_runtime.ProtobufMarshaller_runtime.RawExtension"><path codeLine="511" d="M6306.1787,105.9446 C6316.7683,110.2777 6327.6541,114.6123 6338,118.532 C6375.3268,132.6739 6392.6168,121.6448 6423,147.532 C6457.5709,176.9872 6479.592,224.9885 6491.8096,259.269 " fill="none" id="runtime.ProtobufMarshaller-backto-runtime.RawExtension" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6303.4037,112.3719,6287.6178,98.2367,6308.7731,99.4425,6303.4037,112.3719" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[14e0c1b68b14328b1edc1d239d5bb35b]
reverse link runtime.ProtobufReverseMarshaller to runtime.RawExtension--><g id="link_runtime.ProtobufReverseMarshaller_runtime.RawExtension"><path codeLine="512" d="M6468.7141,117.8584 C6476.4503,157.7989 6488.3047,219.0005 6496.1045,259.2694 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-runtime.RawExtension" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6461.8228,119.0908,6464.8918,98.1246,6475.5673,116.4285,6461.8228,119.0908" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5f4a05826ad055271c942d6e4d1f664d]
reverse link runtime.ObjectConvertor to runtime.Scheme--><g id="link_runtime.ObjectConvertor_runtime.Scheme"><path codeLine="513" d="M1235,118.2261 C1235,138.2695 1235,163.6001 1235,188.9374 " fill="none" id="runtime.ObjectConvertor-backto-runtime.Scheme" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1228.0001,118.1246,1235,98.1246,1242.0001,118.1245,1228.0001,118.1246" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1db2d9255565a3b842302d06c623350c]
reverse link runtime.ObjectCreater to runtime.Scheme--><g id="link_runtime.ObjectCreater_runtime.Scheme"><path codeLine="514" d="M1096.2047,114.4142 C1111.5985,135.001 1131.7611,161.9655 1151.9292,188.9374 " fill="none" id="runtime.ObjectCreater-backto-runtime.Scheme" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1090.395,118.3338,1084.0242,98.1246,1101.6072,109.95,1090.395,118.3338" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4c3ac7d270a2b50fcfdd78850994ef9e]
reverse link runtime.ObjectDefaulter to runtime.Scheme--><g id="link_runtime.ObjectDefaulter_runtime.Scheme"><path codeLine="515" d="M1379.8908,114.1028 C1363.8175,134.7287 1342.6985,161.8293 1321.5737,188.9374 " fill="none" id="runtime.ObjectDefaulter-backto-runtime.Scheme" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1374.5272,109.5974,1392.3423,98.1246,1385.5701,118.2029,1374.5272,109.5974" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6971dc24f332d1277eb092492aeb4b38]
reverse link runtime.ObjectTyper to runtime.Scheme--><g id="link_runtime.ObjectTyper_runtime.Scheme"><path codeLine="516" d="M920.3724,108.6695 C955.157,129.8261 1003.7433,159.3773 1052.3444,188.9374 " fill="none" id="runtime.ObjectTyper-backto-runtime.Scheme" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="916.4851,114.4983,903.0351,98.1246,923.7602,102.5369,916.4851,114.4983" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4314cc1c38b03dff64c287a2ebb78698]
reverse link runtime.ObjectVersioner to runtime.Scheme--><g id="link_runtime.ObjectVersioner_runtime.Scheme"><path codeLine="517" d="M747.2523,104.1162 C763.3401,109.0938 780.1647,114.1218 796,118.532 C848.4409,133.1371 863.7137,129.2816 915,147.532 C948.6284,159.4988 983.4448,173.8711 1017.1845,188.9445 " fill="none" id="runtime.ObjectVersioner-backto-runtime.Scheme" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="745.0999,110.7774,728.1102,98.1143,749.2885,97.4186,745.0999,110.7774" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c3cc16ac3b14710f49d710eacb2bed7b]
reverse link runtime.MemoryAllocator to runtime.SimpleAllocator--><g id="link_runtime.MemoryAllocator_runtime.SimpleAllocator"><path codeLine="518" d="M1952.8994,117.2604 C1968.5326,164.8023 1994.2777,243.0957 2006.3553,279.8249 " fill="none" id="runtime.MemoryAllocator-backto-runtime.SimpleAllocator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1946.2048,119.3104,1946.607,98.1246,1959.5043,114.9371,1946.2048,119.3104" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[934e38dd30fcd18fcc5463641c114c2f]
reverse link runtime.ProtobufMarshaller to runtime.TypeMeta--><g id="link_runtime.ProtobufMarshaller_runtime.TypeMeta"><path codeLine="519" d="M6220.3418,115.9338 C6198.6075,155.81 6164.5214,218.348 6142.2175,259.2694 " fill="none" id="runtime.ProtobufMarshaller-backto-runtime.TypeMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6214.3308,112.3355,6230.0486,98.1246,6226.6234,119.0356,6214.3308,112.3355" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8d35b8ee61365f35513efd43522a4bc2]
reverse link runtime.ProtobufReverseMarshaller to runtime.TypeMeta--><g id="link_runtime.ProtobufReverseMarshaller_runtime.TypeMeta"><path codeLine="520" d="M6385.0353,104.3832 C6369.5586,109.3732 6353.323,114.3378 6338,118.532 C6280.0653,134.3898 6254.2934,111.8158 6206,147.532 C6168.6095,175.1847 6145.1938,224.2557 6132.4042,259.2661 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-runtime.TypeMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6382.9217,97.7095,6404.1076,98.1048,6387.2993,111.0075,6382.9217,97.7095" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[bcd7a9fbf79de4d313d6c83b4a78f4f0]
reverse link runtime.ProtobufMarshaller to runtime.Unknown--><g id="link_runtime.ProtobufMarshaller_runtime.Unknown"><path codeLine="521" d="M6254.0345,117.1355 C6266.2813,153.8759 6284.6764,209.0612 6298.0566,249.2019 " fill="none" id="runtime.ProtobufMarshaller-backto-runtime.Unknown" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6247.3814,119.3119,6247.6975,98.1246,6260.6629,114.8846,6247.3814,119.3119" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c4ed7f07fa800478db5dc9417cc4e253]
reverse link runtime.ProtobufReverseMarshaller to runtime.Unknown--><g id="link_runtime.ProtobufReverseMarshaller_runtime.Unknown"><path codeLine="522" d="M6436.7878,114.8479 C6412.6478,151.5538 6375.3815,208.2191 6348.4288,249.2019 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-runtime.Unknown" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6430.9478,110.9884,6447.786,98.1246,6442.6449,118.6811,6430.9478,110.9884" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[492c67f2246b6b0415b8d1de21b4f26f]
reverse link runtime.Decoder to runtime.WithoutVersionDecoder--><g id="link_runtime.Decoder_runtime.WithoutVersionDecoder"><path codeLine="523" d="M4118.7224,111.4444 C4131.2012,122.4251 4144.6276,135.0323 4156,147.532 C4196.0121,191.5104 4235.4326,249.5343 4255.0963,279.758 " fill="none" id="runtime.Decoder-backto-runtime.WithoutVersionDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4113.7622,116.413,4103.116,98.092,4122.8637,105.7752,4113.7622,116.413" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c32252a375a21d2ed7be625fcb9810c4]
reverse link runtime.Decoder to runtime.base64Serializer--><g id="link_runtime.Decoder_runtime.base64Serializer"><path codeLine="524" d="M4035.4913,111.2867 C4022.9861,122.1254 4009.7811,134.6919 3999,147.532 C3966.3968,186.3616 3937.5043,237.7975 3920.8815,269.8984 " fill="none" id="runtime.Decoder-backto-runtime.base64Serializer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4031.4151,105.5719,4051.2646,98.1558,4040.3722,116.3316,4031.4151,105.5719" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[dc369d0350f769d5420782578d9551cd]
reverse link runtime.Encoder to runtime.base64Serializer--><g id="link_runtime.Encoder_runtime.base64Serializer"><path codeLine="525" d="M3817.4359,116.2822 C3838.3826,159.7417 3872.1447,229.7901 3891.3666,269.671 " fill="none" id="runtime.Encoder-backto-runtime.base64Serializer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3811.0622,119.1804,3808.6843,98.1246,3823.6737,113.1018,3811.0622,119.1804" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a3ad2c297b290b98691605584718ac10]
reverse link runtime.ClientNegotiator to runtime.clientNegotiator--><g id="link_runtime.ClientNegotiator_runtime.clientNegotiator"><path codeLine="526" d="M4509,118.1361 C4509,158.0821 4509,219.0937 4509,259.2694 " fill="none" id="runtime.ClientNegotiator-backto-runtime.clientNegotiator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4502.0001,118.1246,4509,98.1246,4516.0001,118.1245,4502.0001,118.1246" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[885df83d0b7356ccdab7d9210c99ed83]
reverse link runtime.Framer to runtime.defaultFramer--><g id="link_runtime.Framer_runtime.defaultFramer"><path codeLine="527" d="M2972,118.2261 C2972,165.8561 2972,243.3433 2972,279.8249 " fill="none" id="runtime.Framer-backto-runtime.defaultFramer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2965.0001,118.1246,2972,98.1246,2979.0001,118.1245,2965.0001,118.1246" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d3b51d3f06939e2159e3e266c0d61a5c]
reverse link runtime.GroupVersioner to runtime.disabledGroupVersioner--><g id="link_runtime.GroupVersioner_runtime.disabledGroupVersioner"><path codeLine="528" d="M2380.7246,108.3461 C2362.5281,119.3833 2342.9949,132.8054 2327,147.532 C2282.498,188.5054 2243.3658,248.8274 2224.6668,279.8981 " fill="none" id="runtime.GroupVersioner-backto-runtime.disabledGroupVersioner" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2377.4842,102.1332,2398.2949,98.1437,2384.5142,114.2401,2377.4842,102.1332" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7fd76ebde6946bac08fe930617ea80e4]
reverse link runtime.Object to runtime.encodable--><g id="link_runtime.Object_runtime.encodable"><path codeLine="529" d="M6058.0583,113.623 C6028.6276,147.4759 5983.7653,199.0792 5948.6982,239.4154 " fill="none" id="runtime.Object-backto-runtime.encodable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6053.1275,108.6255,6071.5321,98.1246,6063.693,117.8108,6053.1275,108.6255" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0003facf782a4b16f9f7192e08a62e65]
reverse link runtime.EquivalentResourceMapper to runtime.equivalentResourceRegistry--><g id="link_runtime.EquivalentResourceMapper_runtime.equivalentResourceRegistry"><path codeLine="530" d="M3512.0202,113.623 C3483.5045,147.4759 3440.0369,199.0792 3406.06,239.4154 " fill="none" id="runtime.EquivalentResourceMapper-backto-runtime.equivalentResourceRegistry" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3506.8365,108.9113,3525.0752,98.1246,3517.5441,117.9307,3506.8365,108.9113" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[bee49cf25fdd2ddde6cdc134e1623e11]
reverse link runtime.EquivalentResourceRegistry to runtime.equivalentResourceRegistry--><g id="link_runtime.EquivalentResourceRegistry_runtime.equivalentResourceRegistry"><path codeLine="531" d="M3302.3501,117.4025 C3312.1024,151.2309 3326.3213,200.5526 3337.5249,239.4154 " fill="none" id="runtime.EquivalentResourceRegistry-backto-runtime.equivalentResourceRegistry" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3295.6066,119.281,3296.7925,98.1246,3309.0587,115.4029,3295.6066,119.281" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5a5ec7cd15d515ab7e2d4581485cbbfa]
reverse link runtime.GroupVersioner to runtime.internalGroupVersioner--><g id="link_runtime.GroupVersioner_runtime.internalGroupVersioner"><path codeLine="532" d="M2438,118.2261 C2438,165.8561 2438,243.3433 2438,279.8249 " fill="none" id="runtime.GroupVersioner-backto-runtime.internalGroupVersioner" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2431.0001,118.1246,2438,98.1246,2445.0001,118.1245,2431.0001,118.1246" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[da3c221f0cb156b559048354dfb8cfcc]
reverse link runtime.GroupVersioner to runtime.multiGroupVersioner--><g id="link_runtime.GroupVersioner_runtime.multiGroupVersioner"><path codeLine="533" d="M2490.7194,108.5265 C2509.57,120.079 2530.6719,133.7762 2549,147.532 C2590.8361,178.9313 2634.812,218.3112 2667.6905,249.1879 " fill="none" id="runtime.GroupVersioner-backto-runtime.multiGroupVersioner" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2487.035,114.4792,2473.5,98.1757,2494.2478,102.4802,2487.035,114.4792" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6c5c775cb087cf35425714cbba80304f]
reverse link runtime.ParameterCodec to runtime.parameterCodec--><g id="link_runtime.ParameterCodec_runtime.parameterCodec"><path codeLine="534" d="M398,118.3686 C398,152.165 398,200.921 398,239.4154 " fill="none" id="runtime.ParameterCodec-backto-runtime.parameterCodec" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="391.0001,118.1246,398,98.1246,405.0001,118.1245,391.0001,118.1246" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[26a06e8d5164d5376f7ec1dce5945ac8]
reverse link runtime.NegotiatedSerializer to runtime.simpleNegotiatedSerializer--><g id="link_runtime.NegotiatedSerializer_runtime.simpleNegotiatedSerializer"><path codeLine="535" d="M1678,118.3621 C1678,161.9479 1678,230.4203 1678,269.671 " fill="none" id="runtime.NegotiatedSerializer-backto-runtime.simpleNegotiatedSerializer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1671.0001,118.1246,1678,98.1246,1685.0001,118.1245,1671.0001,118.1246" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[54f45832071bf1fff513ab6d2763368b]
reverse link runtime.ObjectVersioner to runtime.unsafeObjectConvertor--><g id="link_runtime.ObjectVersioner_runtime.unsafeObjectConvertor"><path codeLine="536" d="M659.4568,117.9033 C650.451,165.5052 635.7405,243.2608 628.823,279.8249 " fill="none" id="runtime.ObjectVersioner-backto-runtime.unsafeObjectConvertor" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="652.6028,116.4747,663.1987,98.1246,666.3588,119.0772,652.6028,116.4747" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[74b526665c7eb62e16a849a1de601a24]
reverse link runtime.UnstructuredConverter to runtime.unstructuredConverter--><g id="link_runtime.UnstructuredConverter_runtime.unstructuredConverter"><path codeLine="537" d="M139,118.1361 C139,158.0821 139,219.0937 139,259.2694 " fill="none" id="runtime.UnstructuredConverter-backto-runtime.unstructuredConverter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="132.0001,118.1246,139,98.1246,146.0001,118.1245,132.0001,118.1246" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f5677ea5c66a743298a445ae217691f4]
reverse link runtime.ProtobufMarshaller to v1.APIGroup--><g id="link_runtime.ProtobufMarshaller_v1.APIGroup"><path codeLine="1820" d="M6298.1196,106.134 C6310.9483,111.2337 6324.7054,115.7977 6338,118.532 C6493.2584,150.4643 9039.8068,99.9351 9191,147.532 C9249.383,165.9115 9306.1917,205.1813 9347.8597,239.267 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.APIGroup" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1541,112.4787,6279.543,98.1506,6300.6819,99.6161,6295.1541,112.4787" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f4ae60129c72e858776c5e1b24e6064e]
reverse link runtime.ProtobufReverseMarshaller to v1.APIGroup--><g id="link_runtime.ProtobufReverseMarshaller_v1.APIGroup"><path codeLine="1821" d="M6586.6781,79.2492 C7106.3318,84.5368 9065.8618,107.0835 9191,147.532 C9249.0176,166.2851 9305.6169,205.3178 9347.2771,239.1977 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.APIGroup" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.5578,86.2485,6566.6296,79.0466,6586.6993,72.2492,6586.5578,86.2485" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[be9fd492cc4d7807a70a7391f56ae4ae]
reverse link runtime.ProtobufMarshaller to v1.APIGroupList--><g id="link_runtime.ProtobufMarshaller_v1.APIGroupList"><path codeLine="1822" d="M6298.1281,106.0931 C6310.9563,111.1952 6324.711,115.7706 6338,118.532 C6448.7566,141.5471 8275.8923,91.2151 8374,147.532 C8419.99,173.9317 8445.6498,233.4012 8457.5785,269.7841 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.APIGroupList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1637,112.4382,6279.551,98.1119,6300.6901,99.5751,6295.1637,112.4382" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e05ffbb24bb2030908df0d1c2ef90327]
reverse link runtime.ProtobufReverseMarshaller to v1.APIGroupList--><g id="link_runtime.ProtobufReverseMarshaller_v1.APIGroupList"><path codeLine="1823" d="M6586.9467,79.3262 C7000.8323,84.0066 8297.0584,102.2289 8374,147.532 C8419.6959,174.4377 8445.4556,233.7352 8457.4824,269.9495 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.APIGroupList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.6703,86.3236,6566.7497,79.1006,6586.8267,72.3245,6586.6703,86.3236" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e80cc7e38e599f4201c5074a5e5099dd]
reverse link runtime.ProtobufMarshaller to v1.APIResource--><g id="link_runtime.ProtobufMarshaller_v1.APIResource"><path codeLine="1824" d="M6298.132,106.0744 C6310.9599,111.1777 6324.7136,115.7582 6338,118.532 C6435.9566,138.9822 8049.6121,102.5485 8139,147.532 C8154.3513,155.2574 8168.2611,166.0462 8180.6881,178.3532 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.APIResource" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1681,112.4198,6279.5547,98.0942,6300.6938,99.5564,6295.1681,112.4198" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fece376c9b86ac99ca2ec3c42da4ac17]
reverse link runtime.ProtobufReverseMarshaller to v1.APIResource--><g id="link_runtime.ProtobufReverseMarshaller_v1.APIResource"><path codeLine="1825" d="M6586.7268,80.3329 C6964.9319,87.6367 8070.4339,111.9331 8139,147.532 C8154.1043,155.374 8167.834,166.1439 8180.1373,178.3639 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.APIResource" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.463,87.3292,6566.6009,79.947,6586.7314,73.3318,6586.463,87.3292" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[939a7d81ce662a0d230f87a2b7dc9c1c]
reverse link runtime.ProtobufMarshaller to v1.APIResourceList--><g id="link_runtime.ProtobufMarshaller_v1.APIResourceList"><path codeLine="1826" d="M6298.1373,106.0487 C6310.965,111.1536 6324.7172,115.7412 6338,118.532 C6422.5034,136.2864 7814.4505,109.5569 7892,147.532 C7939.8078,170.943 7975.1309,222.723 7995.367,259.4373 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.APIResourceList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1741,112.3945,6279.5597,98.0699,6300.699,99.5307,6295.1741,112.3945" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[486053439d917a201079bdbd4405b456]
reverse link runtime.ProtobufReverseMarshaller to v1.APIResourceList--><g id="link_runtime.ProtobufReverseMarshaller_v1.APIResourceList"><path codeLine="1827" d="M6586.6767,81.3467 C6925.1554,90.6452 7834.3339,118.2179 7892,147.532 C7939.3013,171.5773 7974.6287,222.9464 7995.0106,259.4095 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.APIResourceList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.4608,88.3435,6566.6594,80.7998,6586.8432,74.3487,6586.4608,88.3435" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b5b65cea1a0c322a99252f34860e9e50]
reverse link runtime.ProtobufMarshaller to v1.APIVersions--><g id="link_runtime.ProtobufMarshaller_v1.APIVersions"><path codeLine="1828" d="M6298.1053,106.2043 C6310.9349,111.2997 6324.6959,115.8442 6338,118.532 C6462.7307,143.731 15378.4889,109.7461 15500,147.532 C15570.5394,169.4674 15638.6907,222.1352 15680.6924,259.4174 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.APIVersions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1379,112.5481,6279.5294,98.2172,6300.6681,99.6866,6295.1379,112.5481" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e49607e389bb400a17b1f2819ab4ebd9]
reverse link runtime.ProtobufReverseMarshaller to v1.APIVersions--><g id="link_runtime.ProtobufReverseMarshaller_v1.APIVersions"><path codeLine="1829" d="M6586.9541,78.4961 C7670.943,82.5494 15388.6193,112.6199 15500,147.532 C15570.4896,169.6269 15638.6524,222.258 15680.6702,259.4882 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.APIVersions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.5993,85.4949,6566.6256,78.4202,6586.6516,71.495,6586.5993,85.4949" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e91b18bd82bcdd246ca11ba9a89a939e]
reverse link runtime.ProtobufMarshaller to v1.ApplyOptions--><g id="link_runtime.ProtobufMarshaller_v1.ApplyOptions"><path codeLine="1830" d="M6298.1054,106.2036 C6310.935,111.2991 6324.696,115.8438 6338,118.532 C6399.058,130.8695 15253.5167,117.3349 15308,147.532 C15346.9924,169.1434 15372.3207,213.9471 15387.1153,249.4274 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.ApplyOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1381,112.5474,6279.5295,98.2165,6300.6682,99.6859,6295.1381,112.5474" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f50ab4c4a73101d99c3b38a9f7322ceb]
reverse link runtime.ProtobufReverseMarshaller to v1.ApplyOptions--><g id="link_runtime.ProtobufReverseMarshaller_v1.ApplyOptions"><path codeLine="1831" d="M6586.9211,78.1929 C7658.37,79.6596 15208.2829,91.9625 15308,147.532 C15346.9423,169.2334 15372.2763,214.027 15387.0857,249.4805 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.ApplyOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.8082,85.1928,6566.8177,78.1656,6586.8272,71.1929,6586.8082,85.1928" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[15ceb7ca8195cac0203d692962125b5c]
reverse link runtime.ProtobufMarshaller to v1.Condition--><g id="link_runtime.ProtobufMarshaller_v1.Condition"><path codeLine="1832" d="M6298.1046,106.2077 C6310.9342,111.303 6324.6955,115.8465 6338,118.532 C6407.9847,132.6583 16554.9475,115.9934 16619,147.532 C16650.2341,162.9112 16675.5651,190.9633 16694.6344,218.8533 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.Condition" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1371,112.5515,6279.5287,98.2204,6300.6674,99.6901,6295.1371,112.5515" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[41328f33e284019b3f4c2ca969319219]
reverse link runtime.ProtobufReverseMarshaller to v1.Condition--><g id="link_runtime.ProtobufReverseMarshaller_v1.Condition"><path codeLine="1833" d="M6586.9781,78.137 C7745.1343,79.1917 16500.9174,89.0945 16619,147.532 C16650.2031,162.974 16675.5283,191.0378 16694.6016,218.9197 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.Condition" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.8932,85.1371,6566.8996,78.1189,6586.9059,71.1371,6586.8932,85.1371" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[06b12974951cf94eef65c5848ff3d10d]
reverse link runtime.ProtobufMarshaller to v1.CreateOptions--><g id="link_runtime.ProtobufMarshaller_v1.CreateOptions"><path codeLine="1834" d="M6298.1047,106.2072 C6310.9343,111.3025 6324.6956,115.8461 6338,118.532 C6406.6092,132.3827 16355.3865,114.3229 16417,147.532 C16456.8342,169.0023 16483.6165,213.8221 16499.5347,249.3442 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.CreateOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1373,112.5509,6279.5289,98.2199,6300.6675,99.6895,6295.1373,112.5509" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[36fa5719e26cd9a468d16aaf69ee859a]
reverse link runtime.ProtobufReverseMarshaller to v1.CreateOptions--><g id="link_runtime.ProtobufReverseMarshaller_v1.CreateOptions"><path codeLine="1835" d="M6587.146,78.0984 C7733.143,78.7975 16303.5421,86.0785 16417,147.532 C16456.7901,169.084 16483.5774,213.8945 16499.5087,249.3924 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.CreateOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.8727,85.0983,6566.8769,78.0863,6586.8811,71.0983,6586.8727,85.0983" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3bccbd2abd03823c825751548f22fd70]
reverse link runtime.ProtobufMarshaller to v1.DeleteOptions--><g id="link_runtime.ProtobufMarshaller_v1.DeleteOptions"><path codeLine="1836" d="M6298.1049,106.2062 C6310.9345,111.3015 6324.6957,115.8455 6338,118.532 C6470.7517,145.3383 15963.0313,97.7979 16089,147.532 C16131.4918,164.3083 16169.5267,197.8111 16198.2445,229.1519 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.DeleteOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1375,112.55,6279.529,98.219,6300.6677,99.6885,6295.1375,112.55" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e1f87e766220b14d17f34e1071626997]
reverse link runtime.ProtobufReverseMarshaller to v1.DeleteOptions--><g id="link_runtime.ProtobufReverseMarshaller_v1.DeleteOptions"><path codeLine="1837" d="M6586.799,78.3139 C7709.649,80.9035 15973.1695,101.5163 16089,147.532 C16131.4561,164.3984 16169.4881,197.9087 16198.2132,229.231 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.DeleteOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.5247,85.3133,6566.5408,78.2673,6586.5569,71.3134,6586.5247,85.3133" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1c052aed6460ed993b740ea7767c1d97]
reverse link runtime.ProtobufMarshaller to v1.Duration--><g id="link_runtime.ProtobufMarshaller_v1.Duration"><path codeLine="1838" d="M6298.1151,106.1559 C6310.9441,111.2543 6324.7024,115.8122 6338,118.532 C6436.9274,138.7659 9889.4518,90.8246 9973,147.532 C10017.4573,177.7069 10030.055,245.8067 10033.6107,279.8557 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.Duration" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1491,112.5003,6279.5387,98.1714,6300.6775,99.6381,6295.1491,112.5003" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a745231f349a544ce6bc9830af0a3fad]
reverse link runtime.ProtobufReverseMarshaller to v1.Duration--><g id="link_runtime.ProtobufReverseMarshaller_v1.Duration"><path codeLine="1839" d="M6586.8997,78.6376 C7206.1412,81.8482 9901.8402,98.6169 9973,147.532 C10017.2784,177.9689 10029.9599,245.9459 10033.5728,279.9111 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.Duration" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.5739,85.6361,6566.6101,78.5334,6586.6458,71.6363,6586.5739,85.6361" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[613596dbff54b314f41fb3413087ad33]
reverse link runtime.ProtobufMarshaller to v1.FieldsV1--><g id="link_runtime.ProtobufMarshaller_v1.FieldsV1"><path codeLine="1840" d="M6298.1157,106.1529 C6310.9447,111.2515 6324.7029,115.8102 6338,118.532 C6433.3323,138.0455 9759.8893,93.7727 9841,147.532 C9882.1197,174.7857 9897.7541,233.673 9903.6031,269.7732 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.FieldsV1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1497,112.4974,6279.5393,98.1685,6300.6781,99.6351,6295.1497,112.4974" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4778c10ae273adc122cb8e3d7f87f2b3]
reverse link runtime.ProtobufReverseMarshaller to v1.FieldsV1--><g id="link_runtime.ProtobufReverseMarshaller_v1.FieldsV1"><path codeLine="1841" d="M6587.0202,78.7702 C7192.0147,82.5427 9772.1973,101.3197 9841,147.532 C9881.9516,175.0377 9897.6425,233.8403 9903.5475,269.8565 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.FieldsV1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.714,85.7686,6566.7577,78.6449,6586.8006,71.7688,6586.714,85.7686" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e30b72730c78790f8019c4757aa241e7]
reverse link runtime.ProtobufMarshaller to v1.GetOptions--><g id="link_runtime.ProtobufMarshaller_v1.GetOptions"><path codeLine="1842" d="M6298.1065,106.1981 C6310.936,111.294 6324.6968,115.8402 6338,118.532 C6442.5486,139.6869 13923.5633,97.9371 14018,147.532 C14067.0993,173.3173 14098.0715,233.2946 14113.1107,269.8784 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.GetOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1393,112.542,6279.5306,98.2113,6300.6692,99.6804,6295.1393,112.542" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c694f29278e20557aea676391c853fef]
reverse link runtime.ProtobufReverseMarshaller to v1.GetOptions--><g id="link_runtime.ProtobufReverseMarshaller_v1.GetOptions"><path codeLine="1843" d="M6586.6579,78.3984 C7565.3308,81.3455 13932.3406,102.25 14018,147.532 C14067.0293,173.4503 14098.0255,233.3818 14113.0881,269.9214 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.GetOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.5275,85.3981,6566.5486,78.3381,6586.5695,71.3982,6586.5275,85.3981" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e434a27610eb58c7ae58f72166bf45f5]
reverse link runtime.ProtobufMarshaller to v1.GroupKind--><g id="link_runtime.ProtobufMarshaller_v1.GroupKind"><path codeLine="1844" d="M6298.105,106.2057 C6310.9346,111.3011 6324.6957,115.8452 6338,118.532 C6403.4022,131.74 15889.7918,111.5802 15946,147.532 C15984.2567,172.0017 16002.2337,223.0111 16010.4525,259.2903 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.GroupKind" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1376,112.5495,6279.5291,98.2185,6300.6678,99.6881,6295.1376,112.5495" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[40e8e5406088b1779aa6c9ed0a7af9fc]
reverse link runtime.ProtobufReverseMarshaller to v1.GroupKind--><g id="link_runtime.ProtobufReverseMarshaller_v1.GroupKind"><path codeLine="1845" d="M6586.6676,78.4949 C7703.8609,82.6634 15894.3667,114.3494 15946,147.532 C15984.2039,172.0841 16002.1923,223.0758 16010.4281,259.3284 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.GroupKind" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.4816,85.4943,6566.5078,78.4198,6586.5338,71.4944,6586.4816,85.4943" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3dacc7d9617dbfe695bf448850933bed]
reverse link runtime.ProtobufMarshaller to v1.GroupResource--><g id="link_runtime.ProtobufMarshaller_v1.GroupResource"><path codeLine="1846" d="M6298.1063,106.1991 C6310.9358,111.2949 6324.6966,115.8408 6338,118.532 C6445.4356,140.2654 14135.5923,91.837 14230,147.532 C14270.7257,171.5578 14293.3807,222.9312 14304.8656,259.4006 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.GroupResource" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1391,112.543,6279.5304,98.2123,6300.6691,99.6815,6295.1391,112.543" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d8d003c1cead235147029b2c1fa349d6]
reverse link runtime.ProtobufReverseMarshaller to v1.GroupResource--><g id="link_runtime.ProtobufReverseMarshaller_v1.GroupResource"><path codeLine="1847" d="M6586.7054,78.2922 C7581.3046,80.453 14144.2403,96.6336 14230,147.532 C14270.6622,171.665 14293.3311,223.015 14304.8366,259.4497 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.GroupResource" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.6077,85.2921,6566.6229,78.2488,6586.638,71.2921,6586.6077,85.2921" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9829bcf8ef93d4747488cdef71b6cb45]
reverse link runtime.ProtobufMarshaller to v1.GroupVersion--><g id="link_runtime.ProtobufMarshaller_v1.GroupVersion"><path codeLine="1848" d="M6298.1072,106.195 C6310.9366,111.2911 6324.6972,115.8381 6338,118.532 C6434.6637,138.1069 13354.8395,96.1115 13439,147.532 C13478.6927,171.7835 13499.3456,223.1075 13509.4241,259.5039 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.GroupVersion" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.14,112.539,6279.5312,98.2084,6300.6699,99.6773,6295.14,112.539" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[49054d94f7ac01f5c6c9fa75ed95fcf4]
reverse link runtime.ProtobufReverseMarshaller to v1.GroupVersion--><g id="link_runtime.ProtobufReverseMarshaller_v1.GroupVersion"><path codeLine="1849" d="M6586.8101,78.3997 C7522.4856,81.2393 13363.0591,100.8266 13439,147.532 C13478.4943,171.8219 13499.1571,222.87 13509.2939,259.2072 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.GroupVersion" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.5628,85.3991,6566.5841,78.3386,6586.6052,71.3991,6586.5628,85.3991" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a55f7acbd1d2b98de5f6524127045fad]
reverse link runtime.ProtobufMarshaller to v1.GroupVersionForDiscovery--><g id="link_runtime.ProtobufMarshaller_v1.GroupVersionForDiscovery"><path codeLine="1850" d="M6298.1235,106.1152 C6310.952,111.216 6324.708,115.7852 6338,118.532 C6469.0736,145.6182 8626.836,88.5866 8747,147.532 C8794.487,170.8263 8829.1341,222.6323 8848.8931,259.3844 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.GroupVersionForDiscovery" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1585,112.4601,6279.5466,98.1328,6300.6856,99.5973,6295.1585,112.4601" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[61a51549adacfc3f04414e1a7218582d]
reverse link runtime.ProtobufReverseMarshaller to v1.GroupVersionForDiscovery--><g id="link_runtime.ProtobufReverseMarshaller_v1.GroupVersionForDiscovery"><path codeLine="1851" d="M6587.0951,78.9335 C7052.2459,82.6379 8650.0479,98.8641 8747,147.532 C8794.1202,171.1853 8828.7445,222.6402 8848.6048,259.2301 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.GroupVersionForDiscovery" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.7291,85.931,6566.7847,78.774,6586.8391,71.9314,6586.7291,85.931" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e06e0822ee45aba99ad6688ce8d0970d]
reverse link runtime.ProtobufMarshaller to v1.GroupVersionKind--><g id="link_runtime.ProtobufMarshaller_v1.GroupVersionKind"><path codeLine="1852" d="M6298.1256,106.105 C6310.954,111.2064 6324.7094,115.7785 6338,118.532 C6398.4167,131.0491 8505.3255,117.1034 8559,147.532 C8597.4194,169.3124 8622.1391,213.8511 8636.5363,249.1992 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.GroupVersionKind" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1609,112.45,6279.5486,98.1231,6300.6877,99.587,6295.1609,112.45" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[57c5cdb41216bee7c0ced83a3404bba1]
reverse link runtime.ProtobufReverseMarshaller to v1.GroupVersionKind--><g id="link_runtime.ProtobufReverseMarshaller_v1.GroupVersionKind"><path codeLine="1853" d="M6586.7015,78.9286 C7026.4034,82.4884 8473.5247,97.9359 8559,147.532 C8597.1991,169.6966 8621.9428,214.1933 8636.4052,249.4278 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.GroupVersionKind" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.4778,85.9272,6566.5343,78.768,6586.5894,71.9276,6586.4778,85.9272" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[969b3653a03bca064914ee6753a3934f]
reverse link runtime.ProtobufMarshaller to v1.GroupVersionResource--><g id="link_runtime.ProtobufMarshaller_v1.GroupVersionResource"><path codeLine="1854" d="M6298.1084,106.189 C6310.9378,111.2854 6324.698,115.8341 6338,118.532 C6422.244,135.6183 12450.654,108.0315 12527,147.532 C12568.1879,168.8421 12597.2956,213.68 12615.0097,249.2498 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.GroupVersionResource" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1414,112.533,6279.5323,98.2027,6300.671,99.6713,6295.1414,112.533" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[dbec72cd5d1268f197783bc869b29812]
reverse link runtime.ProtobufReverseMarshaller to v1.GroupVersionResource--><g id="link_runtime.ProtobufReverseMarshaller_v1.GroupVersionResource"><path codeLine="1855" d="M6586.8069,78.6977 C7449.4727,83.3553 12458.7348,111.9189 12527,147.532 C12568.1155,168.9815 12597.2314,213.8036 12614.9671,249.3319 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.GroupVersionResource" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.5745,85.6967,6566.6125,78.589,6586.65,71.6969,6586.5745,85.6967" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[67c4f22d46c7fe0f192f880e661d1556]
reverse link runtime.Object to v1.InternalEvent--><g id="link_runtime.Object_v1.InternalEvent"><path codeLine="1856" d="M6126.6807,109.9198 C6132.219,113.3433 6138.0656,116.3635 6144,118.532 C6235.8294,152.0877 6501.1882,94.0022 6583,147.532 C6629.9078,178.2239 6650.525,246.0814 6658.1682,279.9651 " fill="none" id="runtime.Object-backto-v1.InternalEvent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6122.4663,115.5113,6110.3078,98.1569,6130.6349,104.1414,6122.4663,115.5113" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5ec59e285152f09bda6d466760ace7eb]
reverse link runtime.ProtobufMarshaller to v1.LabelSelector--><g id="link_runtime.ProtobufMarshaller_v1.LabelSelector"><path codeLine="1857" d="M6298.109,106.186 C6310.9383,111.2826 6324.6984,115.8321 6338,118.532 C6496.4107,150.6852 12005.0038,92.5325 12157,147.532 C12218.45,169.7676 12274.1088,222.0872 12307.9675,259.2278 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.LabelSelector" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1421,112.53,6279.5329,98.1999,6300.6716,99.6683,6295.1421,112.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fecb7888b05896665c20b3986b7b1671]
reverse link runtime.ProtobufReverseMarshaller to v1.LabelSelector--><g id="link_runtime.ProtobufReverseMarshaller_v1.LabelSelector"><path codeLine="1858" d="M6586.847,78.414 C7412.1787,81.0588 12021.7233,98.0296 12157,147.532 C12218.3693,169.9892 12274.0464,222.2586 12307.9313,259.3272 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.LabelSelector" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.6167,85.4134,6566.6391,78.3496,6586.6613,71.4134,6586.6167,85.4134" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a1a18e7f7585ba89cc7e3e0ae5d33531]
reverse link runtime.ProtobufMarshaller to v1.LabelSelectorRequirement--><g id="link_runtime.ProtobufMarshaller_v1.LabelSelectorRequirement"><path codeLine="1859" d="M6298.1095,106.1836 C6310.9388,111.2803 6324.6987,115.8305 6338,118.532 C6413.5285,133.8718 11816.8084,115.7044 11887,147.532 C11933.0508,168.4132 11969.7778,213.5503 11993.2284,249.3294 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.LabelSelectorRequirement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1427,112.5276,6279.5334,98.1976,6300.6721,99.6658,6295.1427,112.5276" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3a16c9d52bc3b87d8a4c8e257fbfcb9d]
reverse link runtime.ProtobufReverseMarshaller to v1.LabelSelectorRequirement--><g id="link_runtime.ProtobufReverseMarshaller_v1.LabelSelectorRequirement"><path codeLine="1860" d="M6586.9639,78.2409 C7389.8252,79.7431 11762.5536,90.5335 11887,147.532 C11932.9713,168.5876 11969.7076,213.7043 11993.182,249.4313 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.LabelSelectorRequirement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.7171,85.2406,6566.7301,78.2036,6586.743,71.2406,6586.7171,85.2406" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c77b0ff431e6faad503b7703639954c5]
reverse link runtime.ProtobufMarshaller to v1.List--><g id="link_runtime.ProtobufMarshaller_v1.List"><path codeLine="1861" d="M6298.11,106.181 C6310.9393,111.2778 6324.6991,115.8288 6338,118.532 C6481.9211,147.7818 11491.7083,85.8704 11625,147.532 C11679.6437,172.8105 11720.1263,233.264 11740.7214,270.0112 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.List" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1433,112.5251,6279.5339,98.1951,6300.6726,99.6632,6295.1433,112.5251" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4b89f6daf68fab453ec417077cf3773f]
reverse link runtime.ProtobufReverseMarshaller to v1.List--><g id="link_runtime.ProtobufReverseMarshaller_v1.List"><path codeLine="1862" d="M6586.7134,78.3011 C7365.9311,80.142 11507.2833,92.5047 11625,147.532 C11679.3844,172.9542 11719.8252,233.0563 11740.5092,269.7611 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.List" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.4993,85.3007,6566.5157,78.254,6586.5321,71.3008,6586.4993,85.3007" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[189eda0d82945ceb11dd0ae5b5927e4f]
reverse link runtime.ProtobufMarshaller to v1.ListMeta--><g id="link_runtime.ProtobufMarshaller_v1.ListMeta"><path codeLine="1863" d="M6298.1039,106.2111 C6310.9336,111.3061 6324.695,115.8487 6338,118.532 C6377.6497,126.5284 17958.4345,118.8953 17987,147.532 C18073.0026,233.749 18070.502,332.8909 17987,421.532 C17910.3708,502.8773 17094.4075,472.7315 16983,481.532 C16359.1126,530.8155 15612.2313,611.4635 15339.4067,641.6407 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.ListMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1364,112.5548,6279.5281,98.2236,6300.6667,99.6934,6295.1364,112.5548" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e76c70a7e66acd795d4711b041d62378]
reverse link runtime.ProtobufReverseMarshaller to v1.ListMeta--><g id="link_runtime.ProtobufReverseMarshaller_v1.ListMeta"><path codeLine="1864" d="M6587.2603,78.1815 C7840.0497,79.7358 17994.7721,93.9839 18048,147.532 C18133.8513,233.8997 18131.6531,333.0334 18048,421.532 C17966.5841,507.6638 17101.1687,472.4002 16983,481.532 C16359.0294,529.7512 15612.1982,611.0395 15339.3968,641.514 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.ListMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.8834,85.1811,6566.892,78.1564,6586.9007,71.1812,6586.8834,85.1811" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[06e97be6b69ce85935bb9205fac4b2e7]
reverse link v1.Common to v1.ListMeta--><g id="link_v1.Common_v1.ListMeta"><path codeLine="1865" d="M11235.7176,339.5696 C11244.8132,367.4985 11261.4129,403.1127 11290,421.532 C11455.9512,528.4584 14514.7083,630.7677 15126.8798,650.2229 " fill="none" id="v1.Common-backto-v1.ListMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="11228.9251,341.2764,11230.1506,320.1222,11242.3845,337.4235,11228.9251,341.2764" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ba9a59353fe9d2538734569382b26dce]
reverse link v1.ListInterface to v1.ListMeta--><g id="link_v1.ListInterface_v1.ListMeta"><path codeLine="1866" d="M15233,340.4188 C15233,402.2594 15233,520.8144 15233,592.9751 " fill="none" id="v1.ListInterface-backto-v1.ListMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="15226.0001,340.0506,15233,320.0505,15240.0001,340.0505,15226.0001,340.0506" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c574ebd077f17b153d15dccff9afa78f]
reverse link v1.ListMetaAccessor to v1.ListMeta--><g id="link_v1.ListMetaAccessor_v1.ListMeta"><path codeLine="1867" d="M11397.3841,338.2607 C11412.4923,366.5969 11437.2677,403.3323 11471,421.532 C11800.6082,599.3669 14549.345,644.6728 15126.8154,652.2642 " fill="none" id="v1.ListMetaAccessor-backto-v1.ListMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="11391.0992,341.3431,11388.4777,320.3162,11403.6396,335.1189,11391.0992,341.3431" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[72861960de2208a0028f2d1337dfb2f1]
reverse link runtime.ProtobufMarshaller to v1.ListOptions--><g id="link_runtime.ProtobufMarshaller_v1.ListOptions"><path codeLine="1868" d="M6298.1076,106.1928 C6310.937,111.289 6324.6975,115.8366 6338,118.532 C6521.4135,155.6953 12899.2611,83.2091 13075,147.532 C13100.9368,157.0252 13125.7636,171.9951 13148.285,188.9246 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.ListOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1405,112.5368,6279.5316,98.2063,6300.6703,99.6751,6295.1405,112.5368" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[153f51eebb002dc704ba24ce80abd147]
reverse link runtime.ProtobufReverseMarshaller to v1.ListOptions--><g id="link_runtime.ProtobufReverseMarshaller_v1.ListOptions"><path codeLine="1869" d="M6586.606,78.1816 C7486.097,79.3939 12916.9478,89.1261 13075,147.532 C13100.8105,157.0699 13125.5348,172.0019 13147.9845,188.8665 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.ListOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.5045,85.1815,6566.5138,78.1549,6586.5231,71.1816,6586.5045,85.1815" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d594ad05b2f7e8e1def1ac442c9b73b6]
reverse link runtime.ProtobufMarshaller to v1.ManagedFieldsEntry--><g id="link_runtime.ProtobufMarshaller_v1.ManagedFieldsEntry"><path codeLine="1870" d="M6298.1081,106.1906 C6310.9375,111.2869 6324.6978,115.8352 6338,118.532 C6512.4255,153.8943 12579.4125,82.2974 12745,147.532 C12778.3888,160.6858 12809.0893,184.0808 12834.7214,208.6572 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.ManagedFieldsEntry" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1411,112.5346,6279.532,98.2042,6300.6707,99.6729,6295.1411,112.5346" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[135f952848fde274c67177aed036bdb0]
reverse link runtime.ProtobufReverseMarshaller to v1.ManagedFieldsEntry--><g id="link_runtime.ProtobufReverseMarshaller_v1.ManagedFieldsEntry"><path codeLine="1871" d="M6586.8358,78.1743 C7460.8644,79.3134 12596.6127,88.5129 12745,147.532 C12778.3457,160.7948 12809.034,184.2204 12834.6683,208.7914 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.ManagedFieldsEntry" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.6779,85.1742,6566.6869,78.1485,6586.6959,71.1742,6586.6779,85.1742" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[66bc2d60eb8029f4dc3f100f93a60ded]
reverse link runtime.ProtobufMarshaller to v1.MicroTime--><g id="link_runtime.ProtobufMarshaller_v1.MicroTime"><path codeLine="1872" d="M6298.1058,106.2018 C6310.9353,111.2975 6324.6963,115.8426 6338,118.532 C6395.9394,130.2446 14800.5595,115.1314 14850,147.532 C14895.4717,177.3316 14910.2904,245.6073 14914.9545,279.7762 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.MicroTime" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1385,112.5457,6279.5299,98.2149,6300.6685,99.6841,6295.1385,112.5457" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[862501909103b358b776d0bca24726b3]
reverse link runtime.ProtobufReverseMarshaller to v1.MicroTime--><g id="link_runtime.ProtobufReverseMarshaller_v1.MicroTime"><path codeLine="1873" d="M6586.8659,78.1387 C7626.6398,79.1311 14759.7958,88.1022 14850,147.532 C14895.3989,177.4424 14910.2517,245.6662 14914.9391,279.7997 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.MicroTime" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.6142,85.1386,6566.6208,78.1197,6586.6275,71.1386,6586.6142,85.1386" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f88bbab7e82ccc510c80a0877da44597]
reverse link runtime.ProtobufMarshaller to v1.ObjectMeta--><g id="link_runtime.ProtobufMarshaller_v1.ObjectMeta"><path codeLine="1874" d="M6298.1039,106.2109 C6310.9336,111.306 6324.6951,115.8486 6338,118.532 C6377.4523,126.4888 17900.5769,119.0377 17929,147.532 C18015.0021,233.7495 18014.1888,334.5108 17929,421.532 C17874.2095,477.5011 15188.2812,478.966 15110,481.532 C13642.7361,529.6287 11865.0632,620.1544 11363.5581,646.295 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.ObjectMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1364,112.5547,6279.5281,98.2235,6300.6668,99.6933,6295.1364,112.5547" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ff549471bf9c48e0016e0ad05eb5d849]
reverse link runtime.ProtobufReverseMarshaller to v1.ObjectMeta--><g id="link_runtime.ProtobufReverseMarshaller_v1.ObjectMeta"><path codeLine="1875" d="M6587.1125,78.1852 C7835.7609,79.7725 17937.0462,94.258 17990,147.532 C18075.85,233.901 18075.2084,334.5299 17990,421.532 C17934.0115,478.699 15189.975,478.9285 15110,481.532 C13642.7253,529.2981 11865.0599,620.055 11363.5573,646.2726 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.ObjectMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.8008,85.1849,6566.8097,78.1595,6586.8185,71.1849,6586.8008,85.1849" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fa4352ebb9842822d801cde3f33b55a0]
reverse link v1.Common to v1.ObjectMeta--><g id="link_v1.Common_v1.ObjectMeta"><path codeLine="1876" d="M11226,340.2459 C11226,375.2893 11226,428.6385 11226,481.4338 " fill="none" id="v1.Common-backto-v1.ObjectMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="11219.0001,340.0506,11226,320.0505,11233.0001,340.0505,11219.0001,340.0506" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2fc15a7414a582735cedf6c6afb44953]
reverse link v1.Object to v1.ObjectMeta--><g id="link_v1.Object_v1.ObjectMeta"><path codeLine="1877" d="M10531.6236,339.7737 C10539.8944,366.1804 10554.3275,399.8579 10578,421.532 C10721.6555,553.0606 10945.0809,611.151 11088.4547,635.9991 " fill="none" id="v1.Object-backto-v1.ObjectMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="10524.7738,341.2691,10526.1553,320.1246,10538.2612,337.5155,10524.7738,341.2691" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[daa4076a60097539733240626ddc2e42]
reverse link v1.ObjectMetaAccessor to v1.ObjectMeta--><g id="link_v1.ObjectMetaAccessor_v1.ObjectMeta"><path codeLine="1878" d="M10389.2688,337.4588 C10407.1278,364.4496 10434.5248,399.8161 10467,421.532 C10660.0005,550.5898 10927.7565,610.2648 11088.2456,635.981 " fill="none" id="v1.ObjectMetaAccessor-backto-v1.ObjectMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="10383.2448,341.0295,10378.4835,320.3817,10395.0817,333.5537,10383.2448,341.0295" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[16acad86a2d933dc30334c76cb2f4ab5]
reverse link runtime.ProtobufMarshaller to v1.OwnerReference--><g id="link_runtime.ProtobufMarshaller_v1.OwnerReference"><path codeLine="1879" d="M6298.106,106.2009 C6310.9355,111.2965 6324.6964,115.842 6338,118.532 C6450.6786,141.316 14511.9874,96.5027 14615,147.532 C14646.0983,162.9372 14671.2389,190.9941 14690.1298,218.8808 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.OwnerReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1387,112.5447,6279.5301,98.2139,6300.6687,99.6832,6295.1387,112.5447" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0cadf01b27bf8f187c4e6d95f8866d55]
reverse link runtime.ProtobufReverseMarshaller to v1.OwnerReference--><g id="link_runtime.ProtobufReverseMarshaller_v1.OwnerReference"><path codeLine="1880" d="M6586.8056,78.3488 C7609.2587,81.0128 14521.1423,100.744 14615,147.532 C14646.0596,163.0152 14671.1928,191.0867 14690.0888,218.9633 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.OwnerReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.5159,85.3482,6566.5342,78.2962,6586.5523,71.3482,6586.5159,85.3482" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d86274018b9a1c05be1f46afb99804b0]
reverse link runtime.ProtobufMarshaller to v1.PartialObjectMetadata--><g id="link_runtime.ProtobufMarshaller_v1.PartialObjectMetadata"><path codeLine="1881" d="M6298.1062,106.1999 C6310.9357,111.2957 6324.6965,115.8413 6338,118.532 C6447.7507,140.7293 14300.747,95.6977 14400,147.532 C14454.1835,175.829 14486.683,245.4653 14499.9831,279.9772 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.PartialObjectMetadata" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1389,112.5438,6279.5302,98.213,6300.6689,99.6822,6295.1389,112.5438" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[76411ff5108c857f818a0684c48b0ac2]
reverse link runtime.ProtobufReverseMarshaller to v1.PartialObjectMetadata--><g id="link_runtime.ProtobufReverseMarshaller_v1.PartialObjectMetadata"><path codeLine="1882" d="M6587.0235,78.3462 C7594.8721,80.9521 14309.7191,100.0867 14400,147.532 C14454.1104,175.9686 14486.6447,245.5383 14499.9681,280.0059 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.PartialObjectMetadata" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.6649,85.3454,6566.683,78.2938,6586.701,71.3454,6586.6649,85.3454" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d680916d590150d35cf3d0f94038a52d]
reverse link runtime.ProtobufMarshaller to v1.PartialObjectMetadataList--><g id="link_runtime.ProtobufMarshaller_v1.PartialObjectMetadataList"><path codeLine="1883" d="M6298.1124,106.169 C6310.9416,111.2666 6324.7007,115.8209 6338,118.532 C6456.2648,142.6408 10573.6801,96.3758 10683,147.532 C10737.0231,172.8121 10776.6853,232.963 10796.8972,269.7152 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.PartialObjectMetadataList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.146,112.5133,6279.5362,98.1838,6300.675,99.6513,6295.146,112.5133" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0f44e34ef22a9fff7e5d465250878f4d]
reverse link runtime.ProtobufReverseMarshaller to v1.PartialObjectMetadataList--><g id="link_runtime.ProtobufReverseMarshaller_v1.PartialObjectMetadataList"><path codeLine="1884" d="M6586.8808,78.6782 C7278.4464,82.403 10588.0977,102.5552 10683,147.532 C10736.8988,173.0761 10776.6037,233.1363 10796.8571,269.8005 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.PartialObjectMetadataList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.6748,85.6773,6566.7126,78.5703,6586.7498,71.6775,6586.6748,85.6773" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[465d69e86fd861ec522956cc5ba67cf2]
reverse link runtime.ProtobufMarshaller to v1.Patch--><g id="link_runtime.ProtobufMarshaller_v1.Patch"><path codeLine="1885" d="M6298.1128,106.1673 C6310.9419,111.265 6324.7009,115.8198 6338,118.532 C6395.6889,130.2971 10529.1358,113.2472 10577,147.532 C10619.8387,178.217 10628.3413,246.0777 10629.8358,279.9636 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.Patch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1464,112.5116,6279.5365,98.1822,6300.6753,99.6496,6295.1464,112.5116" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a40ef0eae868e12bf39cce8566dd6bd0]
reverse link runtime.ProtobufReverseMarshaller to v1.Patch--><g id="link_runtime.ProtobufReverseMarshaller_v1.Patch"><path codeLine="1886" d="M6586.7618,78.1879 C7268.5773,79.2734 10494.1766,87.5746 10577,147.532 C10619.684,178.4318 10628.2592,246.1918 10629.803,280.0091 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.Patch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.6203,85.1878,6566.6311,78.1568,6586.642,71.1878,6586.6203,85.1878" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d982a4868f458981dbabc6f13d9ec92f]
reverse link runtime.ProtobufMarshaller to v1.PatchOptions--><g id="link_runtime.ProtobufMarshaller_v1.PatchOptions"><path codeLine="1887" d="M6298.1067,106.1971 C6310.9362,111.293 6324.6969,115.8395 6338,118.532 C6439.7977,139.1357 13724.5975,98.2078 13816,147.532 C13852.1905,167.0617 13877.6116,205.8566 13893.8981,239.4283 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.PatchOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1396,112.541,6279.5308,98.2104,6300.6694,99.6794,6295.1396,112.541" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[dc14c3f7a3ce17ccba9931d28a963ad7]
reverse link runtime.ProtobufReverseMarshaller to v1.PatchOptions--><g id="link_runtime.ProtobufReverseMarshaller_v1.PatchOptions"><path codeLine="1888" d="M6586.6825,78.4137 C7550.4228,81.4362 13733.2329,102.5697 13816,147.532 C13852.1359,167.1625 13877.5577,205.9562 13893.8581,239.5021 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.PatchOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.5147,85.4133,6566.5367,78.3508,6586.5585,71.4134,6586.5147,85.4133" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[07ae8879c5b323dcd2b1d149b9447d03]
reverse link runtime.ProtobufMarshaller to v1.Preconditions--><g id="link_runtime.ProtobufMarshaller_v1.Preconditions"><path codeLine="1889" d="M6298.107,106.1959 C6310.9365,111.2919 6324.6971,115.8387 6338,118.532 C6436.8154,138.5381 13507.439,101.2334 13597,147.532 C13642.2425,170.9201 13672.9047,222.7052 13689.9051,259.4269 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.Preconditions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1398,112.5399,6279.531,98.2093,6300.6697,99.6782,6295.1398,112.5399" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9c65ebc7b4a20f849aeede4c2a50eef1]
reverse link runtime.ProtobufReverseMarshaller to v1.Preconditions--><g id="link_runtime.ProtobufReverseMarshaller_v1.Preconditions"><path codeLine="1890" d="M6586.9888,78.4789 C7535.095,81.9345 13516.0562,105.393 13597,147.532 C13642.1752,171.05 13672.8523,222.8062 13689.8746,259.4858 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.Preconditions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.8034,85.4784,6566.829,78.4057,6586.8544,71.4785,6586.8034,85.4784" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ed8395afc3a088337fcc5de2cb26ee4d]
reverse link runtime.ProtobufMarshaller to v1.RootPaths--><g id="link_runtime.ProtobufMarshaller_v1.RootPaths"><path codeLine="1891" d="M6298.4968,106.1116 C6311.2252,111.1664 6324.846,115.7177 6338,118.532 C6398.5397,131.4846 7399.8739,114.1299 7452,147.532 C7494.4793,174.7525 7513.6725,233.6509 7521.735,269.7622 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.RootPaths" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.6739,112.5177,6280.0408,98.2136,6301.182,99.6467,6295.6739,112.5177" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[255028c56835ec56c0e1eb96317df2ce]
reverse link runtime.ProtobufReverseMarshaller to v1.RootPaths--><g id="link_runtime.ProtobufReverseMarshaller_v1.RootPaths"><path codeLine="1892" d="M6586.8961,79.9191 C6837.7263,84.6767 7381.8329,100.3607 7452,147.532 C7493.7479,175.5979 7513.1545,233.9246 7521.4608,269.7544 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.RootPaths" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.6839,86.9165,6566.8161,79.5498,6586.9415,72.9189,6586.6839,86.9165" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[57c987fe2b1763088a73e21a1b65ddcc]
reverse link runtime.ProtobufMarshaller to v1.ServerAddressByClientCIDR--><g id="link_runtime.ProtobufMarshaller_v1.ServerAddressByClientCIDR"><path codeLine="1893" d="M6298.513,106.0368 C6311.2403,111.0963 6324.8567,115.6685 6338,118.532 C6431.9609,139.0033 7116.8657,104.7698 7203,147.532 C7250.6799,171.2032 7286.2959,222.6541 7306.8454,259.2383 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.ServerAddressByClientCIDR" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.6918,112.4436,6280.0562,98.1422,6301.1976,99.5717,6295.6918,112.4436" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b1074f399f61f787ab627257f7165a9c]
reverse link runtime.ProtobufReverseMarshaller to v1.ServerAddressByClientCIDR--><g id="link_runtime.ProtobufReverseMarshaller_v1.ServerAddressByClientCIDR"><path codeLine="1894" d="M6586.6854,84.5022 C6784.1358,95.4574 7150.071,119.2492 7203,147.532 C7249.649,172.4591 7285.2664,223.1064 7306.1097,259.1902 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.ServerAddressByClientCIDR" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.2536,91.4891,6566.6673,83.4035,6587.0209,77.5102,6586.2536,91.4891" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c81f4c97035d9a77ad0630d5d0c0ca42]
reverse link runtime.ProtobufMarshaller to v1.Status--><g id="link_runtime.ProtobufMarshaller_v1.Status"><path codeLine="1895" d="M6298.5359,105.9329 C6311.2617,110.999 6324.8717,115.6002 6338,118.532 C6409.6394,134.5307 6934.0302,111.5316 6998,147.532 C7030.1995,165.653 7054.161,198.6635 7070.739,229.3492 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.Status" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.7172,112.3408,6280.0781,98.0433,6301.2198,99.4675,6295.7172,112.3408" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[0d03e07ae31e0f96794c680d36ce9d0b]
reverse link runtime.ProtobufReverseMarshaller to v1.Status--><g id="link_runtime.ProtobufReverseMarshaller_v1.Status"><path codeLine="1896" d="M6586.7285,82.4105 C6723.4305,89.224 6931.3406,106.2033 6998,147.532 C7028.9964,166.7497 7052.6703,199.2837 7069.3712,229.3777 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.Status" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.3299,89.3995,6566.6846,81.4584,6586.9942,75.4153,6586.3299,89.3995" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[bb0c0584258a0a7f5347c7d9a910a72d]
reverse link runtime.ProtobufMarshaller to v1.StatusCause--><g id="link_runtime.ProtobufMarshaller_v1.StatusCause"><path codeLine="1897" d="M6298.1146,106.1586 C6310.9436,111.2568 6324.7021,115.814 6338,118.532 C6440.3319,139.4481 10008.2814,94.0542 10098,147.532 C10134.8688,169.5081 10156.6812,214.0254 10168.7968,249.3157 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.StatusCause" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1484,112.503,6279.5382,98.1739,6300.677,99.6408,6295.1484,112.503" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a0ea3ab35619fa1a4ee737813a7ca0b2]
reverse link runtime.ProtobufReverseMarshaller to v1.StatusCause--><g id="link_runtime.ProtobufReverseMarshaller_v1.StatusCause"><path codeLine="1898" d="M6587.1515,78.7206 C7219.9596,82.3867 10021.2845,101.2105 10098,147.532 C10134.743,169.7177 10156.5692,214.2121 10168.7219,249.4404 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.StatusCause" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.8319,85.719,6566.8725,78.604,6586.9125,71.7192,6586.8319,85.719" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7746e83080627066e316188705db5aa9]
reverse link runtime.ProtobufMarshaller to v1.StatusDetails--><g id="link_runtime.ProtobufMarshaller_v1.StatusDetails"><path codeLine="1899" d="M6298.1117,106.1728 C6310.9409,111.2702 6324.7002,115.8234 6338,118.532 C6463.3189,144.0543 10828.3318,88.9168 10942,147.532 C10972.0295,163.0173 10995.7575,190.9083 11013.3709,218.6427 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.StatusDetails" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1452,112.517,6279.5355,98.1874,6300.6742,99.655,6295.1452,112.517" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e5f9fb4e3597ccc890a598c1e863b273]
reverse link runtime.ProtobufReverseMarshaller to v1.StatusDetails--><g id="link_runtime.ProtobufReverseMarshaller_v1.StatusDetails"><path codeLine="1900" d="M6586.8206,78.4353 C7303.5696,80.9218 10842.8139,95.8052 10942,147.532 C10971.9579,163.1554 10995.6722,191.0729 11013.2946,218.7898 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.StatusDetails" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.6671,85.4349,6566.6913,78.3662,6586.7153,71.435,6586.6671,85.4349" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c624bc90ff69a8dcf3e7d89dc51a95b1]
reverse link runtime.ProtobufMarshaller to v1.TableOptions--><g id="link_runtime.ProtobufMarshaller_v1.TableOptions"><path codeLine="1901" d="M6298.4902,106.1425 C6311.219,111.1953 6324.8417,115.738 6338,118.532 C6475.4176,147.7111 7473.5437,90.6637 7602,147.532 C7654.2803,170.6768 7696.8295,222.5161 7722.007,259.3166 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.TableOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.6666,112.5483,6280.0345,98.243,6301.1756,99.6777,6295.6666,112.5483" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4aea02d01369ee5578e1cda578d20c1e]
reverse link runtime.ProtobufReverseMarshaller to v1.TableOptions--><g id="link_runtime.ProtobufReverseMarshaller_v1.TableOptions"><path codeLine="1902" d="M6586.9992,80.5195 C6864.6881,86.7447 7511.9351,105.6012 7602,147.532 C7653.6668,171.5861 7696.2087,222.9533 7721.5608,259.4136 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.TableOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.7014,87.5148,6566.8605,80.0758,6587.0099,73.5182,6586.7014,87.5148" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f34bd0cc6c15f272b01e1252057082a9]
reverse link runtime.ProtobufMarshaller to v1.Time--><g id="link_runtime.ProtobufMarshaller_v1.Time"><path codeLine="1903" d="M6298.1162,106.1505 C6310.9452,111.2492 6324.7032,115.8086 6338,118.532 C6430.6087,137.4998 9664.6857,91.7442 9741,147.532 C9783.2871,178.4449 9790.4303,246.1988 9791.2416,280.0119 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.Time" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1503,112.495,6279.5398,98.1662,6300.6786,99.6327,6295.1503,112.495" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7773b03faf5a3616ad53796802341153]
reverse link runtime.ProtobufReverseMarshaller to v1.Time--><g id="link_runtime.ProtobufReverseMarshaller_v1.Time"><path codeLine="1904" d="M6587.2152,78.724 C7181.7046,82.2277 9676.5104,99.759 9741,147.532 C9782.9785,178.6292 9790.2872,245.9812 9791.1928,279.7986 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.Time" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.835,85.722,6566.8762,78.6052,6586.9168,71.7222,6586.835,85.722" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9121507544f7ee11a227d7345fda28e1]
reverse link runtime.ProtobufMarshaller to v1.Timestamp--><g id="link_runtime.ProtobufMarshaller_v1.Timestamp"><path codeLine="1905" d="M6298.1103,106.1793 C6310.9396,111.2763 6324.6993,115.8277 6338,118.532 C6407.8634,132.7367 11410.387,109.9989 11471,147.532 C11510.2111,171.8125 11530.1969,222.8626 11539.8457,259.2028 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.Timestamp" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1437,112.5234,6279.5342,98.1935,6300.6729,99.6616,6295.1437,112.5234" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1aff016405b6857302606a4a5a8ab957]
reverse link runtime.ProtobufReverseMarshaller to v1.Timestamp--><g id="link_runtime.ProtobufReverseMarshaller_v1.Timestamp"><path codeLine="1906" d="M6586.7384,78.8918 C7357.9921,84.2717 11417.5952,114.1579 11471,147.532 C11510.111,171.9735 11530.1183,222.989 11539.7994,259.2773 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.Timestamp" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.6884,85.8917,6566.7376,78.7526,6586.7859,71.892,6586.6884,85.8917" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7bc33dd50bf9ea369276f3832938cdab]
reverse link runtime.ProtobufMarshaller to v1.TypeMeta--><g id="link_runtime.ProtobufMarshaller_v1.TypeMeta"><path codeLine="1907" d="M6298.1057,106.2024 C6310.9352,111.298 6324.6962,115.843 6338,118.532 C6396.8587,130.4288 14933.1995,117.1579 14985,147.532 C15025.9036,171.5166 15048.891,222.899 15060.6085,259.3817 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.TypeMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1384,112.5462,6279.5298,98.2154,6300.6684,99.6847,6295.1384,112.5462" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d49442d1ff71ef49b852191857fc838d]
reverse link runtime.ProtobufReverseMarshaller to v1.TypeMeta--><g id="link_runtime.ProtobufReverseMarshaller_v1.TypeMeta"><path codeLine="1908" d="M6586.8059,78.1947 C7635.6101,79.6526 14890.3893,91.7498 14985,147.532 C15025.8459,171.6147 15048.8459,222.9756 15060.5821,259.4266 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.TypeMeta" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.7417,85.1947,6566.7514,78.167,6586.761,71.1947,6586.7417,85.1947" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5084f9e215aa1e00c83f1bc5b9357281]
reverse link runtime.ProtobufMarshaller to v1.UpdateOptions--><g id="link_runtime.ProtobufMarshaller_v1.UpdateOptions"><path codeLine="1909" d="M6298.1212,106.1262 C6310.9498,111.2264 6324.7065,115.7925 6338,118.532 C6410.1277,133.3958 8924.3149,112.3301 8989,147.532 C9028.7474,169.1627 9055.5395,213.9643 9071.4835,249.4388 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.UpdateOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.156,112.471,6279.5445,98.1433,6300.6834,99.6083,6295.156,112.471" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7944b5092b5d61a8e273d882d27d0184]
reverse link runtime.ProtobufReverseMarshaller to v1.UpdateOptions--><g id="link_runtime.ProtobufReverseMarshaller_v1.UpdateOptions"><path codeLine="1910" d="M6586.7484,78.2816 C7082.9471,79.6783 8883.1525,88.7891 8989,147.532 C9028.4282,169.4137 9055.1913,213.9413 9071.2084,249.2595 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.UpdateOptions" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.5092,85.2811,6566.5282,78.227,6586.5471,71.2812,6586.5092,85.2811" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[771ec21a1d5192518124d7d6de40deb3]
reverse link runtime.ProtobufMarshaller to v1.Verbs--><g id="link_runtime.ProtobufMarshaller_v1.Verbs"><path codeLine="1911" d="M6298.1168,106.1478 C6310.9457,111.2467 6324.7036,115.8068 6338,118.532 C6427.7762,136.9322 9562.7073,93.8763 9637,147.532 C9679.6324,178.3219 9687.6924,246.1334 9688.9663,279.9858 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.Verbs" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6295.1509,112.4923,6279.5403,98.1637,6300.6792,99.63,6295.1509,112.4923" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2e3ac6f2c09b6a88c46a8ba97df2c1b5]
reverse link runtime.ProtobufReverseMarshaller to v1.Verbs--><g id="link_runtime.ProtobufReverseMarshaller_v1.Verbs"><path codeLine="1912" d="M6586.9655,78.8288 C7169.2368,82.7541 9574.4342,101.7197 9637,147.532 C9679.3171,178.5176 9687.5412,245.9215 9688.9126,279.7746 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.Verbs" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6586.5774,85.8265,6566.6247,78.6928,6586.671,71.8268,6586.5774,85.8265" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[824deecd352d2eb116eea0095c841261]
reverse link runtime.Object to v1.WatchEvent--><g id="link_runtime.Object_v1.WatchEvent"><path codeLine="1913" d="M6126.4946,109.9237 C6132.0831,113.3705 6137.9929,116.3958 6144,118.532 C6268.9364,162.9612 6621.1032,88.8241 6740,147.532 C6788.5061,171.483 6825.798,222.8727 6847.5308,259.3663 " fill="none" id="runtime.Object-backto-v1.WatchEvent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6122.1459,115.4182,6110.0104,98.0479,6130.3295,104.0591,6122.1459,115.4182" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e1ceb385b2e4b247c32992aa86d6f264]
reverse link runtime.ProtobufMarshaller to v1.WatchEvent--><g id="link_runtime.ProtobufMarshaller_v1.WatchEvent"><path codeLine="1914" d="M6299.7313,106.1026 C6312.1257,111.0121 6325.3012,115.5081 6338,118.532 C6425.1293,139.2794 6660.1605,106.941 6740,147.532 C6788.0681,171.9701 6825.337,222.9864 6847.1907,259.2757 " fill="none" id="runtime.ProtobufMarshaller-backto-v1.WatchEvent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6296.7628,112.4474,6281.0783,98.1997,6302.2244,99.5566,6296.7628,112.4474" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[87f70c550fcc3e9966d5ae583a710e39]
reverse link runtime.ProtobufReverseMarshaller to v1.WatchEvent--><g id="link_runtime.ProtobufReverseMarshaller_v1.WatchEvent"><path codeLine="1915" d="M6586.5164,92.2106 C6637.0277,102.1273 6694.0662,118.963 6740,147.532 C6785.0534,175.5535 6822.3318,224.5525 6845.036,259.4452 " fill="none" id="runtime.ProtobufReverseMarshaller-backto-v1.WatchEvent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6585.2088,99.0876,6566.7875,88.6159,6587.7184,85.3144,6585.2088,99.0876" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b6d110a3ddb43677f5381a9d714c4ce0]
@startuml
namespace runtime {
    class Allocator << (S,Aquamarine) >> {
        - buf []byte

        + Allocate(n uint64) []byte

    }
    interface CacheableObject  {
        + CacheEncode(id Identifier, encode <font color=blue>func</font>(Object, io.Writer) error, w io.Writer) error
        + GetObject() Object

    }
    interface ClientNegotiator  {
        + Encoder(contentType string, params <font color=blue>map</font>[string]string) (Encoder, error)
        + Decoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, error)
        + StreamDecoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, Serializer, Framer, error)

    }
    interface Decoder  {
        + Decode(data []byte, defaults *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    interface Encoder  {
        + Encode(obj Object, w io.Writer) error
        + Identifier() Identifier

    }
    interface EncoderWithAllocator  {
        + EncodeWithAllocator(obj Object, w io.Writer, memAlloc MemoryAllocator) error

    }
    interface EquivalentResourceMapper  {
        + EquivalentResourcesFor(resource schema.GroupVersionResource, subresource string) []schema.GroupVersionResource
        + KindFor(resource schema.GroupVersionResource, subresource string) schema.GroupVersionKind

    }
    interface EquivalentResourceRegistry  {
        + RegisterKindFor(resource schema.GroupVersionResource, subresource string, kind schema.GroupVersionKind) 

    }
    interface Framer  {
        + NewFrameReader(r io.ReadCloser) io.ReadCloser
        + NewFrameWriter(w io.Writer) io.Writer

    }
    interface GroupVersioner  {
        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    interface MemoryAllocator  {
        + Allocate(n uint64) []byte

    }
    class MultiObjectTyper << (S,Aquamarine) >> {
        + ObjectKinds(obj Object) ([]schema.GroupVersionKind, bool, error)
        + Recognizes(gvk schema.GroupVersionKind) bool

    }
    interface Namer  {
        + Name(obj Object) (string, error)
        + Namespace(obj Object) (string, error)

    }
    class NegotiateError << (S,Aquamarine) >> {
        + ContentType string
        + Stream bool

        + Error() string

    }
    interface NegotiatedSerializer  {
        + SupportedMediaTypes() []SerializerInfo
        + EncoderForVersion(serializer Encoder, gv GroupVersioner) Encoder
        + DecoderToVersion(serializer Decoder, gv GroupVersioner) Decoder

    }
    interface NestedObjectDecoder  {
        + DecodeNestedObjects(d Decoder) error

    }
    interface NestedObjectEncoder  {
        + EncodeNestedObjects(e Encoder) error

    }
    class NoopDecoder << (S,Aquamarine) >> {
        + Decode(data []byte, gvk *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    class NoopEncoder << (S,Aquamarine) >> {
        + Encode(obj Object, w io.Writer) error
        + Identifier() Identifier

    }
    interface Object  {
        + GetObjectKind() schema.ObjectKind
        + DeepCopyObject() Object

    }
    interface ObjectConvertor  {
        + Convert(in <font color=blue>interface</font>{}, out <font color=blue>interface</font>{}, context <font color=blue>interface</font>{}) error
        + ConvertToVersion(in Object, gv GroupVersioner) (Object, error)
        + ConvertFieldLabel(gvk schema.GroupVersionKind, label string, value string) (string, string, error)

    }
    interface ObjectCreater  {
        + New(kind schema.GroupVersionKind) (Object, error)

    }
    interface ObjectDefaulter  {
        + Default(in Object) 

    }
    interface ObjectTyper  {
        + ObjectKinds( Object) ([]schema.GroupVersionKind, bool, error)
        + Recognizes(gvk schema.GroupVersionKind) bool

    }
    interface ObjectVersioner  {
        + ConvertToVersion(in Object, gv GroupVersioner) (Object, error)

    }
    class Pair << (S,Aquamarine) >> {
        + Name string

    }
    interface ParameterCodec  {
        + DecodeParameters(parameters url.Values, from schema.GroupVersion, into Object) error
        + EncodeParameters(obj Object, to schema.GroupVersion) (url.Values, error)

    }
    interface ProtobufMarshaller  {
        + MarshalTo(data []byte) (int, error)

    }
    interface ProtobufReverseMarshaller  {
        + MarshalToSizedBuffer(data []byte) (int, error)

    }
    class RawExtension << (S,Aquamarine) >> {
        + Raw []byte
        + Object Object

        + UnmarshalJSON(in []byte) error
        + MarshalJSON() ([]byte, error)
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + DeepCopyInto(out *RawExtension) 
        + DeepCopy() *RawExtension

    }
    interface ResourceVersioner  {
        + SetResourceVersion(obj Object, version string) error
        + ResourceVersion(obj Object) (string, error)

    }
    class Scheme << (S,Aquamarine) >> {
        - gvkToType <font color=blue>map</font>[schema.GroupVersionKind]reflect.Type
        - typeToGVK <font color=blue>map</font>[reflect.Type][]schema.GroupVersionKind
        - unversionedTypes <font color=blue>map</font>[reflect.Type]schema.GroupVersionKind
        - unversionedKinds <font color=blue>map</font>[string]reflect.Type
        - fieldLabelConversionFuncs <font color=blue>map</font>[schema.GroupVersionKind]FieldLabelConversionFunc
        - defaulterFuncs <font color=blue>map</font>[reflect.Type]<font color=blue>func</font>(<font color=blue>interface</font>{}) 
        - converter *conversion.Converter
        - versionPriority <font color=blue>map</font>[string][]string
        - observedVersions []schema.GroupVersion
        - schemeName string

        - convertToVersion(copy bool, in Object, target GroupVersioner) (Object, error)
        - unstructuredToTyped(in Unstructured) (Object, error)
        - generateConvertMeta(in <font color=blue>interface</font>{}) *conversion.Meta
        - addObservedVersion(version schema.GroupVersion) 

        + Converter() *conversion.Converter
        + AddUnversionedTypes(version schema.GroupVersion, types ...Object) 
        + AddKnownTypes(gv schema.GroupVersion, types ...Object) 
        + AddKnownTypeWithName(gvk schema.GroupVersionKind, obj Object) 
        + KnownTypes(gv schema.GroupVersion) <font color=blue>map</font>[string]reflect.Type
        + VersionsForGroupKind(gk schema.GroupKind) []schema.GroupVersion
        + AllKnownTypes() <font color=blue>map</font>[schema.GroupVersionKind]reflect.Type
        + ObjectKinds(obj Object) ([]schema.GroupVersionKind, bool, error)
        + Recognizes(gvk schema.GroupVersionKind) bool
        + IsUnversioned(obj Object) (bool, bool)
        + New(kind schema.GroupVersionKind) (Object, error)
        + AddIgnoredConversionType(from <font color=blue>interface</font>{}, to <font color=blue>interface</font>{}) error
        + AddConversionFunc(a <font color=blue>interface</font>{}, b <font color=blue>interface</font>{}, fn conversion.ConversionFunc) error
        + AddGeneratedConversionFunc(a <font color=blue>interface</font>{}, b <font color=blue>interface</font>{}, fn conversion.ConversionFunc) error
        + AddFieldLabelConversionFunc(gvk schema.GroupVersionKind, conversionFunc FieldLabelConversionFunc) error
        + AddTypeDefaultingFunc(srcType Object, fn <font color=blue>func</font>(<font color=blue>interface</font>{}) ) 
        + Default(src Object) 
        + Convert(in <font color=blue>interface</font>{}, out <font color=blue>interface</font>{}, context <font color=blue>interface</font>{}) error
        + ConvertFieldLabel(gvk schema.GroupVersionKind, label string, value string) (string, string, error)
        + ConvertToVersion(in Object, target GroupVersioner) (Object, error)
        + UnsafeConvertToVersion(in Object, target GroupVersioner) (Object, error)
        + SetVersionPriority(versions ...schema.GroupVersion) error
        + PrioritizedVersionsForGroup(group string) []schema.GroupVersion
        + PrioritizedVersionsAllGroups() []schema.GroupVersion
        + PreferredVersionAllGroups() []schema.GroupVersion
        + IsGroupRegistered(group string) bool
        + IsVersionRegistered(version schema.GroupVersion) bool
        + Name() string

    }
    class SchemeBuilder << (S,Aquamarine) >> {
        + AddToScheme(s *Scheme) error
        + Register(funcs ...<font color=blue>func</font>(*Scheme) error) 

    }
    interface Serializer  {
    }
    class SerializerInfo << (S,Aquamarine) >> {
        + MediaType string
        + MediaTypeType string
        + MediaTypeSubType string
        + EncodesAsText bool
        + Serializer Serializer
        + PrettySerializer Serializer
        + StrictSerializer Serializer
        + StreamSerializer *StreamSerializerInfo

    }
    class SimpleAllocator << (S,Aquamarine) >> {
        + Allocate(n uint64) []byte

    }
    interface StorageSerializer  {
        + SupportedMediaTypes() []SerializerInfo
        + UniversalDeserializer() Decoder
        + EncoderForVersion(serializer Encoder, gv GroupVersioner) Encoder
        + DecoderToVersion(serializer Decoder, gv GroupVersioner) Decoder

    }
    class StreamSerializerInfo << (S,Aquamarine) >> {
        + EncodesAsText bool

    }
    class TypeMeta << (S,Aquamarine) >> {
        + APIVersion string
        + Kind string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SetGroupVersionKind(gvk schema.GroupVersionKind) 
        + GroupVersionKind() schema.GroupVersionKind
        + GetObjectKind() schema.ObjectKind

    }
    class Unknown << (S,Aquamarine) >> {
        + Raw []byte
        + ContentEncoding string
        + ContentType string

        + UnmarshalJSON(in []byte) error
        + MarshalJSON() ([]byte, error)
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + NestedMarshalTo(data []byte, b ProtobufMarshaller, size uint64) (int, error)
        + DeepCopyInto(out *Unknown) 
        + DeepCopy() *Unknown
        + DeepCopyObject() Object

    }
    interface Unstructured  {
        + NewEmptyInstance() Unstructured
        + UnstructuredContent() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + SetUnstructuredContent( <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 
        + IsList() bool
        + EachListItem( <font color=blue>func</font>(Object) error) error

    }
    interface UnstructuredConverter  {
        + ToUnstructured(obj <font color=blue>interface</font>{}) (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)
        + FromUnstructured(u <font color=blue>map</font>[string]<font color=blue>interface</font>{}, obj <font color=blue>interface</font>{}) error

    }
    class WithVersionEncoder << (S,Aquamarine) >> {
        + Version GroupVersioner

        + Encode(obj Object, stream io.Writer) error

    }
    class WithoutVersionDecoder << (S,Aquamarine) >> {
        + Decode(data []byte, defaults *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    class base64Serializer << (S,Aquamarine) >> {
        - identifier Identifier

        - doEncode(obj Object, stream io.Writer) error

        + Encode(obj Object, stream io.Writer) error
        + Identifier() Identifier
        + Decode(data []byte, defaults *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    class buffer << (S,Aquamarine) >> {
        - lines []bufferedLine

        - addLine(line string, indent int) 
        - flushLines(w io.Writer) error

    }
    class bufferedLine << (S,Aquamarine) >> {
        - line string
        - indentation int

    }
    class clientNegotiator << (S,Aquamarine) >> {
        - serializer NegotiatedSerializer
        - encode GroupVersioner

        + Encoder(contentType string, params <font color=blue>map</font>[string]string) (Encoder, error)
        + Decoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, error)
        + StreamDecoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, Serializer, Framer, error)

    }
    class codec << (S,Aquamarine) >> {
    }
    class defaultFramer << (S,Aquamarine) >> {
        + NewFrameReader(r io.ReadCloser) io.ReadCloser
        + NewFrameWriter(w io.Writer) io.Writer

    }
    class disabledGroupVersioner << (S,Aquamarine) >> {
        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    class encodable << (S,Aquamarine) >> {
        - obj Object
        - versions []schema.GroupVersion

        + E Encoder

        + GetObjectKind() schema.ObjectKind
        + DeepCopyObject() Object
        + UnmarshalJSON(in []byte) error
        + MarshalJSON() ([]byte, error)

    }
    class equivalentResourceRegistry << (S,Aquamarine) >> {
        - keyFunc <font color=blue>func</font>(schema.GroupResource) string
        - resources <font color=blue>map</font>[string]<font color=blue>map</font>[string][]schema.GroupVersionResource
        - kinds <font color=blue>map</font>[schema.GroupVersionResource]<font color=blue>map</font>[string]schema.GroupVersionKind
        - keys <font color=blue>map</font>[schema.GroupResource]string
        - mutex sync.RWMutex

        + EquivalentResourcesFor(resource schema.GroupVersionResource, subresource string) []schema.GroupVersionResource
        + KindFor(resource schema.GroupVersionResource, subresource string) schema.GroupVersionKind
        + RegisterKindFor(resource schema.GroupVersionResource, subresource string, kind schema.GroupVersionKind) 

    }
    class fieldInfo << (S,Aquamarine) >> {
        - name string
        - nameValue reflect.Value
        - omitempty bool

    }
    class fieldsCache << (S,Aquamarine) >> {
        - value atomic.Value

    }
    class fromUnstructuredContext << (S,Aquamarine) >> {
        - isInlined bool
        - matchedKeys []<font color=blue>map</font>[string]<font color=blue>struct</font>{}
        - parentPath []string
        - returnUnknownFields bool
        - unknownFieldErrors []error

        - pushMatchedKeyTracker() 
        - recordMatchedKey(key string) 
        - popAndVerifyMatchedKeys(mapValue reflect.Value) 
        - recordUnknownField(field string) 
        - pushIndex(index int) 
        - pushKey(key string) 

    }
    class internalGroupVersioner << (S,Aquamarine) >> {
        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    class missingKindErr << (S,Aquamarine) >> {
        - data string

        + Error() string

    }
    class missingVersionErr << (S,Aquamarine) >> {
        - data string

        + Error() string

    }
    class multiGroupVersioner << (S,Aquamarine) >> {
        - target schema.GroupVersion
        - acceptedGroupKinds []schema.GroupKind
        - coerce bool

        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    class notRegisteredErr << (S,Aquamarine) >> {
        - schemeName string
        - gvk schema.GroupVersionKind
        - target GroupVersioner
        - t reflect.Type

        + Error() string

    }
    class parameterCodec << (S,Aquamarine) >> {
        - typer ObjectTyper
        - convertor ObjectConvertor
        - creator ObjectCreater
        - defaulter ObjectDefaulter

        + DecodeParameters(parameters url.Values, from schema.GroupVersion, into Object) error
        + EncodeParameters(obj Object, to schema.GroupVersion) (url.Values, error)

    }
    class runtime.Codec << (T, #FF7700) >>  {
    }
    class runtime.FieldLabelConversionFunc << (T, #FF7700) >>  {
    }
    class runtime.Identifier << (T, #FF7700) >>  {
    }
    class runtime.KubeTypes << (T, #FF7700) >>  {
    }
    class runtime.MultiObjectTyper << (T, #FF7700) >>  {
    }
    class runtime.SchemeBuilder << (T, #FF7700) >>  {
    }
    class runtime.fieldsCacheMap << (T, #FF7700) >>  {
    }
    class simpleNegotiatedSerializer << (S,Aquamarine) >> {
        - info SerializerInfo

        + SupportedMediaTypes() []SerializerInfo
        + EncoderForVersion(e Encoder, _ GroupVersioner) Encoder
        + DecoderToVersion(d Decoder, _gv GroupVersioner) Decoder

    }
    class strictDecodingError << (S,Aquamarine) >> {
        - errors []error

        + Error() string
        + Errors() []error

    }
    class structField << (S,Aquamarine) >> {
        - structType reflect.Type
        - field int

    }
    class unsafeObjectConvertor << (S,Aquamarine) >> {
        + ConvertToVersion(in Object, outVersion GroupVersioner) (Object, error)

    }
    class unstructuredConverter << (S,Aquamarine) >> {
        - mismatchDetection bool
        - comparison conversion.Equalities

        + FromUnstructuredWithValidation(u <font color=blue>map</font>[string]<font color=blue>interface</font>{}, obj <font color=blue>interface</font>{}, returnUnknownFields bool) error
        + FromUnstructured(u <font color=blue>map</font>[string]<font color=blue>interface</font>{}, obj <font color=blue>interface</font>{}) error
        + ToUnstructured(obj <font color=blue>interface</font>{}) (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)

    }
}
"runtime.MemoryAllocator" <|- - "runtime.Allocator"
"runtime.ObjectTyper" <|- - "runtime.MultiObjectTyper"
"runtime.Decoder" <|- - "runtime.NoopDecoder"
"runtime.Encoder" <|- - "runtime.NoopEncoder"
"runtime.ProtobufMarshaller" <|- - "runtime.RawExtension"
"runtime.ProtobufReverseMarshaller" <|- - "runtime.RawExtension"
"runtime.ObjectConvertor" <|- - "runtime.Scheme"
"runtime.ObjectCreater" <|- - "runtime.Scheme"
"runtime.ObjectDefaulter" <|- - "runtime.Scheme"
"runtime.ObjectTyper" <|- - "runtime.Scheme"
"runtime.ObjectVersioner" <|- - "runtime.Scheme"
"runtime.MemoryAllocator" <|- - "runtime.SimpleAllocator"
"runtime.ProtobufMarshaller" <|- - "runtime.TypeMeta"
"runtime.ProtobufReverseMarshaller" <|- - "runtime.TypeMeta"
"runtime.ProtobufMarshaller" <|- - "runtime.Unknown"
"runtime.ProtobufReverseMarshaller" <|- - "runtime.Unknown"
"runtime.Decoder" <|- - "runtime.WithoutVersionDecoder"
"runtime.Decoder" <|- - "runtime.base64Serializer"
"runtime.Encoder" <|- - "runtime.base64Serializer"
"runtime.ClientNegotiator" <|- - "runtime.clientNegotiator"
"runtime.Framer" <|- - "runtime.defaultFramer"
"runtime.GroupVersioner" <|- - "runtime.disabledGroupVersioner"
"runtime.Object" <|- - "runtime.encodable"
"runtime.EquivalentResourceMapper" <|- - "runtime.equivalentResourceRegistry"
"runtime.EquivalentResourceRegistry" <|- - "runtime.equivalentResourceRegistry"
"runtime.GroupVersioner" <|- - "runtime.internalGroupVersioner"
"runtime.GroupVersioner" <|- - "runtime.multiGroupVersioner"
"runtime.ParameterCodec" <|- - "runtime.parameterCodec"
"runtime.NegotiatedSerializer" <|- - "runtime.simpleNegotiatedSerializer"
"runtime.ObjectVersioner" <|- - "runtime.unsafeObjectConvertor"
"runtime.UnstructuredConverter" <|- - "runtime.unstructuredConverter"

namespace v1 {
    class APIGroup << (S,Aquamarine) >> {
        + Name string
        + Versions []GroupVersionForDiscovery
        + PreferredVersion GroupVersionForDiscovery
        + ServerAddressByClientCIDRs []ServerAddressByClientCIDR

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIGroup) 
        + DeepCopy() *APIGroup
        + DeepCopyObject() runtime.Object

    }
    class APIGroupList << (S,Aquamarine) >> {
        + Groups []APIGroup

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIGroupList) 
        + DeepCopy() *APIGroupList
        + DeepCopyObject() runtime.Object

    }
    class APIResource << (S,Aquamarine) >> {
        + Name string
        + SingularName string
        + Namespaced bool
        + Group string
        + Version string
        + Kind string
        + Verbs Verbs
        + ShortNames []string
        + Categories []string
        + StorageVersionHash string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIResource) 
        + DeepCopy() *APIResource

    }
    class APIResourceList << (S,Aquamarine) >> {
        + GroupVersion string
        + APIResources []APIResource

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIResourceList) 
        + DeepCopy() *APIResourceList
        + DeepCopyObject() runtime.Object

    }
    class APIVersions << (S,Aquamarine) >> {
        + Versions []string
        + ServerAddressByClientCIDRs []ServerAddressByClientCIDR

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + GoString() string
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIVersions) 
        + DeepCopy() *APIVersions
        + DeepCopyObject() runtime.Object

    }
    class ApplyOptions << (S,Aquamarine) >> {
        + DryRun []string
        + Force bool
        + FieldManager string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + ToPatchOptions() PatchOptions
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ApplyOptions) 
        + DeepCopy() *ApplyOptions

    }
    interface Common  {
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 

    }
    class Condition << (S,Aquamarine) >> {
        + Type string
        + Status ConditionStatus
        + ObservedGeneration int64
        + LastTransitionTime Time
        + Reason string
        + Message string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Condition) 
        + DeepCopy() *Condition

    }
    class CreateOptions << (S,Aquamarine) >> {
        + DryRun []string
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *CreateOptions) 
        + DeepCopy() *CreateOptions
        + DeepCopyObject() runtime.Object

    }
    class DeleteOptions << (S,Aquamarine) >> {
        + GracePeriodSeconds *int64
        + Preconditions *Preconditions
        + OrphanDependents *bool
        + PropagationPolicy *DeletionPropagation
        + DryRun []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *DeleteOptions) 
        + DeepCopy() *DeleteOptions
        + DeepCopyObject() runtime.Object

    }
    class Duration << (S,Aquamarine) >> {
        + UnmarshalJSON(b []byte) error
        + MarshalJSON() ([]byte, error)
        + ToUnstructured() <font color=blue>interface</font>{}
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + DeepCopyInto(out *Duration) 
        + DeepCopy() *Duration

    }
    class FieldsV1 << (S,Aquamarine) >> {
        + Raw []byte

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + String() string
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *FieldsV1) 
        + DeepCopy() *FieldsV1

    }
    class GetOptions << (S,Aquamarine) >> {
        + ResourceVersion string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *GetOptions) 
        + DeepCopy() *GetOptions
        + DeepCopyObject() runtime.Object

    }
    class GroupKind << (S,Aquamarine) >> {
        + Group string
        + Kind string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupKind) 
        + DeepCopy() *GroupKind

    }
    class GroupResource << (S,Aquamarine) >> {
        + Group string
        + Resource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupResource) 
        + DeepCopy() *GroupResource

    }
    class GroupVersion << (S,Aquamarine) >> {
        + Group string
        + Version string

        - unmarshal(value []byte) error

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + Empty() bool
        + String() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(value []byte) error
        + UnmarshalText(value []byte) error
        + DeepCopyInto(out *GroupVersion) 
        + DeepCopy() *GroupVersion

    }
    class GroupVersionForDiscovery << (S,Aquamarine) >> {
        + GroupVersion string
        + Version string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *GroupVersionForDiscovery) 
        + DeepCopy() *GroupVersionForDiscovery

    }
    class GroupVersionKind << (S,Aquamarine) >> {
        + Group string
        + Version string
        + Kind string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupVersionKind) 
        + DeepCopy() *GroupVersionKind

    }
    class GroupVersionResource << (S,Aquamarine) >> {
        + Group string
        + Version string
        + Resource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupVersionResource) 
        + DeepCopy() *GroupVersionResource

    }
    class InternalEvent << (S,Aquamarine) >> {
        + GetObjectKind() schema.ObjectKind
        + DeepCopyObject() runtime.Object
        + DeepCopyInto(out *InternalEvent) 
        + DeepCopy() *InternalEvent

    }
    class LabelSelector << (S,Aquamarine) >> {
        + MatchLabels <font color=blue>map</font>[string]string
        + MatchExpressions []LabelSelectorRequirement

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *LabelSelector) 
        + DeepCopy() *LabelSelector

    }
    class LabelSelectorRequirement << (S,Aquamarine) >> {
        + Key string
        + Operator LabelSelectorOperator
        + Values []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *LabelSelectorRequirement) 
        + DeepCopy() *LabelSelectorRequirement

    }
    class List << (S,Aquamarine) >> {
        + Items []runtime.RawExtension

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *List) 
        + DeepCopy() *List
        + DeepCopyObject() runtime.Object

    }
    interface ListInterface  {
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 

    }
    class ListMeta << (S,Aquamarine) >> {
        + SelfLink string
        + ResourceVersion string
        + Continue string
        + RemainingItemCount *int64

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 
        + GetListMeta() ListInterface
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ListMeta) 
        + DeepCopy() *ListMeta

    }
    interface ListMetaAccessor  {
        + GetListMeta() ListInterface

    }
    class ListOptions << (S,Aquamarine) >> {
        + LabelSelector string
        + FieldSelector string
        + Watch bool
        + AllowWatchBookmarks bool
        + ResourceVersion string
        + ResourceVersionMatch ResourceVersionMatch
        + TimeoutSeconds *int64
        + Limit int64
        + Continue string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ListOptions) 
        + DeepCopy() *ListOptions
        + DeepCopyObject() runtime.Object

    }
    class ManagedFieldsEntry << (S,Aquamarine) >> {
        + Manager string
        + Operation ManagedFieldsOperationType
        + APIVersion string
        + Time *Time
        + FieldsType string
        + FieldsV1 *FieldsV1
        + Subresource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ManagedFieldsEntry) 
        + DeepCopy() *ManagedFieldsEntry

    }
    class MicroTime << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + DeepCopyInto(out *MicroTime) 
        + IsZero() bool
        + Before(u *MicroTime) bool
        + Equal(u *MicroTime) bool
        + BeforeTime(u *Time) bool
        + EqualTime(u *Time) bool
        + UnmarshalJSON(b []byte) error
        + UnmarshalQueryParameter(str string) error
        + MarshalJSON() ([]byte, error)
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + MarshalQueryParameter() (string, error)
        + Fuzz(c gofuzz.Continue) 
        + ProtoMicroTime() *Timestamp
        + Size() int
        + Unmarshal(data []byte) error
        + Marshal() ([]byte, error)
        + MarshalTo(data []byte) (int, error)
        + MarshalToSizedBuffer(data []byte) (int, error)
        + DeepCopy() *MicroTime

    }
    interface Object  {
        + GetNamespace() string
        + SetNamespace(namespace string) 
        + GetName() string
        + SetName(name string) 
        + GetGenerateName() string
        + SetGenerateName(name string) 
        + GetUID() types.UID
        + SetUID(uid types.UID) 
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetGeneration() int64
        + SetGeneration(generation int64) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetCreationTimestamp() Time
        + SetCreationTimestamp(timestamp Time) 
        + GetDeletionTimestamp() *Time
        + SetDeletionTimestamp(timestamp *Time) 
        + GetDeletionGracePeriodSeconds() *int64
        + SetDeletionGracePeriodSeconds( *int64) 
        + GetLabels() <font color=blue>map</font>[string]string
        + SetLabels(labels <font color=blue>map</font>[string]string) 
        + GetAnnotations() <font color=blue>map</font>[string]string
        + SetAnnotations(annotations <font color=blue>map</font>[string]string) 
        + GetFinalizers() []string
        + SetFinalizers(finalizers []string) 
        + GetOwnerReferences() []OwnerReference
        + SetOwnerReferences( []OwnerReference) 
        + GetManagedFields() []ManagedFieldsEntry
        + SetManagedFields(managedFields []ManagedFieldsEntry) 

    }
    class ObjectMeta << (S,Aquamarine) >> {
        + Name string
        + GenerateName string
        + Namespace string
        + SelfLink string
        + UID types.UID
        + ResourceVersion string
        + Generation int64
        + CreationTimestamp Time
        + DeletionTimestamp *Time
        + DeletionGracePeriodSeconds *int64
        + Labels <font color=blue>map</font>[string]string
        + Annotations <font color=blue>map</font>[string]string
        + OwnerReferences []OwnerReference
        + Finalizers []string
        + ManagedFields []ManagedFieldsEntry

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectMeta() Object
        + GetNamespace() string
        + SetNamespace(namespace string) 
        + GetName() string
        + SetName(name string) 
        + GetGenerateName() string
        + SetGenerateName(generateName string) 
        + GetUID() types.UID
        + SetUID(uid types.UID) 
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetGeneration() int64
        + SetGeneration(generation int64) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetCreationTimestamp() Time
        + SetCreationTimestamp(creationTimestamp Time) 
        + GetDeletionTimestamp() *Time
        + SetDeletionTimestamp(deletionTimestamp *Time) 
        + GetDeletionGracePeriodSeconds() *int64
        + SetDeletionGracePeriodSeconds(deletionGracePeriodSeconds *int64) 
        + GetLabels() <font color=blue>map</font>[string]string
        + SetLabels(labels <font color=blue>map</font>[string]string) 
        + GetAnnotations() <font color=blue>map</font>[string]string
        + SetAnnotations(annotations <font color=blue>map</font>[string]string) 
        + GetFinalizers() []string
        + SetFinalizers(finalizers []string) 
        + GetOwnerReferences() []OwnerReference
        + SetOwnerReferences(references []OwnerReference) 
        + GetManagedFields() []ManagedFieldsEntry
        + SetManagedFields(managedFields []ManagedFieldsEntry) 
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ObjectMeta) 
        + DeepCopy() *ObjectMeta

    }
    interface ObjectMetaAccessor  {
        + GetObjectMeta() Object

    }
    class OwnerReference << (S,Aquamarine) >> {
        + APIVersion string
        + Kind string
        + Name string
        + UID types.UID
        + Controller *bool
        + BlockOwnerDeletion *bool

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *OwnerReference) 
        + DeepCopy() *OwnerReference

    }
    class PartialObjectMetadata << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PartialObjectMetadata) 
        + DeepCopy() *PartialObjectMetadata
        + DeepCopyObject() runtime.Object

    }
    class PartialObjectMetadataList << (S,Aquamarine) >> {
        + Items []PartialObjectMetadata

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PartialObjectMetadataList) 
        + DeepCopy() *PartialObjectMetadataList
        + DeepCopyObject() runtime.Object

    }
    class Patch << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Patch) 
        + DeepCopy() *Patch

    }
    class PatchOptions << (S,Aquamarine) >> {
        + DryRun []string
        + Force *bool
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PatchOptions) 
        + DeepCopy() *PatchOptions
        + DeepCopyObject() runtime.Object

    }
    class Preconditions << (S,Aquamarine) >> {
        + UID *types.UID
        + ResourceVersion *string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Preconditions) 
        + DeepCopy() *Preconditions

    }
    class RootPaths << (S,Aquamarine) >> {
        + Paths []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *RootPaths) 
        + DeepCopy() *RootPaths

    }
    class ServerAddressByClientCIDR << (S,Aquamarine) >> {
        + ClientCIDR string
        + ServerAddress string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ServerAddressByClientCIDR) 
        + DeepCopy() *ServerAddressByClientCIDR

    }
    class Status << (S,Aquamarine) >> {
        + Status string
        + Message string
        + Reason StatusReason
        + Details *StatusDetails
        + Code int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Status) 
        + DeepCopy() *Status
        + DeepCopyObject() runtime.Object

    }
    class StatusCause << (S,Aquamarine) >> {
        + Type CauseType
        + Message string
        + Field string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *StatusCause) 
        + DeepCopy() *StatusCause

    }
    class StatusDetails << (S,Aquamarine) >> {
        + Name string
        + Group string
        + Kind string
        + UID types.UID
        + Causes []StatusCause
        + RetryAfterSeconds int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *StatusDetails) 
        + DeepCopy() *StatusDetails

    }
    class Table << (S,Aquamarine) >> {
        + ColumnDefinitions []TableColumnDefinition
        + Rows []TableRow

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Table) 
        + DeepCopy() *Table
        + DeepCopyObject() runtime.Object

    }
    class TableColumnDefinition << (S,Aquamarine) >> {
        + Name string
        + Type string
        + Format string
        + Description string
        + Priority int32

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableColumnDefinition) 
        + DeepCopy() *TableColumnDefinition

    }
    class TableOptions << (S,Aquamarine) >> {
        + NoHeaders bool
        + IncludeObject IncludeObjectPolicy

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableOptions) 
        + DeepCopy() *TableOptions
        + DeepCopyObject() runtime.Object

    }
    class TableRow << (S,Aquamarine) >> {
        + Cells []<font color=blue>interface</font>{}
        + Conditions []TableRowCondition
        + Object runtime.RawExtension

        + DeepCopy() *TableRow
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableRow) 

    }
    class TableRowCondition << (S,Aquamarine) >> {
        + Type RowConditionType
        + Status ConditionStatus
        + Reason string
        + Message string

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableRowCondition) 
        + DeepCopy() *TableRowCondition

    }
    class Time << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + DeepCopyInto(out *Time) 
        + IsZero() bool
        + Before(u *Time) bool
        + Equal(u *Time) bool
        + Rfc3339Copy() Time
        + UnmarshalJSON(b []byte) error
        + UnmarshalQueryParameter(str string) error
        + MarshalJSON() ([]byte, error)
        + ToUnstructured() <font color=blue>interface</font>{}
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + MarshalQueryParameter() (string, error)
        + Fuzz(c gofuzz.Continue) 
        + ProtoTime() *Timestamp
        + Size() int
        + Unmarshal(data []byte) error
        + Marshal() ([]byte, error)
        + MarshalTo(data []byte) (int, error)
        + MarshalToSizedBuffer(data []byte) (int, error)
        + DeepCopy() *Time

    }
    class Timestamp << (S,Aquamarine) >> {
        + Seconds int64
        + Nanos int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + DeepCopyInto(out *Timestamp) 
        + DeepCopy() *Timestamp

    }
    interface Type  {
        + GetAPIVersion() string
        + SetAPIVersion(version string) 
        + GetKind() string
        + SetKind(kind string) 

    }
    class TypeMeta << (S,Aquamarine) >> {
        + Kind string
        + APIVersion string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectKind() schema.ObjectKind
        + SetGroupVersionKind(gvk schema.GroupVersionKind) 
        + GroupVersionKind() schema.GroupVersionKind
        + SwaggerDoc() <font color=blue>map</font>[string]string

    }
    class UpdateOptions << (S,Aquamarine) >> {
        + DryRun []string
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *UpdateOptions) 
        + DeepCopy() *UpdateOptions
        + DeepCopyObject() runtime.Object

    }
    class Verbs << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *Verbs) 
        + DeepCopy() Verbs

    }
    class WatchEvent << (S,Aquamarine) >> {
        + Type string
        + Object runtime.RawExtension

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectKind() schema.ObjectKind
        + DeepCopyInto(out *WatchEvent) 
        + DeepCopy() *WatchEvent
        + DeepCopyObject() runtime.Object

    }
    class v1.CauseType << (T, #FF7700) >>  {
    }
    class v1.ConditionStatus << (T, #FF7700) >>  {
    }
    class v1.DeletionPropagation << (T, #FF7700) >>  {
    }
    class v1.IncludeObjectPolicy << (T, #FF7700) >>  {
    }
    class v1.InternalEvent << (T, #FF7700) >>  {
    }
    class v1.LabelSelectorOperator << (T, #FF7700) >>  {
    }
    class v1.ManagedFieldsOperationType << (T, #FF7700) >>  {
    }
    class v1.ResourceVersionMatch << (T, #FF7700) >>  {
    }
    class v1.RowConditionType << (T, #FF7700) >>  {
    }
    class v1.StatusReason << (T, #FF7700) >>  {
    }
    class v1.Verbs << (T, #FF7700) >>  {
    }
    class "watch.Event" as watchEvent {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}
"runtime.ProtobufMarshaller" <|- - "v1.APIGroup"
"runtime.ProtobufReverseMarshaller" <|- - "v1.APIGroup"
"runtime.ProtobufMarshaller" <|- - "v1.APIGroupList"
"runtime.ProtobufReverseMarshaller" <|- - "v1.APIGroupList"
"runtime.ProtobufMarshaller" <|- - "v1.APIResource"
"runtime.ProtobufReverseMarshaller" <|- - "v1.APIResource"
"runtime.ProtobufMarshaller" <|- - "v1.APIResourceList"
"runtime.ProtobufReverseMarshaller" <|- - "v1.APIResourceList"
"runtime.ProtobufMarshaller" <|- - "v1.APIVersions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.APIVersions"
"runtime.ProtobufMarshaller" <|- - "v1.ApplyOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.ApplyOptions"
"runtime.ProtobufMarshaller" <|- - "v1.Condition"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Condition"
"runtime.ProtobufMarshaller" <|- - "v1.CreateOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.CreateOptions"
"runtime.ProtobufMarshaller" <|- - "v1.DeleteOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.DeleteOptions"
"runtime.ProtobufMarshaller" <|- - "v1.Duration"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Duration"
"runtime.ProtobufMarshaller" <|- - "v1.FieldsV1"
"runtime.ProtobufReverseMarshaller" <|- - "v1.FieldsV1"
"runtime.ProtobufMarshaller" <|- - "v1.GetOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GetOptions"
"runtime.ProtobufMarshaller" <|- - "v1.GroupKind"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GroupKind"
"runtime.ProtobufMarshaller" <|- - "v1.GroupResource"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GroupResource"
"runtime.ProtobufMarshaller" <|- - "v1.GroupVersion"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GroupVersion"
"runtime.ProtobufMarshaller" <|- - "v1.GroupVersionForDiscovery"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GroupVersionForDiscovery"
"runtime.ProtobufMarshaller" <|- - "v1.GroupVersionKind"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GroupVersionKind"
"runtime.ProtobufMarshaller" <|- - "v1.GroupVersionResource"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GroupVersionResource"
"runtime.Object" <|- - "v1.InternalEvent"
"runtime.ProtobufMarshaller" <|- - "v1.LabelSelector"
"runtime.ProtobufReverseMarshaller" <|- - "v1.LabelSelector"
"runtime.ProtobufMarshaller" <|- - "v1.LabelSelectorRequirement"
"runtime.ProtobufReverseMarshaller" <|- - "v1.LabelSelectorRequirement"
"runtime.ProtobufMarshaller" <|- - "v1.List"
"runtime.ProtobufReverseMarshaller" <|- - "v1.List"
"runtime.ProtobufMarshaller" <|- - "v1.ListMeta"
"runtime.ProtobufReverseMarshaller" <|- - "v1.ListMeta"
"v1.Common" <|- - "v1.ListMeta"
"v1.ListInterface" <|- - "v1.ListMeta"
"v1.ListMetaAccessor" <|- - "v1.ListMeta"
"runtime.ProtobufMarshaller" <|- - "v1.ListOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.ListOptions"
"runtime.ProtobufMarshaller" <|- - "v1.ManagedFieldsEntry"
"runtime.ProtobufReverseMarshaller" <|- - "v1.ManagedFieldsEntry"
"runtime.ProtobufMarshaller" <|- - "v1.MicroTime"
"runtime.ProtobufReverseMarshaller" <|- - "v1.MicroTime"
"runtime.ProtobufMarshaller" <|- - "v1.ObjectMeta"
"runtime.ProtobufReverseMarshaller" <|- - "v1.ObjectMeta"
"v1.Common" <|- - "v1.ObjectMeta"
"v1.Object" <|- - "v1.ObjectMeta"
"v1.ObjectMetaAccessor" <|- - "v1.ObjectMeta"
"runtime.ProtobufMarshaller" <|- - "v1.OwnerReference"
"runtime.ProtobufReverseMarshaller" <|- - "v1.OwnerReference"
"runtime.ProtobufMarshaller" <|- - "v1.PartialObjectMetadata"
"runtime.ProtobufReverseMarshaller" <|- - "v1.PartialObjectMetadata"
"runtime.ProtobufMarshaller" <|- - "v1.PartialObjectMetadataList"
"runtime.ProtobufReverseMarshaller" <|- - "v1.PartialObjectMetadataList"
"runtime.ProtobufMarshaller" <|- - "v1.Patch"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Patch"
"runtime.ProtobufMarshaller" <|- - "v1.PatchOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.PatchOptions"
"runtime.ProtobufMarshaller" <|- - "v1.Preconditions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Preconditions"
"runtime.ProtobufMarshaller" <|- - "v1.RootPaths"
"runtime.ProtobufReverseMarshaller" <|- - "v1.RootPaths"
"runtime.ProtobufMarshaller" <|- - "v1.ServerAddressByClientCIDR"
"runtime.ProtobufReverseMarshaller" <|- - "v1.ServerAddressByClientCIDR"
"runtime.ProtobufMarshaller" <|- - "v1.Status"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Status"
"runtime.ProtobufMarshaller" <|- - "v1.StatusCause"
"runtime.ProtobufReverseMarshaller" <|- - "v1.StatusCause"
"runtime.ProtobufMarshaller" <|- - "v1.StatusDetails"
"runtime.ProtobufReverseMarshaller" <|- - "v1.StatusDetails"
"runtime.ProtobufMarshaller" <|- - "v1.TableOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.TableOptions"
"runtime.ProtobufMarshaller" <|- - "v1.Time"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Time"
"runtime.ProtobufMarshaller" <|- - "v1.Timestamp"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Timestamp"
"runtime.ProtobufMarshaller" <|- - "v1.TypeMeta"
"runtime.ProtobufReverseMarshaller" <|- - "v1.TypeMeta"
"runtime.ProtobufMarshaller" <|- - "v1.UpdateOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.UpdateOptions"
"runtime.ProtobufMarshaller" <|- - "v1.Verbs"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Verbs"
"runtime.Object" <|- - "v1.WatchEvent"
"runtime.ProtobufMarshaller" <|- - "v1.WatchEvent"
"runtime.ProtobufReverseMarshaller" <|- - "v1.WatchEvent"

hide methods
@enduml

@startuml
namespace runtime {
    class Allocator << (S,Aquamarine) >> {
        - buf []byte

        + Allocate(n uint64) []byte

    }
    interface CacheableObject  {
        + CacheEncode(id Identifier, encode <font color=blue>func</font>(Object, io.Writer) error, w io.Writer) error
        + GetObject() Object

    }
    interface ClientNegotiator  {
        + Encoder(contentType string, params <font color=blue>map</font>[string]string) (Encoder, error)
        + Decoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, error)
        + StreamDecoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, Serializer, Framer, error)

    }
    interface Decoder  {
        + Decode(data []byte, defaults *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    interface Encoder  {
        + Encode(obj Object, w io.Writer) error
        + Identifier() Identifier

    }
    interface EncoderWithAllocator  {
        + EncodeWithAllocator(obj Object, w io.Writer, memAlloc MemoryAllocator) error

    }
    interface EquivalentResourceMapper  {
        + EquivalentResourcesFor(resource schema.GroupVersionResource, subresource string) []schema.GroupVersionResource
        + KindFor(resource schema.GroupVersionResource, subresource string) schema.GroupVersionKind

    }
    interface EquivalentResourceRegistry  {
        + RegisterKindFor(resource schema.GroupVersionResource, subresource string, kind schema.GroupVersionKind) 

    }
    interface Framer  {
        + NewFrameReader(r io.ReadCloser) io.ReadCloser
        + NewFrameWriter(w io.Writer) io.Writer

    }
    interface GroupVersioner  {
        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    interface MemoryAllocator  {
        + Allocate(n uint64) []byte

    }
    class MultiObjectTyper << (S,Aquamarine) >> {
        + ObjectKinds(obj Object) ([]schema.GroupVersionKind, bool, error)
        + Recognizes(gvk schema.GroupVersionKind) bool

    }
    interface Namer  {
        + Name(obj Object) (string, error)
        + Namespace(obj Object) (string, error)

    }
    class NegotiateError << (S,Aquamarine) >> {
        + ContentType string
        + Stream bool

        + Error() string

    }
    interface NegotiatedSerializer  {
        + SupportedMediaTypes() []SerializerInfo
        + EncoderForVersion(serializer Encoder, gv GroupVersioner) Encoder
        + DecoderToVersion(serializer Decoder, gv GroupVersioner) Decoder

    }
    interface NestedObjectDecoder  {
        + DecodeNestedObjects(d Decoder) error

    }
    interface NestedObjectEncoder  {
        + EncodeNestedObjects(e Encoder) error

    }
    class NoopDecoder << (S,Aquamarine) >> {
        + Decode(data []byte, gvk *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    class NoopEncoder << (S,Aquamarine) >> {
        + Encode(obj Object, w io.Writer) error
        + Identifier() Identifier

    }
    interface Object  {
        + GetObjectKind() schema.ObjectKind
        + DeepCopyObject() Object

    }
    interface ObjectConvertor  {
        + Convert(in <font color=blue>interface</font>{}, out <font color=blue>interface</font>{}, context <font color=blue>interface</font>{}) error
        + ConvertToVersion(in Object, gv GroupVersioner) (Object, error)
        + ConvertFieldLabel(gvk schema.GroupVersionKind, label string, value string) (string, string, error)

    }
    interface ObjectCreater  {
        + New(kind schema.GroupVersionKind) (Object, error)

    }
    interface ObjectDefaulter  {
        + Default(in Object) 

    }
    interface ObjectTyper  {
        + ObjectKinds( Object) ([]schema.GroupVersionKind, bool, error)
        + Recognizes(gvk schema.GroupVersionKind) bool

    }
    interface ObjectVersioner  {
        + ConvertToVersion(in Object, gv GroupVersioner) (Object, error)

    }
    class Pair << (S,Aquamarine) >> {
        + Name string

    }
    interface ParameterCodec  {
        + DecodeParameters(parameters url.Values, from schema.GroupVersion, into Object) error
        + EncodeParameters(obj Object, to schema.GroupVersion) (url.Values, error)

    }
    interface ProtobufMarshaller  {
        + MarshalTo(data []byte) (int, error)

    }
    interface ProtobufReverseMarshaller  {
        + MarshalToSizedBuffer(data []byte) (int, error)

    }
    class RawExtension << (S,Aquamarine) >> {
        + Raw []byte
        + Object Object

        + UnmarshalJSON(in []byte) error
        + MarshalJSON() ([]byte, error)
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + DeepCopyInto(out *RawExtension) 
        + DeepCopy() *RawExtension

    }
    interface ResourceVersioner  {
        + SetResourceVersion(obj Object, version string) error
        + ResourceVersion(obj Object) (string, error)

    }
    class Scheme << (S,Aquamarine) >> {
        - gvkToType <font color=blue>map</font>[schema.GroupVersionKind]reflect.Type
        - typeToGVK <font color=blue>map</font>[reflect.Type][]schema.GroupVersionKind
        - unversionedTypes <font color=blue>map</font>[reflect.Type]schema.GroupVersionKind
        - unversionedKinds <font color=blue>map</font>[string]reflect.Type
        - fieldLabelConversionFuncs <font color=blue>map</font>[schema.GroupVersionKind]FieldLabelConversionFunc
        - defaulterFuncs <font color=blue>map</font>[reflect.Type]<font color=blue>func</font>(<font color=blue>interface</font>{}) 
        - converter *conversion.Converter
        - versionPriority <font color=blue>map</font>[string][]string
        - observedVersions []schema.GroupVersion
        - schemeName string

        - convertToVersion(copy bool, in Object, target GroupVersioner) (Object, error)
        - unstructuredToTyped(in Unstructured) (Object, error)
        - generateConvertMeta(in <font color=blue>interface</font>{}) *conversion.Meta
        - addObservedVersion(version schema.GroupVersion) 

        + Converter() *conversion.Converter
        + AddUnversionedTypes(version schema.GroupVersion, types ...Object) 
        + AddKnownTypes(gv schema.GroupVersion, types ...Object) 
        + AddKnownTypeWithName(gvk schema.GroupVersionKind, obj Object) 
        + KnownTypes(gv schema.GroupVersion) <font color=blue>map</font>[string]reflect.Type
        + VersionsForGroupKind(gk schema.GroupKind) []schema.GroupVersion
        + AllKnownTypes() <font color=blue>map</font>[schema.GroupVersionKind]reflect.Type
        + ObjectKinds(obj Object) ([]schema.GroupVersionKind, bool, error)
        + Recognizes(gvk schema.GroupVersionKind) bool
        + IsUnversioned(obj Object) (bool, bool)
        + New(kind schema.GroupVersionKind) (Object, error)
        + AddIgnoredConversionType(from <font color=blue>interface</font>{}, to <font color=blue>interface</font>{}) error
        + AddConversionFunc(a <font color=blue>interface</font>{}, b <font color=blue>interface</font>{}, fn conversion.ConversionFunc) error
        + AddGeneratedConversionFunc(a <font color=blue>interface</font>{}, b <font color=blue>interface</font>{}, fn conversion.ConversionFunc) error
        + AddFieldLabelConversionFunc(gvk schema.GroupVersionKind, conversionFunc FieldLabelConversionFunc) error
        + AddTypeDefaultingFunc(srcType Object, fn <font color=blue>func</font>(<font color=blue>interface</font>{}) ) 
        + Default(src Object) 
        + Convert(in <font color=blue>interface</font>{}, out <font color=blue>interface</font>{}, context <font color=blue>interface</font>{}) error
        + ConvertFieldLabel(gvk schema.GroupVersionKind, label string, value string) (string, string, error)
        + ConvertToVersion(in Object, target GroupVersioner) (Object, error)
        + UnsafeConvertToVersion(in Object, target GroupVersioner) (Object, error)
        + SetVersionPriority(versions ...schema.GroupVersion) error
        + PrioritizedVersionsForGroup(group string) []schema.GroupVersion
        + PrioritizedVersionsAllGroups() []schema.GroupVersion
        + PreferredVersionAllGroups() []schema.GroupVersion
        + IsGroupRegistered(group string) bool
        + IsVersionRegistered(version schema.GroupVersion) bool
        + Name() string

    }
    class SchemeBuilder << (S,Aquamarine) >> {
        + AddToScheme(s *Scheme) error
        + Register(funcs ...<font color=blue>func</font>(*Scheme) error) 

    }
    interface Serializer  {
    }
    class SerializerInfo << (S,Aquamarine) >> {
        + MediaType string
        + MediaTypeType string
        + MediaTypeSubType string
        + EncodesAsText bool
        + Serializer Serializer
        + PrettySerializer Serializer
        + StrictSerializer Serializer
        + StreamSerializer *StreamSerializerInfo

    }
    class SimpleAllocator << (S,Aquamarine) >> {
        + Allocate(n uint64) []byte

    }
    interface StorageSerializer  {
        + SupportedMediaTypes() []SerializerInfo
        + UniversalDeserializer() Decoder
        + EncoderForVersion(serializer Encoder, gv GroupVersioner) Encoder
        + DecoderToVersion(serializer Decoder, gv GroupVersioner) Decoder

    }
    class StreamSerializerInfo << (S,Aquamarine) >> {
        + EncodesAsText bool

    }
    class TypeMeta << (S,Aquamarine) >> {
        + APIVersion string
        + Kind string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SetGroupVersionKind(gvk schema.GroupVersionKind) 
        + GroupVersionKind() schema.GroupVersionKind
        + GetObjectKind() schema.ObjectKind

    }
    class Unknown << (S,Aquamarine) >> {
        + Raw []byte
        + ContentEncoding string
        + ContentType string

        + UnmarshalJSON(in []byte) error
        + MarshalJSON() ([]byte, error)
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + NestedMarshalTo(data []byte, b ProtobufMarshaller, size uint64) (int, error)
        + DeepCopyInto(out *Unknown) 
        + DeepCopy() *Unknown
        + DeepCopyObject() Object

    }
    interface Unstructured  {
        + NewEmptyInstance() Unstructured
        + UnstructuredContent() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + SetUnstructuredContent( <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 
        + IsList() bool
        + EachListItem( <font color=blue>func</font>(Object) error) error

    }
    interface UnstructuredConverter  {
        + ToUnstructured(obj <font color=blue>interface</font>{}) (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)
        + FromUnstructured(u <font color=blue>map</font>[string]<font color=blue>interface</font>{}, obj <font color=blue>interface</font>{}) error

    }
    class WithVersionEncoder << (S,Aquamarine) >> {
        + Version GroupVersioner

        + Encode(obj Object, stream io.Writer) error

    }
    class WithoutVersionDecoder << (S,Aquamarine) >> {
        + Decode(data []byte, defaults *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    class base64Serializer << (S,Aquamarine) >> {
        - identifier Identifier

        - doEncode(obj Object, stream io.Writer) error

        + Encode(obj Object, stream io.Writer) error
        + Identifier() Identifier
        + Decode(data []byte, defaults *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    class buffer << (S,Aquamarine) >> {
        - lines []bufferedLine

        - addLine(line string, indent int) 
        - flushLines(w io.Writer) error

    }
    class bufferedLine << (S,Aquamarine) >> {
        - line string
        - indentation int

    }
    class clientNegotiator << (S,Aquamarine) >> {
        - serializer NegotiatedSerializer
        - encode GroupVersioner

        + Encoder(contentType string, params <font color=blue>map</font>[string]string) (Encoder, error)
        + Decoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, error)
        + StreamDecoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, Serializer, Framer, error)

    }
    class codec << (S,Aquamarine) >> {
    }
    class defaultFramer << (S,Aquamarine) >> {
        + NewFrameReader(r io.ReadCloser) io.ReadCloser
        + NewFrameWriter(w io.Writer) io.Writer

    }
    class disabledGroupVersioner << (S,Aquamarine) >> {
        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    class encodable << (S,Aquamarine) >> {
        - obj Object
        - versions []schema.GroupVersion

        + E Encoder

        + GetObjectKind() schema.ObjectKind
        + DeepCopyObject() Object
        + UnmarshalJSON(in []byte) error
        + MarshalJSON() ([]byte, error)

    }
    class equivalentResourceRegistry << (S,Aquamarine) >> {
        - keyFunc <font color=blue>func</font>(schema.GroupResource) string
        - resources <font color=blue>map</font>[string]<font color=blue>map</font>[string][]schema.GroupVersionResource
        - kinds <font color=blue>map</font>[schema.GroupVersionResource]<font color=blue>map</font>[string]schema.GroupVersionKind
        - keys <font color=blue>map</font>[schema.GroupResource]string
        - mutex sync.RWMutex

        + EquivalentResourcesFor(resource schema.GroupVersionResource, subresource string) []schema.GroupVersionResource
        + KindFor(resource schema.GroupVersionResource, subresource string) schema.GroupVersionKind
        + RegisterKindFor(resource schema.GroupVersionResource, subresource string, kind schema.GroupVersionKind) 

    }
    class fieldInfo << (S,Aquamarine) >> {
        - name string
        - nameValue reflect.Value
        - omitempty bool

    }
    class fieldsCache << (S,Aquamarine) >> {
        - value atomic.Value

    }
    class fromUnstructuredContext << (S,Aquamarine) >> {
        - isInlined bool
        - matchedKeys []<font color=blue>map</font>[string]<font color=blue>struct</font>{}
        - parentPath []string
        - returnUnknownFields bool
        - unknownFieldErrors []error

        - pushMatchedKeyTracker() 
        - recordMatchedKey(key string) 
        - popAndVerifyMatchedKeys(mapValue reflect.Value) 
        - recordUnknownField(field string) 
        - pushIndex(index int) 
        - pushKey(key string) 

    }
    class internalGroupVersioner << (S,Aquamarine) >> {
        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    class missingKindErr << (S,Aquamarine) >> {
        - data string

        + Error() string

    }
    class missingVersionErr << (S,Aquamarine) >> {
        - data string

        + Error() string

    }
    class multiGroupVersioner << (S,Aquamarine) >> {
        - target schema.GroupVersion
        - acceptedGroupKinds []schema.GroupKind
        - coerce bool

        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    class notRegisteredErr << (S,Aquamarine) >> {
        - schemeName string
        - gvk schema.GroupVersionKind
        - target GroupVersioner
        - t reflect.Type

        + Error() string

    }
    class parameterCodec << (S,Aquamarine) >> {
        - typer ObjectTyper
        - convertor ObjectConvertor
        - creator ObjectCreater
        - defaulter ObjectDefaulter

        + DecodeParameters(parameters url.Values, from schema.GroupVersion, into Object) error
        + EncodeParameters(obj Object, to schema.GroupVersion) (url.Values, error)

    }
    class runtime.Codec << (T, #FF7700) >>  {
    }
    class runtime.FieldLabelConversionFunc << (T, #FF7700) >>  {
    }
    class runtime.Identifier << (T, #FF7700) >>  {
    }
    class runtime.KubeTypes << (T, #FF7700) >>  {
    }
    class runtime.MultiObjectTyper << (T, #FF7700) >>  {
    }
    class runtime.SchemeBuilder << (T, #FF7700) >>  {
    }
    class runtime.fieldsCacheMap << (T, #FF7700) >>  {
    }
    class simpleNegotiatedSerializer << (S,Aquamarine) >> {
        - info SerializerInfo

        + SupportedMediaTypes() []SerializerInfo
        + EncoderForVersion(e Encoder, _ GroupVersioner) Encoder
        + DecoderToVersion(d Decoder, _gv GroupVersioner) Decoder

    }
    class strictDecodingError << (S,Aquamarine) >> {
        - errors []error

        + Error() string
        + Errors() []error

    }
    class structField << (S,Aquamarine) >> {
        - structType reflect.Type
        - field int

    }
    class unsafeObjectConvertor << (S,Aquamarine) >> {
        + ConvertToVersion(in Object, outVersion GroupVersioner) (Object, error)

    }
    class unstructuredConverter << (S,Aquamarine) >> {
        - mismatchDetection bool
        - comparison conversion.Equalities

        + FromUnstructuredWithValidation(u <font color=blue>map</font>[string]<font color=blue>interface</font>{}, obj <font color=blue>interface</font>{}, returnUnknownFields bool) error
        + FromUnstructured(u <font color=blue>map</font>[string]<font color=blue>interface</font>{}, obj <font color=blue>interface</font>{}) error
        + ToUnstructured(obj <font color=blue>interface</font>{}) (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)

    }
}
"runtime.MemoryAllocator" <|- - "runtime.Allocator"
"runtime.ObjectTyper" <|- - "runtime.MultiObjectTyper"
"runtime.Decoder" <|- - "runtime.NoopDecoder"
"runtime.Encoder" <|- - "runtime.NoopEncoder"
"runtime.ProtobufMarshaller" <|- - "runtime.RawExtension"
"runtime.ProtobufReverseMarshaller" <|- - "runtime.RawExtension"
"runtime.ObjectConvertor" <|- - "runtime.Scheme"
"runtime.ObjectCreater" <|- - "runtime.Scheme"
"runtime.ObjectDefaulter" <|- - "runtime.Scheme"
"runtime.ObjectTyper" <|- - "runtime.Scheme"
"runtime.ObjectVersioner" <|- - "runtime.Scheme"
"runtime.MemoryAllocator" <|- - "runtime.SimpleAllocator"
"runtime.ProtobufMarshaller" <|- - "runtime.TypeMeta"
"runtime.ProtobufReverseMarshaller" <|- - "runtime.TypeMeta"
"runtime.ProtobufMarshaller" <|- - "runtime.Unknown"
"runtime.ProtobufReverseMarshaller" <|- - "runtime.Unknown"
"runtime.Decoder" <|- - "runtime.WithoutVersionDecoder"
"runtime.Decoder" <|- - "runtime.base64Serializer"
"runtime.Encoder" <|- - "runtime.base64Serializer"
"runtime.ClientNegotiator" <|- - "runtime.clientNegotiator"
"runtime.Framer" <|- - "runtime.defaultFramer"
"runtime.GroupVersioner" <|- - "runtime.disabledGroupVersioner"
"runtime.Object" <|- - "runtime.encodable"
"runtime.EquivalentResourceMapper" <|- - "runtime.equivalentResourceRegistry"
"runtime.EquivalentResourceRegistry" <|- - "runtime.equivalentResourceRegistry"
"runtime.GroupVersioner" <|- - "runtime.internalGroupVersioner"
"runtime.GroupVersioner" <|- - "runtime.multiGroupVersioner"
"runtime.ParameterCodec" <|- - "runtime.parameterCodec"
"runtime.NegotiatedSerializer" <|- - "runtime.simpleNegotiatedSerializer"
"runtime.ObjectVersioner" <|- - "runtime.unsafeObjectConvertor"
"runtime.UnstructuredConverter" <|- - "runtime.unstructuredConverter"

namespace v1 {
    class APIGroup << (S,Aquamarine) >> {
        + Name string
        + Versions []GroupVersionForDiscovery
        + PreferredVersion GroupVersionForDiscovery
        + ServerAddressByClientCIDRs []ServerAddressByClientCIDR

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIGroup) 
        + DeepCopy() *APIGroup
        + DeepCopyObject() runtime.Object

    }
    class APIGroupList << (S,Aquamarine) >> {
        + Groups []APIGroup

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIGroupList) 
        + DeepCopy() *APIGroupList
        + DeepCopyObject() runtime.Object

    }
    class APIResource << (S,Aquamarine) >> {
        + Name string
        + SingularName string
        + Namespaced bool
        + Group string
        + Version string
        + Kind string
        + Verbs Verbs
        + ShortNames []string
        + Categories []string
        + StorageVersionHash string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIResource) 
        + DeepCopy() *APIResource

    }
    class APIResourceList << (S,Aquamarine) >> {
        + GroupVersion string
        + APIResources []APIResource

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIResourceList) 
        + DeepCopy() *APIResourceList
        + DeepCopyObject() runtime.Object

    }
    class APIVersions << (S,Aquamarine) >> {
        + Versions []string
        + ServerAddressByClientCIDRs []ServerAddressByClientCIDR

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + GoString() string
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIVersions) 
        + DeepCopy() *APIVersions
        + DeepCopyObject() runtime.Object

    }
    class ApplyOptions << (S,Aquamarine) >> {
        + DryRun []string
        + Force bool
        + FieldManager string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + ToPatchOptions() PatchOptions
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ApplyOptions) 
        + DeepCopy() *ApplyOptions

    }
    interface Common  {
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 

    }
    class Condition << (S,Aquamarine) >> {
        + Type string
        + Status ConditionStatus
        + ObservedGeneration int64
        + LastTransitionTime Time
        + Reason string
        + Message string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Condition) 
        + DeepCopy() *Condition

    }
    class CreateOptions << (S,Aquamarine) >> {
        + DryRun []string
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *CreateOptions) 
        + DeepCopy() *CreateOptions
        + DeepCopyObject() runtime.Object

    }
    class DeleteOptions << (S,Aquamarine) >> {
        + GracePeriodSeconds *int64
        + Preconditions *Preconditions
        + OrphanDependents *bool
        + PropagationPolicy *DeletionPropagation
        + DryRun []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *DeleteOptions) 
        + DeepCopy() *DeleteOptions
        + DeepCopyObject() runtime.Object

    }
    class Duration << (S,Aquamarine) >> {
        + UnmarshalJSON(b []byte) error
        + MarshalJSON() ([]byte, error)
        + ToUnstructured() <font color=blue>interface</font>{}
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + DeepCopyInto(out *Duration) 
        + DeepCopy() *Duration

    }
    class FieldsV1 << (S,Aquamarine) >> {
        + Raw []byte

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + String() string
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *FieldsV1) 
        + DeepCopy() *FieldsV1

    }
    class GetOptions << (S,Aquamarine) >> {
        + ResourceVersion string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *GetOptions) 
        + DeepCopy() *GetOptions
        + DeepCopyObject() runtime.Object

    }
    class GroupKind << (S,Aquamarine) >> {
        + Group string
        + Kind string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupKind) 
        + DeepCopy() *GroupKind

    }
    class GroupResource << (S,Aquamarine) >> {
        + Group string
        + Resource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupResource) 
        + DeepCopy() *GroupResource

    }
    class GroupVersion << (S,Aquamarine) >> {
        + Group string
        + Version string

        - unmarshal(value []byte) error

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + Empty() bool
        + String() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(value []byte) error
        + UnmarshalText(value []byte) error
        + DeepCopyInto(out *GroupVersion) 
        + DeepCopy() *GroupVersion

    }
    class GroupVersionForDiscovery << (S,Aquamarine) >> {
        + GroupVersion string
        + Version string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *GroupVersionForDiscovery) 
        + DeepCopy() *GroupVersionForDiscovery

    }
    class GroupVersionKind << (S,Aquamarine) >> {
        + Group string
        + Version string
        + Kind string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupVersionKind) 
        + DeepCopy() *GroupVersionKind

    }
    class GroupVersionResource << (S,Aquamarine) >> {
        + Group string
        + Version string
        + Resource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupVersionResource) 
        + DeepCopy() *GroupVersionResource

    }
    class InternalEvent << (S,Aquamarine) >> {
        + GetObjectKind() schema.ObjectKind
        + DeepCopyObject() runtime.Object
        + DeepCopyInto(out *InternalEvent) 
        + DeepCopy() *InternalEvent

    }
    class LabelSelector << (S,Aquamarine) >> {
        + MatchLabels <font color=blue>map</font>[string]string
        + MatchExpressions []LabelSelectorRequirement

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *LabelSelector) 
        + DeepCopy() *LabelSelector

    }
    class LabelSelectorRequirement << (S,Aquamarine) >> {
        + Key string
        + Operator LabelSelectorOperator
        + Values []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *LabelSelectorRequirement) 
        + DeepCopy() *LabelSelectorRequirement

    }
    class List << (S,Aquamarine) >> {
        + Items []runtime.RawExtension

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *List) 
        + DeepCopy() *List
        + DeepCopyObject() runtime.Object

    }
    interface ListInterface  {
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 

    }
    class ListMeta << (S,Aquamarine) >> {
        + SelfLink string
        + ResourceVersion string
        + Continue string
        + RemainingItemCount *int64

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 
        + GetListMeta() ListInterface
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ListMeta) 
        + DeepCopy() *ListMeta

    }
    interface ListMetaAccessor  {
        + GetListMeta() ListInterface

    }
    class ListOptions << (S,Aquamarine) >> {
        + LabelSelector string
        + FieldSelector string
        + Watch bool
        + AllowWatchBookmarks bool
        + ResourceVersion string
        + ResourceVersionMatch ResourceVersionMatch
        + TimeoutSeconds *int64
        + Limit int64
        + Continue string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ListOptions) 
        + DeepCopy() *ListOptions
        + DeepCopyObject() runtime.Object

    }
    class ManagedFieldsEntry << (S,Aquamarine) >> {
        + Manager string
        + Operation ManagedFieldsOperationType
        + APIVersion string
        + Time *Time
        + FieldsType string
        + FieldsV1 *FieldsV1
        + Subresource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ManagedFieldsEntry) 
        + DeepCopy() *ManagedFieldsEntry

    }
    class MicroTime << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + DeepCopyInto(out *MicroTime) 
        + IsZero() bool
        + Before(u *MicroTime) bool
        + Equal(u *MicroTime) bool
        + BeforeTime(u *Time) bool
        + EqualTime(u *Time) bool
        + UnmarshalJSON(b []byte) error
        + UnmarshalQueryParameter(str string) error
        + MarshalJSON() ([]byte, error)
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + MarshalQueryParameter() (string, error)
        + Fuzz(c gofuzz.Continue) 
        + ProtoMicroTime() *Timestamp
        + Size() int
        + Unmarshal(data []byte) error
        + Marshal() ([]byte, error)
        + MarshalTo(data []byte) (int, error)
        + MarshalToSizedBuffer(data []byte) (int, error)
        + DeepCopy() *MicroTime

    }
    interface Object  {
        + GetNamespace() string
        + SetNamespace(namespace string) 
        + GetName() string
        + SetName(name string) 
        + GetGenerateName() string
        + SetGenerateName(name string) 
        + GetUID() types.UID
        + SetUID(uid types.UID) 
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetGeneration() int64
        + SetGeneration(generation int64) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetCreationTimestamp() Time
        + SetCreationTimestamp(timestamp Time) 
        + GetDeletionTimestamp() *Time
        + SetDeletionTimestamp(timestamp *Time) 
        + GetDeletionGracePeriodSeconds() *int64
        + SetDeletionGracePeriodSeconds( *int64) 
        + GetLabels() <font color=blue>map</font>[string]string
        + SetLabels(labels <font color=blue>map</font>[string]string) 
        + GetAnnotations() <font color=blue>map</font>[string]string
        + SetAnnotations(annotations <font color=blue>map</font>[string]string) 
        + GetFinalizers() []string
        + SetFinalizers(finalizers []string) 
        + GetOwnerReferences() []OwnerReference
        + SetOwnerReferences( []OwnerReference) 
        + GetManagedFields() []ManagedFieldsEntry
        + SetManagedFields(managedFields []ManagedFieldsEntry) 

    }
    class ObjectMeta << (S,Aquamarine) >> {
        + Name string
        + GenerateName string
        + Namespace string
        + SelfLink string
        + UID types.UID
        + ResourceVersion string
        + Generation int64
        + CreationTimestamp Time
        + DeletionTimestamp *Time
        + DeletionGracePeriodSeconds *int64
        + Labels <font color=blue>map</font>[string]string
        + Annotations <font color=blue>map</font>[string]string
        + OwnerReferences []OwnerReference
        + Finalizers []string
        + ManagedFields []ManagedFieldsEntry

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectMeta() Object
        + GetNamespace() string
        + SetNamespace(namespace string) 
        + GetName() string
        + SetName(name string) 
        + GetGenerateName() string
        + SetGenerateName(generateName string) 
        + GetUID() types.UID
        + SetUID(uid types.UID) 
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetGeneration() int64
        + SetGeneration(generation int64) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetCreationTimestamp() Time
        + SetCreationTimestamp(creationTimestamp Time) 
        + GetDeletionTimestamp() *Time
        + SetDeletionTimestamp(deletionTimestamp *Time) 
        + GetDeletionGracePeriodSeconds() *int64
        + SetDeletionGracePeriodSeconds(deletionGracePeriodSeconds *int64) 
        + GetLabels() <font color=blue>map</font>[string]string
        + SetLabels(labels <font color=blue>map</font>[string]string) 
        + GetAnnotations() <font color=blue>map</font>[string]string
        + SetAnnotations(annotations <font color=blue>map</font>[string]string) 
        + GetFinalizers() []string
        + SetFinalizers(finalizers []string) 
        + GetOwnerReferences() []OwnerReference
        + SetOwnerReferences(references []OwnerReference) 
        + GetManagedFields() []ManagedFieldsEntry
        + SetManagedFields(managedFields []ManagedFieldsEntry) 
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ObjectMeta) 
        + DeepCopy() *ObjectMeta

    }
    interface ObjectMetaAccessor  {
        + GetObjectMeta() Object

    }
    class OwnerReference << (S,Aquamarine) >> {
        + APIVersion string
        + Kind string
        + Name string
        + UID types.UID
        + Controller *bool
        + BlockOwnerDeletion *bool

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *OwnerReference) 
        + DeepCopy() *OwnerReference

    }
    class PartialObjectMetadata << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PartialObjectMetadata) 
        + DeepCopy() *PartialObjectMetadata
        + DeepCopyObject() runtime.Object

    }
    class PartialObjectMetadataList << (S,Aquamarine) >> {
        + Items []PartialObjectMetadata

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PartialObjectMetadataList) 
        + DeepCopy() *PartialObjectMetadataList
        + DeepCopyObject() runtime.Object

    }
    class Patch << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Patch) 
        + DeepCopy() *Patch

    }
    class PatchOptions << (S,Aquamarine) >> {
        + DryRun []string
        + Force *bool
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PatchOptions) 
        + DeepCopy() *PatchOptions
        + DeepCopyObject() runtime.Object

    }
    class Preconditions << (S,Aquamarine) >> {
        + UID *types.UID
        + ResourceVersion *string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Preconditions) 
        + DeepCopy() *Preconditions

    }
    class RootPaths << (S,Aquamarine) >> {
        + Paths []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *RootPaths) 
        + DeepCopy() *RootPaths

    }
    class ServerAddressByClientCIDR << (S,Aquamarine) >> {
        + ClientCIDR string
        + ServerAddress string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ServerAddressByClientCIDR) 
        + DeepCopy() *ServerAddressByClientCIDR

    }
    class Status << (S,Aquamarine) >> {
        + Status string
        + Message string
        + Reason StatusReason
        + Details *StatusDetails
        + Code int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Status) 
        + DeepCopy() *Status
        + DeepCopyObject() runtime.Object

    }
    class StatusCause << (S,Aquamarine) >> {
        + Type CauseType
        + Message string
        + Field string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *StatusCause) 
        + DeepCopy() *StatusCause

    }
    class StatusDetails << (S,Aquamarine) >> {
        + Name string
        + Group string
        + Kind string
        + UID types.UID
        + Causes []StatusCause
        + RetryAfterSeconds int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *StatusDetails) 
        + DeepCopy() *StatusDetails

    }
    class Table << (S,Aquamarine) >> {
        + ColumnDefinitions []TableColumnDefinition
        + Rows []TableRow

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Table) 
        + DeepCopy() *Table
        + DeepCopyObject() runtime.Object

    }
    class TableColumnDefinition << (S,Aquamarine) >> {
        + Name string
        + Type string
        + Format string
        + Description string
        + Priority int32

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableColumnDefinition) 
        + DeepCopy() *TableColumnDefinition

    }
    class TableOptions << (S,Aquamarine) >> {
        + NoHeaders bool
        + IncludeObject IncludeObjectPolicy

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableOptions) 
        + DeepCopy() *TableOptions
        + DeepCopyObject() runtime.Object

    }
    class TableRow << (S,Aquamarine) >> {
        + Cells []<font color=blue>interface</font>{}
        + Conditions []TableRowCondition
        + Object runtime.RawExtension

        + DeepCopy() *TableRow
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableRow) 

    }
    class TableRowCondition << (S,Aquamarine) >> {
        + Type RowConditionType
        + Status ConditionStatus
        + Reason string
        + Message string

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableRowCondition) 
        + DeepCopy() *TableRowCondition

    }
    class Time << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + DeepCopyInto(out *Time) 
        + IsZero() bool
        + Before(u *Time) bool
        + Equal(u *Time) bool
        + Rfc3339Copy() Time
        + UnmarshalJSON(b []byte) error
        + UnmarshalQueryParameter(str string) error
        + MarshalJSON() ([]byte, error)
        + ToUnstructured() <font color=blue>interface</font>{}
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + MarshalQueryParameter() (string, error)
        + Fuzz(c gofuzz.Continue) 
        + ProtoTime() *Timestamp
        + Size() int
        + Unmarshal(data []byte) error
        + Marshal() ([]byte, error)
        + MarshalTo(data []byte) (int, error)
        + MarshalToSizedBuffer(data []byte) (int, error)
        + DeepCopy() *Time

    }
    class Timestamp << (S,Aquamarine) >> {
        + Seconds int64
        + Nanos int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + DeepCopyInto(out *Timestamp) 
        + DeepCopy() *Timestamp

    }
    interface Type  {
        + GetAPIVersion() string
        + SetAPIVersion(version string) 
        + GetKind() string
        + SetKind(kind string) 

    }
    class TypeMeta << (S,Aquamarine) >> {
        + Kind string
        + APIVersion string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectKind() schema.ObjectKind
        + SetGroupVersionKind(gvk schema.GroupVersionKind) 
        + GroupVersionKind() schema.GroupVersionKind
        + SwaggerDoc() <font color=blue>map</font>[string]string

    }
    class UpdateOptions << (S,Aquamarine) >> {
        + DryRun []string
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *UpdateOptions) 
        + DeepCopy() *UpdateOptions
        + DeepCopyObject() runtime.Object

    }
    class Verbs << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *Verbs) 
        + DeepCopy() Verbs

    }
    class WatchEvent << (S,Aquamarine) >> {
        + Type string
        + Object runtime.RawExtension

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectKind() schema.ObjectKind
        + DeepCopyInto(out *WatchEvent) 
        + DeepCopy() *WatchEvent
        + DeepCopyObject() runtime.Object

    }
    class v1.CauseType << (T, #FF7700) >>  {
    }
    class v1.ConditionStatus << (T, #FF7700) >>  {
    }
    class v1.DeletionPropagation << (T, #FF7700) >>  {
    }
    class v1.IncludeObjectPolicy << (T, #FF7700) >>  {
    }
    class v1.InternalEvent << (T, #FF7700) >>  {
    }
    class v1.LabelSelectorOperator << (T, #FF7700) >>  {
    }
    class v1.ManagedFieldsOperationType << (T, #FF7700) >>  {
    }
    class v1.ResourceVersionMatch << (T, #FF7700) >>  {
    }
    class v1.RowConditionType << (T, #FF7700) >>  {
    }
    class v1.StatusReason << (T, #FF7700) >>  {
    }
    class v1.Verbs << (T, #FF7700) >>  {
    }
    class "watch.Event" as watchEvent {
    }
}
"runtime.ProtobufMarshaller" <|- - "v1.APIGroup"
"runtime.ProtobufReverseMarshaller" <|- - "v1.APIGroup"
"runtime.ProtobufMarshaller" <|- - "v1.APIGroupList"
"runtime.ProtobufReverseMarshaller" <|- - "v1.APIGroupList"
"runtime.ProtobufMarshaller" <|- - "v1.APIResource"
"runtime.ProtobufReverseMarshaller" <|- - "v1.APIResource"
"runtime.ProtobufMarshaller" <|- - "v1.APIResourceList"
"runtime.ProtobufReverseMarshaller" <|- - "v1.APIResourceList"
"runtime.ProtobufMarshaller" <|- - "v1.APIVersions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.APIVersions"
"runtime.ProtobufMarshaller" <|- - "v1.ApplyOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.ApplyOptions"
"runtime.ProtobufMarshaller" <|- - "v1.Condition"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Condition"
"runtime.ProtobufMarshaller" <|- - "v1.CreateOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.CreateOptions"
"runtime.ProtobufMarshaller" <|- - "v1.DeleteOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.DeleteOptions"
"runtime.ProtobufMarshaller" <|- - "v1.Duration"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Duration"
"runtime.ProtobufMarshaller" <|- - "v1.FieldsV1"
"runtime.ProtobufReverseMarshaller" <|- - "v1.FieldsV1"
"runtime.ProtobufMarshaller" <|- - "v1.GetOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GetOptions"
"runtime.ProtobufMarshaller" <|- - "v1.GroupKind"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GroupKind"
"runtime.ProtobufMarshaller" <|- - "v1.GroupResource"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GroupResource"
"runtime.ProtobufMarshaller" <|- - "v1.GroupVersion"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GroupVersion"
"runtime.ProtobufMarshaller" <|- - "v1.GroupVersionForDiscovery"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GroupVersionForDiscovery"
"runtime.ProtobufMarshaller" <|- - "v1.GroupVersionKind"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GroupVersionKind"
"runtime.ProtobufMarshaller" <|- - "v1.GroupVersionResource"
"runtime.ProtobufReverseMarshaller" <|- - "v1.GroupVersionResource"
"runtime.Object" <|- - "v1.InternalEvent"
"runtime.ProtobufMarshaller" <|- - "v1.LabelSelector"
"runtime.ProtobufReverseMarshaller" <|- - "v1.LabelSelector"
"runtime.ProtobufMarshaller" <|- - "v1.LabelSelectorRequirement"
"runtime.ProtobufReverseMarshaller" <|- - "v1.LabelSelectorRequirement"
"runtime.ProtobufMarshaller" <|- - "v1.List"
"runtime.ProtobufReverseMarshaller" <|- - "v1.List"
"runtime.ProtobufMarshaller" <|- - "v1.ListMeta"
"runtime.ProtobufReverseMarshaller" <|- - "v1.ListMeta"
"v1.Common" <|- - "v1.ListMeta"
"v1.ListInterface" <|- - "v1.ListMeta"
"v1.ListMetaAccessor" <|- - "v1.ListMeta"
"runtime.ProtobufMarshaller" <|- - "v1.ListOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.ListOptions"
"runtime.ProtobufMarshaller" <|- - "v1.ManagedFieldsEntry"
"runtime.ProtobufReverseMarshaller" <|- - "v1.ManagedFieldsEntry"
"runtime.ProtobufMarshaller" <|- - "v1.MicroTime"
"runtime.ProtobufReverseMarshaller" <|- - "v1.MicroTime"
"runtime.ProtobufMarshaller" <|- - "v1.ObjectMeta"
"runtime.ProtobufReverseMarshaller" <|- - "v1.ObjectMeta"
"v1.Common" <|- - "v1.ObjectMeta"
"v1.Object" <|- - "v1.ObjectMeta"
"v1.ObjectMetaAccessor" <|- - "v1.ObjectMeta"
"runtime.ProtobufMarshaller" <|- - "v1.OwnerReference"
"runtime.ProtobufReverseMarshaller" <|- - "v1.OwnerReference"
"runtime.ProtobufMarshaller" <|- - "v1.PartialObjectMetadata"
"runtime.ProtobufReverseMarshaller" <|- - "v1.PartialObjectMetadata"
"runtime.ProtobufMarshaller" <|- - "v1.PartialObjectMetadataList"
"runtime.ProtobufReverseMarshaller" <|- - "v1.PartialObjectMetadataList"
"runtime.ProtobufMarshaller" <|- - "v1.Patch"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Patch"
"runtime.ProtobufMarshaller" <|- - "v1.PatchOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.PatchOptions"
"runtime.ProtobufMarshaller" <|- - "v1.Preconditions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Preconditions"
"runtime.ProtobufMarshaller" <|- - "v1.RootPaths"
"runtime.ProtobufReverseMarshaller" <|- - "v1.RootPaths"
"runtime.ProtobufMarshaller" <|- - "v1.ServerAddressByClientCIDR"
"runtime.ProtobufReverseMarshaller" <|- - "v1.ServerAddressByClientCIDR"
"runtime.ProtobufMarshaller" <|- - "v1.Status"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Status"
"runtime.ProtobufMarshaller" <|- - "v1.StatusCause"
"runtime.ProtobufReverseMarshaller" <|- - "v1.StatusCause"
"runtime.ProtobufMarshaller" <|- - "v1.StatusDetails"
"runtime.ProtobufReverseMarshaller" <|- - "v1.StatusDetails"
"runtime.ProtobufMarshaller" <|- - "v1.TableOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.TableOptions"
"runtime.ProtobufMarshaller" <|- - "v1.Time"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Time"
"runtime.ProtobufMarshaller" <|- - "v1.Timestamp"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Timestamp"
"runtime.ProtobufMarshaller" <|- - "v1.TypeMeta"
"runtime.ProtobufReverseMarshaller" <|- - "v1.TypeMeta"
"runtime.ProtobufMarshaller" <|- - "v1.UpdateOptions"
"runtime.ProtobufReverseMarshaller" <|- - "v1.UpdateOptions"
"runtime.ProtobufMarshaller" <|- - "v1.Verbs"
"runtime.ProtobufReverseMarshaller" <|- - "v1.Verbs"
"runtime.Object" <|- - "v1.WatchEvent"
"runtime.ProtobufMarshaller" <|- - "v1.WatchEvent"
"runtime.ProtobufReverseMarshaller" <|- - "v1.WatchEvent"

hide methods
@enduml

PlantUML version 1.2022.7(Tue Aug 23 01:01:30 CST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: zh
Country: CN
--></g></svg>