<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="912px" preserveAspectRatio="none" style="width:12389px;height:912px;background:#FFFFFF;" version="1.1" viewBox="0 0 12389 912" width="12389px" zoomAndPan="magnify"><defs/><g><!--MD5=[10ea673caf457862023e152271927b45]
cluster controller--><g id="cluster_controller"><path d="M8803.5,6.532 L8872.5,6.532 A3.75,3.75 0 0 1 8875,9.032 L8882,32.8039 L9100.5,32.8039 A2.5,2.5 0 0 1 9103,35.3039 L9103,75.032 A2.5,2.5 0 0 1 9100.5,77.532 L8803.5,77.532 A2.5,2.5 0 0 1 8801,75.032 L8801,9.032 A2.5,2.5 0 0 1 8803.5,6.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="8801" x2="8882" y1="32.8039" y2="32.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="68" x="8805" y="24.7719">controller</text></g><!--MD5=[8a91c252c445277df61b2a324a8d346e]
cluster dynamiccertificates--><g id="cluster_dynamiccertificates"><path d="M4236.5,6.532 L4372.5,6.532 A3.75,3.75 0 0 1 4375,9.032 L4382,32.8039 L5852.5,32.8039 A2.5,2.5 0 0 1 5855,35.3039 L5855,351.032 A2.5,2.5 0 0 1 5852.5,353.532 L4236.5,353.532 A2.5,2.5 0 0 1 4234,351.032 L4234,9.032 A2.5,2.5 0 0 1 4236.5,6.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="4234" x2="4382" y1="32.8039" y2="32.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="135" x="4238" y="24.7719">dynamiccertificates</text></g><!--MD5=[ed1527a673c2b31abf4a6f3dd0429ac0]
cluster egressselector--><g id="cluster_egressselector"><path d="M9608.5,374.532 L9708.5,374.532 A3.75,3.75 0 0 1 9711,377.032 L9718,400.8039 L11055.5,400.8039 A2.5,2.5 0 0 1 11058,403.3039 L11058,627.032 A2.5,2.5 0 0 1 11055.5,629.532 L9608.5,629.532 A2.5,2.5 0 0 1 9606,627.032 L9606,377.032 A2.5,2.5 0 0 1 9608.5,374.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="9606" x2="9718" y1="400.8039" y2="400.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="99" x="9610" y="392.7719">egressselector</text></g><!--MD5=[3bd65ec405bb391921827c3be27315e1]
cluster encryptionconfig--><g id="cluster_encryptionconfig"><path d="M8004.5,374.532 L8122.5,374.532 A3.75,3.75 0 0 1 8125,377.032 L8132,400.8039 L9584.5,400.8039 A2.5,2.5 0 0 1 9587,403.3039 L9587,627.032 A2.5,2.5 0 0 1 9584.5,629.532 L8004.5,629.532 A2.5,2.5 0 0 1 8002,627.032 L8002,377.032 A2.5,2.5 0 0 1 8004.5,374.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="8002" x2="8132" y1="400.8039" y2="400.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="117" x="8006" y="392.7719">encryptionconfig</text></g><!--MD5=[b73490e0b6dd8df03ccef5a1b87f97de]
cluster healthz--><g id="cluster_healthz"><path d="M7517.5,282.532 L7569.5,282.532 A3.75,3.75 0 0 1 7572,285.032 L7579,308.8039 L7991.5,308.8039 A2.5,2.5 0 0 1 7994,311.3039 L7994,443.032 A2.5,2.5 0 0 1 7991.5,445.532 L7517.5,445.532 A2.5,2.5 0 0 1 7515,443.032 L7515,285.032 A2.5,2.5 0 0 1 7517.5,282.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="7515" x2="7579" y1="308.8039" y2="308.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="51" x="7519" y="300.7719">healthz</text></g><!--MD5=[cab70ff1e9993580639362b4a5bfd410]
cluster filters--><g id="cluster_filters"><path d="M11079.5,374.532 L11120.5,374.532 A3.75,3.75 0 0 1 11123,377.032 L11130,400.8039 L12379.5,400.8039 A2.5,2.5 0 0 1 12382,403.3039 L12382,627.032 A2.5,2.5 0 0 1 12379.5,629.532 L11079.5,629.532 A2.5,2.5 0 0 1 11077,627.032 L11077,377.032 A2.5,2.5 0 0 1 11079.5,374.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="11077" x2="11130" y1="400.8039" y2="400.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="40" x="11081" y="392.7719">filters</text></g><!--MD5=[907f4593a38c07089bc71abf0f941a4a]
cluster httplog--><g id="cluster_httplog"><path d="M2158.5,190.532 L2210.5,190.532 A3.75,3.75 0 0 1 2213,193.032 L2220,216.8039 L2721.5,216.8039 A2.5,2.5 0 0 1 2724,219.3039 L2724,351.032 A2.5,2.5 0 0 1 2721.5,353.532 L2158.5,353.532 A2.5,2.5 0 0 1 2156,351.032 L2156,193.032 A2.5,2.5 0 0 1 2158.5,190.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2156" x2="2220" y1="216.8039" y2="216.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="51" x="2160" y="208.7719">httplog</text></g><!--MD5=[5063e4f83bceb2e2519cbf71bd38c24e]
cluster metrics--><g id="cluster_metrics"><path d="M10587.5,6.532 L10640.5,6.532 A3.75,3.75 0 0 1 10643,9.032 L10650,32.8039 L10704.5,32.8039 A2.5,2.5 0 0 1 10707,35.3039 L10707,75.032 A2.5,2.5 0 0 1 10704.5,77.532 L10587.5,77.532 A2.5,2.5 0 0 1 10585,75.032 L10585,9.032 A2.5,2.5 0 0 1 10587.5,6.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="10585" x2="10650" y1="32.8039" y2="32.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="52" x="10589" y="24.7719">metrics</text></g><!--MD5=[98cf857a0fbcd47f426e25f8257d0206]
cluster mux--><g id="cluster_mux"><path d="M4185.5,374.532 L4217.5,374.532 A3.75,3.75 0 0 1 4220,377.032 L4227,400.8039 L4665.5,400.8039 A2.5,2.5 0 0 1 4668,403.3039 L4668,535.032 A2.5,2.5 0 0 1 4665.5,537.532 L4185.5,537.532 A2.5,2.5 0 0 1 4183,535.032 L4183,377.032 A2.5,2.5 0 0 1 4185.5,374.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="4183" x2="4227" y1="400.8039" y2="400.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="31" x="4187" y="392.7719">mux</text></g><!--MD5=[aee47e4adc368b23a2c75b05fcb7ca1e]
cluster routes--><g id="cluster_routes"><path d="M3414.5,282.532 L3460.5,282.532 A3.75,3.75 0 0 1 3463,285.032 L3470,308.8039 L4161.5,308.8039 A2.5,2.5 0 0 1 4164,311.3039 L4164,535.032 A2.5,2.5 0 0 1 4161.5,537.532 L3414.5,537.532 A2.5,2.5 0 0 1 3412,535.032 L3412,285.032 A2.5,2.5 0 0 1 3414.5,282.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="3412" x2="3470" y1="308.8039" y2="308.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="45" x="3416" y="300.7719">routes</text></g><!--MD5=[b41fde97e12d0cc2cbf10be6df1cd073]
cluster options--><g id="cluster_options"><path d="M8.5,466.532 L62.5,466.532 A3.75,3.75 0 0 1 65,469.032 L72,492.8039 L2301.5,492.8039 A2.5,2.5 0 0 1 2304,495.3039 L2304,903.032 A2.5,2.5 0 0 1 2301.5,905.532 L8.5,905.532 A2.5,2.5 0 0 1 6,903.032 L6,469.032 A2.5,2.5 0 0 1 8.5,466.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="72" y1="492.8039" y2="492.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="53" x="10" y="484.7719">options</text></g><!--MD5=[cd26d5131fcb71e36b3978ff345f2bd2]
cluster headerrequest--><g id="cluster_headerrequest"><path d="M1504.5,374.532 L1606.5,374.532 A3.75,3.75 0 0 1 1609,377.032 L1616,400.8039 L1803.5,400.8039 A2.5,2.5 0 0 1 1806,403.3039 L1806,443.032 A2.5,2.5 0 0 1 1803.5,445.532 L1504.5,445.532 A2.5,2.5 0 0 1 1502,443.032 L1502,377.032 A2.5,2.5 0 0 1 1504.5,374.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1502" x2="1616" y1="400.8039" y2="400.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="101" x="1506" y="392.7719">headerrequest</text></g><!--MD5=[30f40ef89ed2dcac629dfbc3d5b45d59]
cluster audit--><g id="cluster_audit"><path d="M1827.5,374.532 L1864.5,374.532 A3.75,3.75 0 0 1 1867,377.032 L1874,400.8039 L1928.5,400.8039 A2.5,2.5 0 0 1 1931,403.3039 L1931,443.032 A2.5,2.5 0 0 1 1928.5,445.532 L1827.5,445.532 A2.5,2.5 0 0 1 1825,443.032 L1825,377.032 A2.5,2.5 0 0 1 1827.5,374.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1825" x2="1874" y1="400.8039" y2="400.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="36" x="1829" y="392.7719">audit</text></g><!--MD5=[dec65acb061c0ad7eb693bd0c7daa717]
cluster storage--><g id="cluster_storage"><path d="M2325.5,374.532 L2378.5,374.532 A3.75,3.75 0 0 1 2381,377.032 L2388,400.8039 L3401.5,400.8039 A2.5,2.5 0 0 1 3404,403.3039 L3404,535.032 A2.5,2.5 0 0 1 3401.5,537.532 L2325.5,537.532 A2.5,2.5 0 0 1 2323,535.032 L2323,377.032 A2.5,2.5 0 0 1 2325.5,374.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2323" x2="2388" y1="400.8039" y2="400.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="52" x="2327" y="392.7719">storage</text></g><!--MD5=[14fc94b4b7987cd9476df0f102a1a306]
cluster resourceconfig--><g id="cluster_resourceconfig"><path d="M11459.5,6.532 L11562.5,6.532 A3.75,3.75 0 0 1 11565,9.032 L11572,32.8039 L11646.5,32.8039 A2.5,2.5 0 0 1 11649,35.3039 L11649,75.032 A2.5,2.5 0 0 1 11646.5,77.532 L11459.5,77.532 A2.5,2.5 0 0 1 11457,75.032 L11457,9.032 A2.5,2.5 0 0 1 11459.5,6.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="11457" x2="11572" y1="32.8039" y2="32.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="102" x="11461" y="24.7719">resourceconfig</text></g><!--MD5=[4ef80439e1ef409f8f3a0ec422262701]
cluster server--><g id="cluster_server"><path d="M4831.5,374.532 L4875.5,374.532 A3.75,3.75 0 0 1 4878,377.032 L4885,400.8039 L7494.5,400.8039 A2.5,2.5 0 0 1 7497,403.3039 L7497,719.032 A2.5,2.5 0 0 1 7494.5,721.532 L4831.5,721.532 A2.5,2.5 0 0 1 4829,719.032 L4829,377.032 A2.5,2.5 0 0 1 4831.5,374.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="4829" x2="4885" y1="400.8039" y2="400.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="43" x="4833" y="392.7719">server</text></g><!--MD5=[c59a16d3fcadadefd9f8a8868b25a4e7]
cluster net--><g id="cluster_net"><path d="M5865.5,282.532 L5889.5,282.532 A3.75,3.75 0 0 1 5892,285.032 L5899,308.8039 L5962.5,308.8039 A2.5,2.5 0 0 1 5965,311.3039 L5965,351.032 A2.5,2.5 0 0 1 5962.5,353.532 L5865.5,353.532 A2.5,2.5 0 0 1 5863,351.032 L5863,285.032 A2.5,2.5 0 0 1 5865.5,282.532 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="5863" x2="5899" y1="308.8039" y2="308.8039"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="23" x="5867" y="300.7719">net</text></g><!--MD5=[252f011276863d07dc2a83e40b63ad3b]
class controller.DynamicKMSEncryptionConfigContent--><g id="elem_controller.DynamicKMSEncryptionConfigContent"><rect codeLine="2" fill="#F1F1F1" height="32" id="controller.DynamicKMSEncryptionConfigContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="285" x="8809.5" y="37.532"/><ellipse cx="8824.5" cy="53.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8824.6875,60.2351 C8826.9844,60.2351 8828.4375,58.6101 8828.4375,56.6101 C8828.4375,54.782 8827.6094,53.9382 8826.4688,53.1414 L8825.4531,52.4226 C8824.3281,51.6101 8823.9063,51.3132 8823.9063,50.4539 C8823.9063,49.7664 8824.3906,49.3601 8824.9688,49.3601 C8825.7031,49.3601 8826.1875,49.7507 8826.8906,50.3914 L8828.2031,48.8132 C8827.2344,47.7976 8826.2188,47.2039 8824.9531,47.2039 C8822.8125,47.2039 8821.3594,48.7195 8821.3594,50.6414 C8821.3594,52.4382 8822.2813,53.3445 8823.375,54.0945 L8824.4688,54.8445 C8825.4063,55.4539 8825.8594,56.032 8825.8594,56.9695 C8825.8594,57.6414 8825.3906,58.0632 8824.6875,58.0632 C8823.9844,58.0632 8823.2344,57.5476 8822.5781,56.7195 L8821.0313,58.407 C8822.0625,59.5945 8823.3594,60.2351 8824.6875,60.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="8838.5" y="59.636">DynamicKMSEncryptionConfigContent</text></g><!--MD5=[c8311fc23f8b8e771bbd0efd92a18a65]
class dynamiccertificates.CAContentProvider--><g id="elem_dynamiccertificates.CAContentProvider"><rect codeLine="23" fill="#F1F1F1" height="32" id="dynamiccertificates.CAContentProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="158" x="4933" y="129.532"/><ellipse cx="4948" cy="145.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4944.3594,152.032 L4951.1406,152.032 L4951.1406,149.9539 L4948.9844,149.9539 L4948.9844,141.5164 L4951.1406,141.5164 L4951.1406,139.407 L4944.3594,139.407 L4944.3594,141.5164 L4946.4531,141.5164 L4946.4531,149.9539 L4944.3594,149.9539 L4944.3594,152.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="126" x="4962" y="151.636">CAContentProvider</text></g><!--MD5=[cdb2b66e7631589c975456b4c0a799e8]
class dynamiccertificates.CertKeyContentProvider--><g id="elem_dynamiccertificates.CertKeyContentProvider"><rect codeLine="29" fill="#F1F1F1" height="32" id="dynamiccertificates.CertKeyContentProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="191" x="5274.5" y="129.532"/><ellipse cx="5289.5" cy="145.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5285.8594,152.032 L5292.6406,152.032 L5292.6406,149.9539 L5290.4844,149.9539 L5290.4844,141.5164 L5292.6406,141.5164 L5292.6406,139.407 L5285.8594,139.407 L5285.8594,141.5164 L5287.9531,141.5164 L5287.9531,149.9539 L5285.8594,149.9539 L5285.8594,152.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="159" x="5303.5" y="151.636">CertKeyContentProvider</text></g><!--MD5=[5357d77c905333bd3b8c76d7e69037b9]
class dynamiccertificates.ConfigMapCAController--><g id="elem_dynamiccertificates.ConfigMapCAController"><rect codeLine="34" fill="#F1F1F1" height="32" id="dynamiccertificates.ConfigMapCAController" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="4738" y="221.532"/><ellipse cx="4753" cy="237.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4753.1875,244.2351 C4755.4844,244.2351 4756.9375,242.6101 4756.9375,240.6101 C4756.9375,238.782 4756.1094,237.9382 4754.9688,237.1414 L4753.9531,236.4226 C4752.8281,235.6101 4752.4063,235.3132 4752.4063,234.4539 C4752.4063,233.7664 4752.8906,233.3601 4753.4688,233.3601 C4754.2031,233.3601 4754.6875,233.7507 4755.3906,234.3914 L4756.7031,232.8132 C4755.7344,231.7976 4754.7188,231.2039 4753.4531,231.2039 C4751.3125,231.2039 4749.8594,232.7195 4749.8594,234.6414 C4749.8594,236.4382 4750.7813,237.3445 4751.875,238.0945 L4752.9688,238.8445 C4753.9063,239.4539 4754.3594,240.032 4754.3594,240.9695 C4754.3594,241.6414 4753.8906,242.0632 4753.1875,242.0632 C4752.4844,242.0632 4751.7344,241.5476 4751.0781,240.7195 L4749.5313,242.407 C4750.5625,243.5945 4751.8594,244.2351 4753.1875,244.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="4767" y="243.636">ConfigMapCAController</text></g><!--MD5=[b4980cfcef936524fbb1e1cff64f8aa7]
class dynamiccertificates.ControllerRunner--><g id="elem_dynamiccertificates.ControllerRunner"><rect codeLine="60" fill="#F1F1F1" height="32" id="dynamiccertificates.ControllerRunner" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="4752" y="129.532"/><ellipse cx="4767" cy="145.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4763.3594,152.032 L4770.1406,152.032 L4770.1406,149.9539 L4767.9844,149.9539 L4767.9844,141.5164 L4770.1406,141.5164 L4770.1406,139.407 L4763.3594,139.407 L4763.3594,141.5164 L4765.4531,141.5164 L4765.4531,149.9539 L4763.3594,149.9539 L4763.3594,152.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114" x="4781" y="151.636">ControllerRunner</text></g><!--MD5=[f90978d94f961dfa1c01a2d644ad896e]
class dynamiccertificates.DynamicCertKeyPairContent--><g id="elem_dynamiccertificates.DynamicCertKeyPairContent"><rect codeLine="65" fill="#F1F1F1" height="32" id="dynamiccertificates.DynamicCertKeyPairContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="220" x="5171" y="221.532"/><ellipse cx="5186" cy="237.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5186.1875,244.2351 C5188.4844,244.2351 5189.9375,242.6101 5189.9375,240.6101 C5189.9375,238.782 5189.1094,237.9382 5187.9688,237.1414 L5186.9531,236.4226 C5185.8281,235.6101 5185.4063,235.3132 5185.4063,234.4539 C5185.4063,233.7664 5185.8906,233.3601 5186.4688,233.3601 C5187.2031,233.3601 5187.6875,233.7507 5188.3906,234.3914 L5189.7031,232.8132 C5188.7344,231.7976 5187.7188,231.2039 5186.4531,231.2039 C5184.3125,231.2039 5182.8594,232.7195 5182.8594,234.6414 C5182.8594,236.4382 5183.7813,237.3445 5184.875,238.0945 L5185.9688,238.8445 C5186.9063,239.4539 5187.3594,240.032 5187.3594,240.9695 C5187.3594,241.6414 5186.8906,242.0632 5186.1875,242.0632 C5185.4844,242.0632 5184.7344,241.5476 5184.0781,240.7195 L5182.5313,242.407 C5183.5625,243.5945 5184.8594,244.2351 5186.1875,244.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="5200" y="243.636">DynamicCertKeyPairContent</text></g><!--MD5=[d3ce5301ed10c06b335c1f43e00fa5f0]
class dynamiccertificates.DynamicFileCAContent--><g id="elem_dynamiccertificates.DynamicFileCAContent"><rect codeLine="86" fill="#F1F1F1" height="32" id="dynamiccertificates.DynamicFileCAContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="185" x="4517.5" y="221.532"/><ellipse cx="4532.5" cy="237.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4532.6875,244.2351 C4534.9844,244.2351 4536.4375,242.6101 4536.4375,240.6101 C4536.4375,238.782 4535.6094,237.9382 4534.4688,237.1414 L4533.4531,236.4226 C4532.3281,235.6101 4531.9063,235.3132 4531.9063,234.4539 C4531.9063,233.7664 4532.3906,233.3601 4532.9688,233.3601 C4533.7031,233.3601 4534.1875,233.7507 4534.8906,234.3914 L4536.2031,232.8132 C4535.2344,231.7976 4534.2188,231.2039 4532.9531,231.2039 C4530.8125,231.2039 4529.3594,232.7195 4529.3594,234.6414 C4529.3594,236.4382 4530.2813,237.3445 4531.375,238.0945 L4532.4688,238.8445 C4533.4063,239.4539 4533.8594,240.032 4533.8594,240.9695 C4533.8594,241.6414 4533.3906,242.0632 4532.6875,242.0632 C4531.9844,242.0632 4531.2344,241.5476 4530.5781,240.7195 L4529.0313,242.407 C4530.0625,243.5945 4531.3594,244.2351 4532.6875,244.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="4546.5" y="243.636">DynamicFileCAContent</text></g><!--MD5=[7ccc5297141d5ed2f8c0946b4d887ca8]
class dynamiccertificates.DynamicFileSNIContent--><g id="elem_dynamiccertificates.DynamicFileSNIContent"><rect codeLine="108" fill="#F1F1F1" height="32" id="dynamiccertificates.DynamicFileSNIContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="189" x="5644.5" y="313.532"/><ellipse cx="5659.5" cy="329.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5659.6875,336.2351 C5661.9844,336.2351 5663.4375,334.6101 5663.4375,332.6101 C5663.4375,330.782 5662.6094,329.9382 5661.4688,329.1414 L5660.4531,328.4226 C5659.3281,327.6101 5658.9063,327.3132 5658.9063,326.4539 C5658.9063,325.7664 5659.3906,325.3601 5659.9688,325.3601 C5660.7031,325.3601 5661.1875,325.7507 5661.8906,326.3914 L5663.2031,324.8132 C5662.2344,323.7976 5661.2188,323.2039 5659.9531,323.2039 C5657.8125,323.2039 5656.3594,324.7195 5656.3594,326.6414 C5656.3594,328.4382 5657.2813,329.3445 5658.375,330.0945 L5659.4688,330.8445 C5660.4063,331.4539 5660.8594,332.032 5660.8594,332.9695 C5660.8594,333.6414 5660.3906,334.0632 5659.6875,334.0632 C5658.9844,334.0632 5658.2344,333.5476 5657.5781,332.7195 L5656.0313,334.407 C5657.0625,335.5945 5658.3594,336.2351 5659.6875,336.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="5673.5" y="335.636">DynamicFileSNIContent</text></g><!--MD5=[a67cc82262d7e1141eb56c4798453f09]
class dynamiccertificates.DynamicServingCertificateController--><g id="elem_dynamiccertificates.DynamicServingCertificateController"><rect codeLine="114" fill="#F1F1F1" height="32" id="dynamiccertificates.DynamicServingCertificateController" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="272" x="5575" y="129.532"/><ellipse cx="5590" cy="145.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5590.1875,152.2351 C5592.4844,152.2351 5593.9375,150.6101 5593.9375,148.6101 C5593.9375,146.782 5593.1094,145.9382 5591.9688,145.1414 L5590.9531,144.4226 C5589.8281,143.6101 5589.4063,143.3132 5589.4063,142.4539 C5589.4063,141.7664 5589.8906,141.3601 5590.4688,141.3601 C5591.2031,141.3601 5591.6875,141.7507 5592.3906,142.3914 L5593.7031,140.8132 C5592.7344,139.7976 5591.7188,139.2039 5590.4531,139.2039 C5588.3125,139.2039 5586.8594,140.7195 5586.8594,142.6414 C5586.8594,144.4382 5587.7813,145.3445 5588.875,146.0945 L5589.9688,146.8445 C5590.9063,147.4539 5591.3594,148.032 5591.3594,148.9695 C5591.3594,149.6414 5590.8906,150.0632 5590.1875,150.0632 C5589.4844,150.0632 5588.7344,149.5476 5588.0781,148.7195 L5586.5313,150.407 C5587.5625,151.5945 5588.8594,152.2351 5590.1875,152.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="5604" y="151.636">DynamicServingCertificateController</text></g><!--MD5=[641fd7199e44eaadb7b0989971ebed4c]
class dynamiccertificates.Listener--><g id="elem_dynamiccertificates.Listener"><rect codeLine="136" fill="#F1F1F1" height="32" id="dynamiccertificates.Listener" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="86" x="5578" y="37.532"/><ellipse cx="5593" cy="53.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5589.3594,60.032 L5596.1406,60.032 L5596.1406,57.9539 L5593.9844,57.9539 L5593.9844,49.5164 L5596.1406,49.5164 L5596.1406,47.407 L5589.3594,47.407 L5589.3594,49.5164 L5591.4531,49.5164 L5591.4531,57.9539 L5589.3594,57.9539 L5589.3594,60.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="54" x="5607" y="59.636">Listener</text></g><!--MD5=[1dca8c3abd8128b7bc7fd652b35cafc2]
class dynamiccertificates.Notifier--><g id="elem_dynamiccertificates.Notifier"><rect codeLine="140" fill="#F1F1F1" height="32" id="dynamiccertificates.Notifier" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="81" x="5141.5" y="37.532"/><ellipse cx="5156.5" cy="53.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5152.8594,60.032 L5159.6406,60.032 L5159.6406,57.9539 L5157.4844,57.9539 L5157.4844,49.5164 L5159.6406,49.5164 L5159.6406,47.407 L5152.8594,47.407 L5152.8594,49.5164 L5154.9531,49.5164 L5154.9531,57.9539 L5152.8594,57.9539 L5152.8594,60.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="49" x="5170.5" y="59.636">Notifier</text></g><!--MD5=[fad63445722efddd7b8e0142d97134eb]
class dynamiccertificates.SNICertKeyContentProvider--><g id="elem_dynamiccertificates.SNICertKeyContentProvider"><rect codeLine="144" fill="#F1F1F1" height="32" id="dynamiccertificates.SNICertKeyContentProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="213" x="5633.5" y="221.532"/><ellipse cx="5648.5" cy="237.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5644.8594,244.032 L5651.6406,244.032 L5651.6406,241.9539 L5649.4844,241.9539 L5649.4844,233.5164 L5651.6406,233.5164 L5651.6406,231.407 L5644.8594,231.407 L5644.8594,233.5164 L5646.9531,233.5164 L5646.9531,241.9539 L5644.8594,241.9539 L5644.8594,244.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="181" x="5662.5" y="243.636">SNICertKeyContentProvider</text></g><!--MD5=[63300060382d1e9c0cb91b1e05e52e88]
class dynamiccertificates.caBundleAndVerifier--><g id="elem_dynamiccertificates.caBundleAndVerifier"><rect codeLine="148" fill="#F1F1F1" height="32" id="dynamiccertificates.caBundleAndVerifier" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="169" x="4686.5" y="37.532"/><ellipse cx="4701.5" cy="53.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4701.6875,60.2351 C4703.9844,60.2351 4705.4375,58.6101 4705.4375,56.6101 C4705.4375,54.782 4704.6094,53.9382 4703.4688,53.1414 L4702.4531,52.4226 C4701.3281,51.6101 4700.9063,51.3132 4700.9063,50.4539 C4700.9063,49.7664 4701.3906,49.3601 4701.9688,49.3601 C4702.7031,49.3601 4703.1875,49.7507 4703.8906,50.3914 L4705.2031,48.8132 C4704.2344,47.7976 4703.2188,47.2039 4701.9531,47.2039 C4699.8125,47.2039 4698.3594,48.7195 4698.3594,50.6414 C4698.3594,52.4382 4699.2813,53.3445 4700.375,54.0945 L4701.4688,54.8445 C4702.4063,55.4539 4702.8594,56.032 4702.8594,56.9695 C4702.8594,57.6414 4702.3906,58.0632 4701.6875,58.0632 C4700.9844,58.0632 4700.2344,57.5476 4699.5781,56.7195 L4698.0313,58.407 C4699.0625,59.5945 4700.3594,60.2351 4701.6875,60.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="4715.5" y="59.636">caBundleAndVerifier</text></g><!--MD5=[4541baab8d56d33737d1f84bf6b9770c]
class dynamiccertificates.caBundleContent--><g id="elem_dynamiccertificates.caBundleContent"><rect codeLine="153" fill="#F1F1F1" height="32" id="dynamiccertificates.caBundleContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="148" x="5699" y="37.532"/><ellipse cx="5714" cy="53.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5714.1875,60.2351 C5716.4844,60.2351 5717.9375,58.6101 5717.9375,56.6101 C5717.9375,54.782 5717.1094,53.9382 5715.9688,53.1414 L5714.9531,52.4226 C5713.8281,51.6101 5713.4063,51.3132 5713.4063,50.4539 C5713.4063,49.7664 5713.8906,49.3601 5714.4688,49.3601 C5715.2031,49.3601 5715.6875,49.7507 5716.3906,50.3914 L5717.7031,48.8132 C5716.7344,47.7976 5715.7188,47.2039 5714.4531,47.2039 C5712.3125,47.2039 5710.8594,48.7195 5710.8594,50.6414 C5710.8594,52.4382 5711.7813,53.3445 5712.875,54.0945 L5713.9688,54.8445 C5714.9063,55.4539 5715.3594,56.032 5715.3594,56.9695 C5715.3594,57.6414 5714.8906,58.0632 5714.1875,58.0632 C5713.4844,58.0632 5712.7344,57.5476 5712.0781,56.7195 L5710.5313,58.407 C5711.5625,59.5945 5712.8594,60.2351 5714.1875,60.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="5728" y="59.636">caBundleContent</text></g><!--MD5=[94d8e57dcff08d0780802fda3397e1ff]
class dynamiccertificates.certKeyContent--><g id="elem_dynamiccertificates.certKeyContent"><rect codeLine="159" fill="#F1F1F1" height="32" id="dynamiccertificates.certKeyContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="4253" y="37.532"/><ellipse cx="4268" cy="53.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4268.1875,60.2351 C4270.4844,60.2351 4271.9375,58.6101 4271.9375,56.6101 C4271.9375,54.782 4271.1094,53.9382 4269.9688,53.1414 L4268.9531,52.4226 C4267.8281,51.6101 4267.4063,51.3132 4267.4063,50.4539 C4267.4063,49.7664 4267.8906,49.3601 4268.4688,49.3601 C4269.2031,49.3601 4269.6875,49.7507 4270.3906,50.3914 L4271.7031,48.8132 C4270.7344,47.7976 4269.7188,47.2039 4268.4531,47.2039 C4266.3125,47.2039 4264.8594,48.7195 4264.8594,50.6414 C4264.8594,52.4382 4265.7813,53.3445 4266.875,54.0945 L4267.9688,54.8445 C4268.9063,55.4539 4269.3594,56.032 4269.3594,56.9695 C4269.3594,57.6414 4268.8906,58.0632 4268.1875,58.0632 C4267.4844,58.0632 4266.7344,57.5476 4266.0781,56.7195 L4264.5313,58.407 C4265.5625,59.5945 4266.8594,60.2351 4268.1875,60.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="4282" y="59.636">certKeyContent</text></g><!--MD5=[7e4e78d5d073c8819281e45ea326b0b9]
class dynamiccertificates.dynamicCertificateContent--><g id="elem_dynamiccertificates.dynamicCertificateContent"><rect codeLine="166" fill="#F1F1F1" height="32" id="dynamiccertificates.dynamicCertificateContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="210" x="4433" y="129.532"/><ellipse cx="4448" cy="145.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4448.1875,152.2351 C4450.4844,152.2351 4451.9375,150.6101 4451.9375,148.6101 C4451.9375,146.782 4451.1094,145.9382 4449.9688,145.1414 L4448.9531,144.4226 C4447.8281,143.6101 4447.4063,143.3132 4447.4063,142.4539 C4447.4063,141.7664 4447.8906,141.3601 4448.4688,141.3601 C4449.2031,141.3601 4449.6875,141.7507 4450.3906,142.3914 L4451.7031,140.8132 C4450.7344,139.7976 4449.7188,139.2039 4448.4531,139.2039 C4446.3125,139.2039 4444.8594,140.7195 4444.8594,142.6414 C4444.8594,144.4382 4445.7813,145.3445 4446.875,146.0945 L4447.9688,146.8445 C4448.9063,147.4539 4449.3594,148.032 4449.3594,148.9695 C4449.3594,149.6414 4448.8906,150.0632 4448.1875,150.0632 C4447.4844,150.0632 4446.7344,149.5476 4446.0781,148.7195 L4444.5313,150.407 C4445.5625,151.5945 4446.8594,152.2351 4448.1875,152.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="4462" y="151.636">dynamicCertificateContent</text></g><!--MD5=[044da6a9bfb106712d0c2bbdd9758acf]
class dynamiccertificates.unionCAContent--><g id="elem_dynamiccertificates.unionCAContent"><rect codeLine="209" fill="#F1F1F1" height="32" id="dynamiccertificates.unionCAContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="142" x="4340" y="221.532"/><ellipse cx="4355" cy="237.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4355.1875,244.2351 C4357.4844,244.2351 4358.9375,242.6101 4358.9375,240.6101 C4358.9375,238.782 4358.1094,237.9382 4356.9688,237.1414 L4355.9531,236.4226 C4354.8281,235.6101 4354.4063,235.3132 4354.4063,234.4539 C4354.4063,233.7664 4354.8906,233.3601 4355.4688,233.3601 C4356.2031,233.3601 4356.6875,233.7507 4357.3906,234.3914 L4358.7031,232.8132 C4357.7344,231.7976 4356.7188,231.2039 4355.4531,231.2039 C4353.3125,231.2039 4351.8594,232.7195 4351.8594,234.6414 C4351.8594,236.4382 4352.7813,237.3445 4353.875,238.0945 L4354.9688,238.8445 C4355.9063,239.4539 4356.3594,240.032 4356.3594,240.9695 C4356.3594,241.6414 4355.8906,242.0632 4355.1875,242.0632 C4354.4844,242.0632 4353.7344,241.5476 4353.0781,240.7195 L4351.5313,242.407 C4352.5625,243.5945 4353.8594,244.2351 4355.1875,244.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="4369" y="243.636">unionCAContent</text></g><!--MD5=[4fed6d1259947bbd6f96dd8cb98bfeeb]
class dynamiccertificates.sniCertKeyContent--><g id="elem_dynamiccertificates.sniCertKeyContent"><rect codeLine="176" fill="#F1F1F1" height="32" id="dynamiccertificates.sniCertKeyContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="156" x="4242" y="129.532"/><ellipse cx="4257" cy="145.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4257.1875,152.2351 C4259.4844,152.2351 4260.9375,150.6101 4260.9375,148.6101 C4260.9375,146.782 4260.1094,145.9382 4258.9688,145.1414 L4257.9531,144.4226 C4256.8281,143.6101 4256.4063,143.3132 4256.4063,142.4539 C4256.4063,141.7664 4256.8906,141.3601 4257.4688,141.3601 C4258.2031,141.3601 4258.6875,141.7507 4259.3906,142.3914 L4260.7031,140.8132 C4259.7344,139.7976 4258.7188,139.2039 4257.4531,139.2039 C4255.3125,139.2039 4253.8594,140.7195 4253.8594,142.6414 C4253.8594,144.4382 4254.7813,145.3445 4255.875,146.0945 L4256.9688,146.8445 C4257.9063,147.4539 4258.3594,148.032 4258.3594,148.9695 C4258.3594,149.6414 4257.8906,150.0632 4257.1875,150.0632 C4256.4844,150.0632 4255.7344,149.5476 4255.0781,148.7195 L4253.5313,150.407 C4254.5625,151.5945 4255.8594,152.2351 4257.1875,152.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="4271" y="151.636">sniCertKeyContent</text></g><!--MD5=[53c2766f92d07b9eac932143ecd14fad]
class dynamiccertificates.staticCAContent--><g id="elem_dynamiccertificates.staticCAContent"><rect codeLine="182" fill="#F1F1F1" height="32" id="dynamiccertificates.staticCAContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="4959.5" y="221.532"/><ellipse cx="4974.5" cy="237.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4974.6875,244.2351 C4976.9844,244.2351 4978.4375,242.6101 4978.4375,240.6101 C4978.4375,238.782 4977.6094,237.9382 4976.4688,237.1414 L4975.4531,236.4226 C4974.3281,235.6101 4973.9063,235.3132 4973.9063,234.4539 C4973.9063,233.7664 4974.3906,233.3601 4974.9688,233.3601 C4975.7031,233.3601 4976.1875,233.7507 4976.8906,234.3914 L4978.2031,232.8132 C4977.2344,231.7976 4976.2188,231.2039 4974.9531,231.2039 C4972.8125,231.2039 4971.3594,232.7195 4971.3594,234.6414 C4971.3594,236.4382 4972.2813,237.3445 4973.375,238.0945 L4974.4688,238.8445 C4975.4063,239.4539 4975.8594,240.032 4975.8594,240.9695 C4975.8594,241.6414 4975.3906,242.0632 4974.6875,242.0632 C4973.9844,242.0632 4973.2344,241.5476 4972.5781,240.7195 L4971.0313,242.407 C4972.0625,243.5945 4973.3594,244.2351 4974.6875,244.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="4988.5" y="243.636">staticCAContent</text></g><!--MD5=[aadca637a05e98079f99d00b01c833f5]
class dynamiccertificates.staticCertKeyContent--><g id="elem_dynamiccertificates.staticCertKeyContent"><rect codeLine="192" fill="#F1F1F1" height="32" id="dynamiccertificates.staticCertKeyContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="172" x="5426" y="221.532"/><ellipse cx="5441" cy="237.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5441.1875,244.2351 C5443.4844,244.2351 5444.9375,242.6101 5444.9375,240.6101 C5444.9375,238.782 5444.1094,237.9382 5442.9688,237.1414 L5441.9531,236.4226 C5440.8281,235.6101 5440.4063,235.3132 5440.4063,234.4539 C5440.4063,233.7664 5440.8906,233.3601 5441.4688,233.3601 C5442.2031,233.3601 5442.6875,233.7507 5443.3906,234.3914 L5444.7031,232.8132 C5443.7344,231.7976 5442.7188,231.2039 5441.4531,231.2039 C5439.3125,231.2039 5437.8594,232.7195 5437.8594,234.6414 C5437.8594,236.4382 5438.7813,237.3445 5439.875,238.0945 L5440.9688,238.8445 C5441.9063,239.4539 5442.3594,240.032 5442.3594,240.9695 C5442.3594,241.6414 5441.8906,242.0632 5441.1875,242.0632 C5440.4844,242.0632 5439.7344,241.5476 5439.0781,240.7195 L5437.5313,242.407 C5438.5625,243.5945 5439.8594,244.2351 5441.1875,244.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="5455" y="243.636">staticCertKeyContent</text></g><!--MD5=[1128500f85a89f2fd57bcb0968c71284]
class dynamiccertificates.staticSNICertKeyContent--><g id="elem_dynamiccertificates.staticSNICertKeyContent"><rect codeLine="202" fill="#F1F1F1" height="32" id="dynamiccertificates.staticSNICertKeyContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="5415" y="313.532"/><ellipse cx="5430" cy="329.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5430.1875,336.2351 C5432.4844,336.2351 5433.9375,334.6101 5433.9375,332.6101 C5433.9375,330.782 5433.1094,329.9382 5431.9688,329.1414 L5430.9531,328.4226 C5429.8281,327.6101 5429.4063,327.3132 5429.4063,326.4539 C5429.4063,325.7664 5429.8906,325.3601 5430.4688,325.3601 C5431.2031,325.3601 5431.6875,325.7507 5432.3906,326.3914 L5433.7031,324.8132 C5432.7344,323.7976 5431.7188,323.2039 5430.4531,323.2039 C5428.3125,323.2039 5426.8594,324.7195 5426.8594,326.6414 C5426.8594,328.4382 5427.7813,329.3445 5428.875,330.0945 L5429.9688,330.8445 C5430.9063,331.4539 5431.3594,332.032 5431.3594,332.9695 C5431.3594,333.6414 5430.8906,334.0632 5430.1875,334.0632 C5429.4844,334.0632 5428.7344,333.5476 5428.0781,332.7195 L5426.5313,334.407 C5427.5625,335.5945 5428.8594,336.2351 5430.1875,336.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="5444" y="335.636">staticSNICertKeyContent</text></g><!--MD5=[3226c3509c4ae6746d4c5dfdf644e4c2]
class egressselector.EgressSelector--><g id="elem_egressselector.EgressSelector"><rect codeLine="249" fill="#F1F1F1" height="32" id="egressselector.EgressSelector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="10435" y="405.532"/><ellipse cx="10450" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10450.1875,428.2351 C10452.4844,428.2351 10453.9375,426.6101 10453.9375,424.6101 C10453.9375,422.782 10453.1094,421.9382 10451.9688,421.1414 L10450.9531,420.4226 C10449.8281,419.6101 10449.4063,419.3132 10449.4063,418.4539 C10449.4063,417.7664 10449.8906,417.3601 10450.4688,417.3601 C10451.2031,417.3601 10451.6875,417.7507 10452.3906,418.3914 L10453.7031,416.8132 C10452.7344,415.7976 10451.7188,415.2039 10450.4531,415.2039 C10448.3125,415.2039 10446.8594,416.7195 10446.8594,418.6414 C10446.8594,420.4382 10447.7813,421.3445 10448.875,422.0945 L10449.9688,422.8445 C10450.9063,423.4539 10451.3594,424.032 10451.3594,424.9695 C10451.3594,425.6414 10450.8906,426.0632 10450.1875,426.0632 C10449.4844,426.0632 10448.7344,425.5476 10448.0781,424.7195 L10446.5313,426.407 C10447.5625,427.5945 10448.8594,428.2351 10450.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="10464" y="427.636">EgressSelector</text></g><!--MD5=[5d29fbc3be56d3d2fa96bffb3ed2e732]
class egressselector.EgressType--><g id="elem_egressselector.EgressType"><rect codeLine="272" fill="#F1F1F1" height="32" id="egressselector.EgressType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="107" x="10598.5" y="405.532"/><ellipse cx="10613.5" cy="421.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10612.2344,428.532 L10614.7813,428.532 L10614.7813,418.0164 L10617.4063,418.0164 L10617.4063,415.907 L10609.5938,415.907 L10609.5938,418.0164 L10612.2344,418.0164 L10612.2344,428.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="10627.5" y="427.636">EgressType</text></g><!--MD5=[5f5728d4c62a24012194f2401f2aa889]
class egressselector.NetworkContext--><g id="elem_egressselector.NetworkContext"><rect codeLine="260" fill="#F1F1F1" height="32" id="egressselector.NetworkContext" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="138" x="10741" y="405.532"/><ellipse cx="10756" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10756.1875,428.2351 C10758.4844,428.2351 10759.9375,426.6101 10759.9375,424.6101 C10759.9375,422.782 10759.1094,421.9382 10757.9688,421.1414 L10756.9531,420.4226 C10755.8281,419.6101 10755.4063,419.3132 10755.4063,418.4539 C10755.4063,417.7664 10755.8906,417.3601 10756.4688,417.3601 C10757.2031,417.3601 10757.6875,417.7507 10758.3906,418.3914 L10759.7031,416.8132 C10758.7344,415.7976 10757.7188,415.2039 10756.4531,415.2039 C10754.3125,415.2039 10752.8594,416.7195 10752.8594,418.6414 C10752.8594,420.4382 10753.7813,421.3445 10754.875,422.0945 L10755.9688,422.8445 C10756.9063,423.4539 10757.3594,424.032 10757.3594,424.9695 C10757.3594,425.6414 10756.8906,426.0632 10756.1875,426.0632 C10755.4844,426.0632 10754.7344,425.5476 10754.0781,424.7195 L10752.5313,426.407 C10753.5625,427.5945 10754.8594,428.2351 10756.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="10770" y="427.636">NetworkContext</text></g><!--MD5=[7a3323f88e0b1b4dbd9fad434a07a015]
class egressselector.dialerCreator--><g id="elem_egressselector.dialerCreator"><rect codeLine="264" fill="#F1F1F1" height="32" id="egressselector.dialerCreator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="118" x="10646" y="497.532"/><ellipse cx="10661" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10661.1875,520.2351 C10663.4844,520.2351 10664.9375,518.6101 10664.9375,516.6101 C10664.9375,514.782 10664.1094,513.9382 10662.9688,513.1414 L10661.9531,512.4226 C10660.8281,511.6101 10660.4063,511.3132 10660.4063,510.4539 C10660.4063,509.7664 10660.8906,509.3601 10661.4688,509.3601 C10662.2031,509.3601 10662.6875,509.7507 10663.3906,510.3914 L10664.7031,508.8132 C10663.7344,507.7976 10662.7188,507.2039 10661.4531,507.2039 C10659.3125,507.2039 10657.8594,508.7195 10657.8594,510.6414 C10657.8594,512.4382 10658.7813,513.3445 10659.875,514.0945 L10660.9688,514.8445 C10661.9063,515.4539 10662.3594,516.032 10662.3594,516.9695 C10662.3594,517.6414 10661.8906,518.0632 10661.1875,518.0632 C10660.4844,518.0632 10659.7344,517.5476 10659.0781,516.7195 L10657.5313,518.407 C10658.5625,519.5945 10659.8594,520.2351 10661.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="10675" y="519.636">dialerCreator</text></g><!--MD5=[0ed4e4f56c6a7020629183b7a2fcc18b]
class egressselector.Lookup--><g id="elem_egressselector.Lookup"><rect codeLine="274" fill="#F1F1F1" height="32" id="egressselector.Lookup" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="82" x="10799" y="497.532"/><ellipse cx="10814" cy="513.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10812.7344,520.532 L10815.2813,520.532 L10815.2813,510.0164 L10817.9063,510.0164 L10817.9063,507.907 L10810.0938,507.907 L10810.0938,510.0164 L10812.7344,510.0164 L10812.7344,520.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="10828" y="519.636">Lookup</text></g><!--MD5=[a88df88ca4dde2b63e009e672a288b77]
class egressselector.grpcProxier--><g id="elem_egressselector.grpcProxier"><rect codeLine="276" fill="#F1F1F1" height="32" id="egressselector.grpcProxier" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="107" x="10307.5" y="497.532"/><ellipse cx="10322.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10322.6875,520.2351 C10324.9844,520.2351 10326.4375,518.6101 10326.4375,516.6101 C10326.4375,514.782 10325.6094,513.9382 10324.4688,513.1414 L10323.4531,512.4226 C10322.3281,511.6101 10321.9063,511.3132 10321.9063,510.4539 C10321.9063,509.7664 10322.3906,509.3601 10322.9688,509.3601 C10323.7031,509.3601 10324.1875,509.7507 10324.8906,510.3914 L10326.2031,508.8132 C10325.2344,507.7976 10324.2188,507.2039 10322.9531,507.2039 C10320.8125,507.2039 10319.3594,508.7195 10319.3594,510.6414 C10319.3594,512.4382 10320.2813,513.3445 10321.375,514.0945 L10322.4688,514.8445 C10323.4063,515.4539 10323.8594,516.032 10323.8594,516.9695 C10323.8594,517.6414 10323.3906,518.0632 10322.6875,518.0632 C10321.9844,518.0632 10321.2344,517.5476 10320.5781,516.7195 L10319.0313,518.407 C10320.0625,519.5945 10321.3594,520.2351 10322.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="10336.5" y="519.636">grpcProxier</text></g><!--MD5=[14d046edd8c629eab3ae18ba690c8fe6]
class egressselector.httpConnectProxier--><g id="elem_egressselector.httpConnectProxier"><rect codeLine="282" fill="#F1F1F1" height="32" id="egressselector.httpConnectProxier" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="161" x="10449.5" y="497.532"/><ellipse cx="10464.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10464.6875,520.2351 C10466.9844,520.2351 10468.4375,518.6101 10468.4375,516.6101 C10468.4375,514.782 10467.6094,513.9382 10466.4688,513.1414 L10465.4531,512.4226 C10464.3281,511.6101 10463.9063,511.3132 10463.9063,510.4539 C10463.9063,509.7664 10464.3906,509.3601 10464.9688,509.3601 C10465.7031,509.3601 10466.1875,509.7507 10466.8906,510.3914 L10468.2031,508.8132 C10467.2344,507.7976 10466.2188,507.2039 10464.9531,507.2039 C10462.8125,507.2039 10461.3594,508.7195 10461.3594,510.6414 C10461.3594,512.4382 10462.2813,513.3445 10463.375,514.0945 L10464.4688,514.8445 C10465.4063,515.4539 10465.8594,516.032 10465.8594,516.9695 C10465.8594,517.6414 10465.3906,518.0632 10464.6875,518.0632 C10463.9844,518.0632 10463.2344,517.5476 10462.5781,516.7195 L10461.0313,518.407 C10462.0625,519.5945 10463.3594,520.2351 10464.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="10478.5" y="519.636">httpConnectProxier</text></g><!--MD5=[8a75e07db0b51d566c5cf1c159e65b3b]
class egressselector.metricsOptions--><g id="elem_egressselector.metricsOptions"><rect codeLine="289" fill="#F1F1F1" height="32" id="egressselector.metricsOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="10916.5" y="497.532"/><ellipse cx="10931.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10931.6875,520.2351 C10933.9844,520.2351 10935.4375,518.6101 10935.4375,516.6101 C10935.4375,514.782 10934.6094,513.9382 10933.4688,513.1414 L10932.4531,512.4226 C10931.3281,511.6101 10930.9063,511.3132 10930.9063,510.4539 C10930.9063,509.7664 10931.3906,509.3601 10931.9688,509.3601 C10932.7031,509.3601 10933.1875,509.7507 10933.8906,510.3914 L10935.2031,508.8132 C10934.2344,507.7976 10933.2188,507.2039 10931.9531,507.2039 C10929.8125,507.2039 10928.3594,508.7195 10928.3594,510.6414 C10928.3594,512.4382 10929.2813,513.3445 10930.375,514.0945 L10931.4688,514.8445 C10932.4063,515.4539 10932.8594,516.032 10932.8594,516.9695 C10932.8594,517.6414 10932.3906,518.0632 10931.6875,518.0632 C10930.9844,518.0632 10930.2344,517.5476 10929.5781,516.7195 L10928.0313,518.407 C10929.0625,519.5945 10930.3594,520.2351 10931.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="10945.5" y="519.636">metricsOptions</text></g><!--MD5=[9593a62336f33662b86bc1f49285eabd]
class egressselector.proxier--><g id="elem_egressselector.proxier"><rect codeLine="294" fill="#F1F1F1" height="32" id="egressselector.proxier" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="78" x="10322" y="405.532"/><ellipse cx="10337" cy="421.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10333.3594,428.032 L10340.1406,428.032 L10340.1406,425.9539 L10337.9844,425.9539 L10337.9844,417.5164 L10340.1406,417.5164 L10340.1406,415.407 L10333.3594,415.407 L10333.3594,417.5164 L10335.4531,417.5164 L10335.4531,425.9539 L10333.3594,425.9539 L10333.3594,428.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="46" x="10351" y="427.636">proxier</text></g><!--MD5=[e8a8233dfe6e62e87c364fe0424a7659]
class egressselector.proxyServerConnector--><g id="elem_egressselector.proxyServerConnector"><rect codeLine="298" fill="#F1F1F1" height="32" id="egressselector.proxyServerConnector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="9830.5" y="405.532"/><ellipse cx="9845.5" cy="421.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9841.8594,428.032 L9848.6406,428.032 L9848.6406,425.9539 L9846.4844,425.9539 L9846.4844,417.5164 L9848.6406,417.5164 L9848.6406,415.407 L9841.8594,415.407 L9841.8594,417.5164 L9843.9531,417.5164 L9843.9531,425.9539 L9841.8594,425.9539 L9841.8594,428.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="145" x="9859.5" y="427.636">proxyServerConnector</text></g><!--MD5=[cd4db974159b789311dff5f058de5262]
class egressselector.tcpHTTPConnectConnector--><g id="elem_egressselector.tcpHTTPConnectConnector"><rect codeLine="302" fill="#F1F1F1" height="32" id="egressselector.tcpHTTPConnectConnector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="211" x="10061.5" y="497.532"/><ellipse cx="10076.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10076.6875,520.2351 C10078.9844,520.2351 10080.4375,518.6101 10080.4375,516.6101 C10080.4375,514.782 10079.6094,513.9382 10078.4688,513.1414 L10077.4531,512.4226 C10076.3281,511.6101 10075.9063,511.3132 10075.9063,510.4539 C10075.9063,509.7664 10076.3906,509.3601 10076.9688,509.3601 C10077.7031,509.3601 10078.1875,509.7507 10078.8906,510.3914 L10080.2031,508.8132 C10079.2344,507.7976 10078.2188,507.2039 10076.9531,507.2039 C10074.8125,507.2039 10073.3594,508.7195 10073.3594,510.6414 C10073.3594,512.4382 10074.2813,513.3445 10075.375,514.0945 L10076.4688,514.8445 C10077.4063,515.4539 10077.8594,516.032 10077.8594,516.9695 C10077.8594,517.6414 10077.3906,518.0632 10076.6875,518.0632 C10075.9844,518.0632 10075.2344,517.5476 10074.5781,516.7195 L10073.0313,518.407 C10074.0625,519.5945 10075.3594,520.2351 10076.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="10090.5" y="519.636">tcpHTTPConnectConnector</text></g><!--MD5=[f08970cf477970bf5c7cb1c5f32bc95c]
class egressselector.udsGRPCConnector--><g id="elem_egressselector.udsGRPCConnector"><rect codeLine="309" fill="#F1F1F1" height="32" id="egressselector.udsGRPCConnector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="162" x="9614" y="497.532"/><ellipse cx="9629" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9629.1875,520.2351 C9631.4844,520.2351 9632.9375,518.6101 9632.9375,516.6101 C9632.9375,514.782 9632.1094,513.9382 9630.9688,513.1414 L9629.9531,512.4226 C9628.8281,511.6101 9628.4063,511.3132 9628.4063,510.4539 C9628.4063,509.7664 9628.8906,509.3601 9629.4688,509.3601 C9630.2031,509.3601 9630.6875,509.7507 9631.3906,510.3914 L9632.7031,508.8132 C9631.7344,507.7976 9630.7188,507.2039 9629.4531,507.2039 C9627.3125,507.2039 9625.8594,508.7195 9625.8594,510.6414 C9625.8594,512.4382 9626.7813,513.3445 9627.875,514.0945 L9628.9688,514.8445 C9629.9063,515.4539 9630.3594,516.032 9630.3594,516.9695 C9630.3594,517.6414 9629.8906,518.0632 9629.1875,518.0632 C9628.4844,518.0632 9627.7344,517.5476 9627.0781,516.7195 L9625.5313,518.407 C9626.5625,519.5945 9627.8594,520.2351 9629.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="9643" y="519.636">udsGRPCConnector</text></g><!--MD5=[707d0b5cfae7318a95de16501641be57]
class egressselector.udsHTTPConnectConnector--><g id="elem_egressselector.udsHTTPConnectConnector"><rect codeLine="315" fill="#F1F1F1" height="32" id="egressselector.udsHTTPConnectConnector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="215" x="9811.5" y="497.532"/><ellipse cx="9826.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9826.6875,520.2351 C9828.9844,520.2351 9830.4375,518.6101 9830.4375,516.6101 C9830.4375,514.782 9829.6094,513.9382 9828.4688,513.1414 L9827.4531,512.4226 C9826.3281,511.6101 9825.9063,511.3132 9825.9063,510.4539 C9825.9063,509.7664 9826.3906,509.3601 9826.9688,509.3601 C9827.7031,509.3601 9828.1875,509.7507 9828.8906,510.3914 L9830.2031,508.8132 C9829.2344,507.7976 9828.2188,507.2039 9826.9531,507.2039 C9824.8125,507.2039 9823.3594,508.7195 9823.3594,510.6414 C9823.3594,512.4382 9824.2813,513.3445 9825.375,514.0945 L9826.4688,514.8445 C9827.4063,515.4539 9827.8594,516.032 9827.8594,516.9695 C9827.8594,517.6414 9827.3906,518.0632 9826.6875,518.0632 C9825.9844,518.0632 9825.2344,517.5476 9824.5781,516.7195 L9823.0313,518.407 C9824.0625,519.5945 9825.3594,520.2351 9826.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="9840.5" y="519.636">udsHTTPConnectConnector</text></g><!--MD5=[5877d36800ef6f40b56fbff981f0ad2e]
class egressselector.fontcolorbluefuncfontNetworkContextnetDialFuncerror--><g id="elem_egressselector.fontcolorbluefuncfontNetworkContextnetDialFuncerror"><rect codeLine="321" fill="#F1F1F1" height="32" id="egressselector.fontcolorbluefuncfontNetworkContextnetDialFuncerror" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="314" x="10548" y="589.532"/><ellipse cx="10563" cy="605.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10563.2344,612.2351 C10564.3906,612.2351 10565.4844,611.7507 10566.3125,610.7195 L10564.8906,609.2039 C10564.5,609.7507 10564.0313,610.0632 10563.4688,610.0632 C10562.2813,610.0632 10561.2656,608.9226 10561.2656,605.6882 C10561.2656,602.532 10562.3281,601.3601 10563.3594,601.3601 C10563.9531,601.3601 10564.3281,601.657 10564.75,602.157 L10566.1719,600.5945 C10565.5,599.8445 10564.5313,599.2039 10563.25,599.2039 C10560.8281,599.2039 10558.6875,601.1726 10558.6875,605.7976 C10558.6875,610.4382 10560.8281,612.2351 10563.2344,612.2351 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="10577" y="611.636">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="10607" y="611.636">(NetworkContext) (net.DialFunc, error)</text></g><!--MD5=[8589d0c680ef1288b8d4f90557bf45b1]
class encryptionconfig.DynamicTransformers--><g id="elem_encryptionconfig.DynamicTransformers"><rect codeLine="333" fill="#F1F1F1" height="32" id="encryptionconfig.DynamicTransformers" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="9401" y="497.532"/><ellipse cx="9416" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9416.1875,520.2351 C9418.4844,520.2351 9419.9375,518.6101 9419.9375,516.6101 C9419.9375,514.782 9419.1094,513.9382 9417.9688,513.1414 L9416.9531,512.4226 C9415.8281,511.6101 9415.4063,511.3132 9415.4063,510.4539 C9415.4063,509.7664 9415.8906,509.3601 9416.4688,509.3601 C9417.2031,509.3601 9417.6875,509.7507 9418.3906,510.3914 L9419.7031,508.8132 C9418.7344,507.7976 9417.7188,507.2039 9416.4531,507.2039 C9414.3125,507.2039 9412.8594,508.7195 9412.8594,510.6414 C9412.8594,512.4382 9413.7813,513.3445 9414.875,514.0945 L9415.9688,514.8445 C9416.9063,515.4539 9417.3594,516.032 9417.3594,516.9695 C9417.3594,517.6414 9416.8906,518.0632 9416.1875,518.0632 C9415.4844,518.0632 9414.7344,517.5476 9414.0781,516.7195 L9412.5313,518.407 C9413.5625,519.5945 9414.8594,520.2351 9416.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="9430" y="519.636">DynamicTransformers</text></g><!--MD5=[a159a393b0aa806e4be805a1a8849bcf]
class encryptionconfig.EncryptionConfiguration--><g id="elem_encryptionconfig.EncryptionConfiguration"><rect codeLine="342" fill="#F1F1F1" height="32" id="encryptionconfig.EncryptionConfiguration" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="8415" y="405.532"/><ellipse cx="8430" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8430.1875,428.2351 C8432.4844,428.2351 8433.9375,426.6101 8433.9375,424.6101 C8433.9375,422.782 8433.1094,421.9382 8431.9688,421.1414 L8430.9531,420.4226 C8429.8281,419.6101 8429.4063,419.3132 8429.4063,418.4539 C8429.4063,417.7664 8429.8906,417.3601 8430.4688,417.3601 C8431.2031,417.3601 8431.6875,417.7507 8432.3906,418.3914 L8433.7031,416.8132 C8432.7344,415.7976 8431.7188,415.2039 8430.4531,415.2039 C8428.3125,415.2039 8426.8594,416.7195 8426.8594,418.6414 C8426.8594,420.4382 8427.7813,421.3445 8428.875,422.0945 L8429.9688,422.8445 C8430.9063,423.4539 8431.3594,424.032 8431.3594,424.9695 C8431.3594,425.6414 8430.8906,426.0632 8430.1875,426.0632 C8429.4844,426.0632 8428.7344,425.5476 8428.0781,424.7195 L8426.5313,426.407 C8427.5625,427.5945 8428.8594,428.2351 8430.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="8444" y="427.636">EncryptionConfiguration</text></g><!--MD5=[dcbca37a970b4067846c8adbb1c86d27]
class encryptionconfig.ResourceTransformers--><g id="elem_encryptionconfig.ResourceTransformers"><rect codeLine="349" fill="#F1F1F1" height="32" id="encryptionconfig.ResourceTransformers" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="181" x="9309.5" y="405.532"/><ellipse cx="9324.5" cy="421.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9320.8594,428.032 L9327.6406,428.032 L9327.6406,425.9539 L9325.4844,425.9539 L9325.4844,417.5164 L9327.6406,417.5164 L9327.6406,415.407 L9320.8594,415.407 L9320.8594,417.5164 L9322.9531,417.5164 L9322.9531,425.9539 L9320.8594,425.9539 L9320.8594,428.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="149" x="9338.5" y="427.636">ResourceTransformers</text></g><!--MD5=[502f1e3af8f2f27f0345407e1b1bc51b]
class encryptionconfig.StaticTransformers--><g id="elem_encryptionconfig.StaticTransformers"><rect codeLine="357" fill="#F1F1F1" height="32" id="encryptionconfig.StaticTransformers" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="157" x="9208.5" y="497.532"/><ellipse cx="9223.5" cy="513.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9222.2344,520.532 L9224.7813,520.532 L9224.7813,510.0164 L9227.4063,510.0164 L9227.4063,507.907 L9219.5938,507.907 L9219.5938,510.0164 L9222.2344,510.0164 L9222.2344,520.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="9237.5" y="519.636">StaticTransformers</text></g><!--MD5=[1a81683b0edc64598db68fc02929563e]
class encryptionconfig.blockTransformerFunc--><g id="elem_encryptionconfig.blockTransformerFunc"><rect codeLine="359" fill="#F1F1F1" height="32" id="encryptionconfig.blockTransformerFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="182" x="8644" y="405.532"/><ellipse cx="8659" cy="421.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8657.7344,428.532 L8660.2813,428.532 L8660.2813,418.0164 L8662.9063,418.0164 L8662.9063,415.907 L8655.0938,415.907 L8655.0938,418.0164 L8657.7344,418.0164 L8657.7344,428.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="8673" y="427.636">blockTransformerFunc</text></g><!--MD5=[763f71387a78ccfe3af66ed5d8ffbd08]
class encryptionconfig.kmsHealthChecker--><g id="elem_encryptionconfig.kmsHealthChecker"><rect codeLine="369" fill="#F1F1F1" height="32" id="encryptionconfig.kmsHealthChecker" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="158" x="8186" y="405.532"/><ellipse cx="8201" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8201.1875,428.2351 C8203.4844,428.2351 8204.9375,426.6101 8204.9375,424.6101 C8204.9375,422.782 8204.1094,421.9382 8202.9688,421.1414 L8201.9531,420.4226 C8200.8281,419.6101 8200.4063,419.3132 8200.4063,418.4539 C8200.4063,417.7664 8200.8906,417.3601 8201.4688,417.3601 C8202.2031,417.3601 8202.6875,417.7507 8203.3906,418.3914 L8204.7031,416.8132 C8203.7344,415.7976 8202.7188,415.2039 8201.4531,415.2039 C8199.3125,415.2039 8197.8594,416.7195 8197.8594,418.6414 C8197.8594,420.4382 8198.7813,421.3445 8199.875,422.0945 L8200.9688,422.8445 C8201.9063,423.4539 8202.3594,424.032 8202.3594,424.9695 C8202.3594,425.6414 8201.8906,426.0632 8201.1875,426.0632 C8200.4844,426.0632 8199.7344,425.5476 8199.0781,424.7195 L8197.5313,426.407 C8198.5625,427.5945 8199.8594,428.2351 8201.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="8215" y="427.636">kmsHealthChecker</text></g><!--MD5=[f0013c337f598526206434a3dd2d9fec]
class encryptionconfig.unionTransformers--><g id="elem_encryptionconfig.unionTransformers"><rect codeLine="427" fill="#F1F1F1" height="32" id="encryptionconfig.unionTransformers" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="159" x="8861.5" y="405.532"/><ellipse cx="8876.5" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8876.6875,428.2351 C8878.9844,428.2351 8880.4375,426.6101 8880.4375,424.6101 C8880.4375,422.782 8879.6094,421.9382 8878.4688,421.1414 L8877.4531,420.4226 C8876.3281,419.6101 8875.9063,419.3132 8875.9063,418.4539 C8875.9063,417.7664 8876.3906,417.3601 8876.9688,417.3601 C8877.7031,417.3601 8878.1875,417.7507 8878.8906,418.3914 L8880.2031,416.8132 C8879.2344,415.7976 8878.2188,415.2039 8876.9531,415.2039 C8874.8125,415.2039 8873.3594,416.7195 8873.3594,418.6414 C8873.3594,420.4382 8874.2813,421.3445 8875.375,422.0945 L8876.4688,422.8445 C8877.4063,423.4539 8877.8594,424.032 8877.8594,424.9695 C8877.8594,425.6414 8877.3906,426.0632 8876.6875,426.0632 C8875.9844,426.0632 8875.2344,425.5476 8874.5781,424.7195 L8873.0313,426.407 C8874.0625,427.5945 8875.3594,428.2351 8876.6875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="8890.5" y="427.636">unionTransformers</text></g><!--MD5=[87f9b8c1e8e68be8cc2323c36dc18f76]
class encryptionconfig.healthChecker--><g id="elem_encryptionconfig.healthChecker"><rect codeLine="365" fill="#F1F1F1" height="32" id="encryptionconfig.healthChecker" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="129" x="8021.5" y="405.532"/><ellipse cx="8036.5" cy="421.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8032.8594,428.032 L8039.6406,428.032 L8039.6406,425.9539 L8037.4844,425.9539 L8037.4844,417.5164 L8039.6406,417.5164 L8039.6406,415.407 L8032.8594,415.407 L8032.8594,417.5164 L8034.9531,417.5164 L8034.9531,425.9539 L8032.8594,425.9539 L8032.8594,428.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="97" x="8050.5" y="427.636">healthChecker</text></g><!--MD5=[9a6f76629d504ae5ea869f0f32d7d2f4]
class encryptionconfig.kmsPluginHealthzResponse--><g id="elem_encryptionconfig.kmsPluginHealthzResponse"><rect codeLine="374" fill="#F1F1F1" height="32" id="encryptionconfig.kmsPluginHealthzResponse" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="219" x="9055.5" y="405.532"/><ellipse cx="9070.5" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M9070.6875,428.2351 C9072.9844,428.2351 9074.4375,426.6101 9074.4375,424.6101 C9074.4375,422.782 9073.6094,421.9382 9072.4688,421.1414 L9071.4531,420.4226 C9070.3281,419.6101 9069.9063,419.3132 9069.9063,418.4539 C9069.9063,417.7664 9070.3906,417.3601 9070.9688,417.3601 C9071.7031,417.3601 9072.1875,417.7507 9072.8906,418.3914 L9074.2031,416.8132 C9073.2344,415.7976 9072.2188,415.2039 9070.9531,415.2039 C9068.8125,415.2039 9067.3594,416.7195 9067.3594,418.6414 C9067.3594,420.4382 9068.2813,421.3445 9069.375,422.0945 L9070.4688,422.8445 C9071.4063,423.4539 9071.8594,424.032 9071.8594,424.9695 C9071.8594,425.6414 9071.3906,426.0632 9070.6875,426.0632 C9069.9844,426.0632 9069.2344,425.5476 9068.5781,424.7195 L9067.0313,426.407 C9068.0625,427.5945 9069.3594,428.2351 9070.6875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="9084.5" y="427.636">kmsPluginHealthzResponse</text></g><!--MD5=[b3d36dbf8343a3b24bf88c958939d4bc]
class encryptionconfig.kmsPluginProbe--><g id="elem_encryptionconfig.kmsPluginProbe"><rect codeLine="379" fill="#F1F1F1" height="32" id="encryptionconfig.kmsPluginProbe" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="142" x="8010" y="497.532"/><ellipse cx="8025" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8025.1875,520.2351 C8027.4844,520.2351 8028.9375,518.6101 8028.9375,516.6101 C8028.9375,514.782 8028.1094,513.9382 8026.9688,513.1414 L8025.9531,512.4226 C8024.8281,511.6101 8024.4063,511.3132 8024.4063,510.4539 C8024.4063,509.7664 8024.8906,509.3601 8025.4688,509.3601 C8026.2031,509.3601 8026.6875,509.7507 8027.3906,510.3914 L8028.7031,508.8132 C8027.7344,507.7976 8026.7188,507.2039 8025.4531,507.2039 C8023.3125,507.2039 8021.8594,508.7195 8021.8594,510.6414 C8021.8594,512.4382 8022.7813,513.3445 8023.875,514.0945 L8024.9688,514.8445 C8025.9063,515.4539 8026.3594,516.032 8026.3594,516.9695 C8026.3594,517.6414 8025.8906,518.0632 8025.1875,518.0632 C8024.4844,518.0632 8023.7344,517.5476 8023.0781,516.7195 L8021.5313,518.407 C8022.5625,519.5945 8023.8594,520.2351 8025.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="8039" y="519.636">kmsPluginProbe</text></g><!--MD5=[0bc351a1a38fb8f23a7a37e985e849b0]
class encryptionconfig.kmsState--><g id="elem_encryptionconfig.kmsState"><rect codeLine="390" fill="#F1F1F1" height="32" id="encryptionconfig.kmsState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="94" x="8380" y="497.532"/><ellipse cx="8395" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8395.1875,520.2351 C8397.4844,520.2351 8398.9375,518.6101 8398.9375,516.6101 C8398.9375,514.782 8398.1094,513.9382 8396.9688,513.1414 L8395.9531,512.4226 C8394.8281,511.6101 8394.4063,511.3132 8394.4063,510.4539 C8394.4063,509.7664 8394.8906,509.3601 8395.4688,509.3601 C8396.2031,509.3601 8396.6875,509.7507 8397.3906,510.3914 L8398.7031,508.8132 C8397.7344,507.7976 8396.7188,507.2039 8395.4531,507.2039 C8393.3125,507.2039 8391.8594,508.7195 8391.8594,510.6414 C8391.8594,512.4382 8392.7813,513.3445 8393.875,514.0945 L8394.9688,514.8445 C8395.9063,515.4539 8396.3594,516.032 8396.3594,516.9695 C8396.3594,517.6414 8395.8906,518.0632 8395.1875,518.0632 C8394.4844,518.0632 8393.7344,517.5476 8393.0781,516.7195 L8391.5313,518.407 C8392.5625,519.5945 8393.8594,520.2351 8395.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="8409" y="519.636">kmsState</text></g><!--MD5=[5bf3f0fbb2963ff45c91bade9b7f85cc]
class encryptionconfig.kmsv2PluginProbe--><g id="elem_encryptionconfig.kmsv2PluginProbe"><rect codeLine="397" fill="#F1F1F1" height="32" id="encryptionconfig.kmsv2PluginProbe" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="157" x="8187.5" y="497.532"/><ellipse cx="8202.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8202.6875,520.2351 C8204.9844,520.2351 8206.4375,518.6101 8206.4375,516.6101 C8206.4375,514.782 8205.6094,513.9382 8204.4688,513.1414 L8203.4531,512.4226 C8202.3281,511.6101 8201.9063,511.3132 8201.9063,510.4539 C8201.9063,509.7664 8202.3906,509.3601 8202.9688,509.3601 C8203.7031,509.3601 8204.1875,509.7507 8204.8906,510.3914 L8206.2031,508.8132 C8205.2344,507.7976 8204.2188,507.2039 8202.9531,507.2039 C8200.8125,507.2039 8199.3594,508.7195 8199.3594,510.6414 C8199.3594,512.4382 8200.2813,513.3445 8201.375,514.0945 L8202.4688,514.8445 C8203.4063,515.4539 8203.8594,516.032 8203.8594,516.9695 C8203.8594,517.6414 8203.3906,518.0632 8202.6875,518.0632 C8201.9844,518.0632 8201.2344,517.5476 8200.5781,516.7195 L8199.0313,518.407 C8200.0625,519.5945 8201.3594,520.2351 8202.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="8216.5" y="519.636">kmsv2PluginProbe</text></g><!--MD5=[76c49530bc6c27190f5e61d87aa2990a]
class encryptionconfig.resourceTransformer--><g id="elem_encryptionconfig.resourceTransformer"><rect codeLine="410" fill="#F1F1F1" height="32" id="encryptionconfig.resourceTransformer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="170" x="8509" y="497.532"/><ellipse cx="8524" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8524.1875,520.2351 C8526.4844,520.2351 8527.9375,518.6101 8527.9375,516.6101 C8527.9375,514.782 8527.1094,513.9382 8525.9688,513.1414 L8524.9531,512.4226 C8523.8281,511.6101 8523.4063,511.3132 8523.4063,510.4539 C8523.4063,509.7664 8523.8906,509.3601 8524.4688,509.3601 C8525.2031,509.3601 8525.6875,509.7507 8526.3906,510.3914 L8527.7031,508.8132 C8526.7344,507.7976 8525.7188,507.2039 8524.4531,507.2039 C8522.3125,507.2039 8520.8594,508.7195 8520.8594,510.6414 C8520.8594,512.4382 8521.7813,513.3445 8522.875,514.0945 L8523.9688,514.8445 C8524.9063,515.4539 8525.3594,516.032 8525.3594,516.9695 C8525.3594,517.6414 8524.8906,518.0632 8524.1875,518.0632 C8523.4844,518.0632 8522.7344,517.5476 8522.0781,516.7195 L8520.5313,518.407 C8521.5625,519.5945 8522.8594,520.2351 8524.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="8538" y="519.636">resourceTransformer</text></g><!--MD5=[04cd0febac5cb198ac3343f69a9dec77]
class encryptionconfig.transformTracker--><g id="elem_encryptionconfig.transformTracker"><rect codeLine="420" fill="#F1F1F1" height="32" id="encryptionconfig.transformTracker" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="8714" y="497.532"/><ellipse cx="8729" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8729.1875,520.2351 C8731.4844,520.2351 8732.9375,518.6101 8732.9375,516.6101 C8732.9375,514.782 8732.1094,513.9382 8730.9688,513.1414 L8729.9531,512.4226 C8728.8281,511.6101 8728.4063,511.3132 8728.4063,510.4539 C8728.4063,509.7664 8728.8906,509.3601 8729.4688,509.3601 C8730.2031,509.3601 8730.6875,509.7507 8731.3906,510.3914 L8732.7031,508.8132 C8731.7344,507.7976 8730.7188,507.2039 8729.4531,507.2039 C8727.3125,507.2039 8725.8594,508.7195 8725.8594,510.6414 C8725.8594,512.4382 8726.7813,513.3445 8727.875,514.0945 L8728.9688,514.8445 C8729.9063,515.4539 8730.3594,516.032 8730.3594,516.9695 C8730.3594,517.6414 8729.8906,518.0632 8729.1875,518.0632 C8728.4844,518.0632 8727.7344,517.5476 8727.0781,516.7195 L8725.5313,518.407 C8726.5625,519.5945 8727.8594,520.2351 8729.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="8743" y="519.636">transformTracker</text></g><!--MD5=[f71cf853cf379064485d3c1b9d68b948]
class encryptionconfig.fontcolorbluefuncfontcipherBlockvalueTransformer--><g id="elem_encryptionconfig.fontcolorbluefuncfontcipherBlockvalueTransformer"><rect codeLine="432" fill="#F1F1F1" height="32" id="encryptionconfig.fontcolorbluefuncfontcipherBlockvalueTransformer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="278" x="8895" y="497.532"/><ellipse cx="8910" cy="513.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8910.2344,520.2351 C8911.3906,520.2351 8912.4844,519.7507 8913.3125,518.7195 L8911.8906,517.2039 C8911.5,517.7507 8911.0313,518.0632 8910.4688,518.0632 C8909.2813,518.0632 8908.2656,516.9226 8908.2656,513.6882 C8908.2656,510.532 8909.3281,509.3601 8910.3594,509.3601 C8910.9531,509.3601 8911.3281,509.657 8911.75,510.157 L8913.1719,508.5945 C8912.5,507.8445 8911.5313,507.2039 8910.25,507.2039 C8907.8281,507.2039 8905.6875,509.1726 8905.6875,513.7976 C8905.6875,518.4382 8907.8281,520.2351 8910.2344,520.2351 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="8924" y="519.636">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="8954" y="519.636">(cipher.Block) value.Transformer</text></g><!--MD5=[9007159a60865f03f3af6141c4410193]
class encryptionconfig.fontcolorbluemapfontschemaGroupResourcevalueTransformer--><g id="elem_encryptionconfig.fontcolorbluemapfontschemaGroupResourcevalueTransformer"><rect codeLine="435" fill="#F1F1F1" height="32" id="encryptionconfig.fontcolorbluemapfontschemaGroupResourcevalueTransformer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="351" x="8251.5" y="589.532"/><ellipse cx="8266.5" cy="605.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8266.7344,612.2351 C8267.8906,612.2351 8268.9844,611.7507 8269.8125,610.7195 L8268.3906,609.2039 C8268,609.7507 8267.5313,610.0632 8266.9688,610.0632 C8265.7813,610.0632 8264.7656,608.9226 8264.7656,605.6882 C8264.7656,602.532 8265.8281,601.3601 8266.8594,601.3601 C8267.4531,601.3601 8267.8281,601.657 8268.25,602.157 L8269.6719,600.5945 C8269,599.8445 8268.0313,599.2039 8266.75,599.2039 C8264.3281,599.2039 8262.1875,601.1726 8262.1875,605.7976 C8262.1875,610.4382 8264.3281,612.2351 8266.7344,612.2351 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="8280.5" y="611.636">map</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="8310.5" y="611.636">[schema.GroupResource]value.Transformer</text></g><!--MD5=[1f9187456c6f5b930fd59a1aa2f01633]
class encryptionconfig.healthzHealthChecker--><g id="elem_encryptionconfig.healthzHealthChecker"><rect codeLine="438" fill="#F1F1F1" height="32" id="encryptionconfig.healthzHealthChecker" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="8638" y="589.532"/><ellipse cx="8653" cy="605.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8653.2344,612.2351 C8654.3906,612.2351 8655.4844,611.7507 8656.3125,610.7195 L8654.8906,609.2039 C8654.5,609.7507 8654.0313,610.0632 8653.4688,610.0632 C8652.2813,610.0632 8651.2656,608.9226 8651.2656,605.6882 C8651.2656,602.532 8652.3281,601.3601 8653.3594,601.3601 C8653.9531,601.3601 8654.3281,601.657 8654.75,602.157 L8656.1719,600.5945 C8655.5,599.8445 8654.5313,599.2039 8653.25,599.2039 C8650.8281,599.2039 8648.6875,601.1726 8648.6875,605.7976 C8648.6875,610.4382 8650.8281,612.2351 8653.2344,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="8667" y="611.636">[]healthz.HealthChecker</text></g><!--MD5=[ac22a968c5037cae09a9f6d36b0730c5]
class encryptionconfig.valueTransformer--><g id="elem_encryptionconfig.valueTransformer"><rect codeLine="441" fill="#F1F1F1" height="32" id="encryptionconfig.valueTransformer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="163" x="8867.5" y="589.532"/><ellipse cx="8882.5" cy="605.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8882.7344,612.2351 C8883.8906,612.2351 8884.9844,611.7507 8885.8125,610.7195 L8884.3906,609.2039 C8884,609.7507 8883.5313,610.0632 8882.9688,610.0632 C8881.7813,610.0632 8880.7656,608.9226 8880.7656,605.6882 C8880.7656,602.532 8881.8281,601.3601 8882.8594,601.3601 C8883.4531,601.3601 8883.8281,601.657 8884.25,602.157 L8885.6719,600.5945 C8885,599.8445 8884.0313,599.2039 8882.75,599.2039 C8880.3281,599.2039 8878.1875,601.1726 8878.1875,605.7976 C8878.1875,610.4382 8880.3281,612.2351 8882.7344,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="8896.5" y="611.636">[]value.Transformer</text></g><!--MD5=[6de13ac5189e5dc846e881fbec190b60]
class healthz.HealthChecker--><g id="elem_healthz.HealthChecker"><rect codeLine="547" fill="#F1F1F1" height="32" id="healthz.HealthChecker" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="130" x="7799" y="313.532"/><ellipse cx="7814" cy="329.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7810.3594,336.032 L7817.1406,336.032 L7817.1406,333.9539 L7814.9844,333.9539 L7814.9844,325.5164 L7817.1406,325.5164 L7817.1406,323.407 L7810.3594,323.407 L7810.3594,325.5164 L7812.4531,325.5164 L7812.4531,333.9539 L7810.3594,333.9539 L7810.3594,336.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="98" x="7828" y="335.636">HealthChecker</text></g><!--MD5=[dbf4dab99ab89a52d89163b6327b5220]
class healthz.cacheSyncWaiter--><g id="elem_healthz.cacheSyncWaiter"><rect codeLine="552" fill="#F1F1F1" height="32" id="healthz.cacheSyncWaiter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="144" x="7620" y="313.532"/><ellipse cx="7635" cy="329.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7631.3594,336.032 L7638.1406,336.032 L7638.1406,333.9539 L7635.9844,333.9539 L7635.9844,325.5164 L7638.1406,325.5164 L7638.1406,323.407 L7631.3594,323.407 L7631.3594,325.5164 L7633.4531,325.5164 L7633.4531,333.9539 L7631.3594,333.9539 L7631.3594,336.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="112" x="7649" y="335.636">cacheSyncWaiter</text></g><!--MD5=[e9819f252400fd607551a5a03cc0098b]
class healthz.healthzCheck--><g id="elem_healthz.healthzCheck"><rect codeLine="556" fill="#F1F1F1" height="32" id="healthz.healthzCheck" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="7523.5" y="405.532"/><ellipse cx="7538.5" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7538.6875,428.2351 C7540.9844,428.2351 7542.4375,426.6101 7542.4375,424.6101 C7542.4375,422.782 7541.6094,421.9382 7540.4688,421.1414 L7539.4531,420.4226 C7538.3281,419.6101 7537.9063,419.3132 7537.9063,418.4539 C7537.9063,417.7664 7538.3906,417.3601 7538.9688,417.3601 C7539.7031,417.3601 7540.1875,417.7507 7540.8906,418.3914 L7542.2031,416.8132 C7541.2344,415.7976 7540.2188,415.2039 7538.9531,415.2039 C7536.8125,415.2039 7535.3594,416.7195 7535.3594,418.6414 C7535.3594,420.4382 7536.2813,421.3445 7537.375,422.0945 L7538.4688,422.8445 C7539.4063,423.4539 7539.8594,424.032 7539.8594,424.9695 C7539.8594,425.6414 7539.3906,426.0632 7538.6875,426.0632 C7537.9844,426.0632 7537.2344,425.5476 7536.5781,424.7195 L7535.0313,426.407 C7536.0625,427.5945 7537.3594,428.2351 7538.6875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="7552.5" y="427.636">healthzCheck</text></g><!--MD5=[1607306255f610df8e0c4b27f3599c44]
class healthz.informerSync--><g id="elem_healthz.informerSync"><rect codeLine="564" fill="#F1F1F1" height="32" id="healthz.informerSync" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="7682" y="405.532"/><ellipse cx="7697" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7697.1875,428.2351 C7699.4844,428.2351 7700.9375,426.6101 7700.9375,424.6101 C7700.9375,422.782 7700.1094,421.9382 7698.9688,421.1414 L7697.9531,420.4226 C7696.8281,419.6101 7696.4063,419.3132 7696.4063,418.4539 C7696.4063,417.7664 7696.8906,417.3601 7697.4688,417.3601 C7698.2031,417.3601 7698.6875,417.7507 7699.3906,418.3914 L7700.7031,416.8132 C7699.7344,415.7976 7698.7188,415.2039 7697.4531,415.2039 C7695.3125,415.2039 7693.8594,416.7195 7693.8594,418.6414 C7693.8594,420.4382 7694.7813,421.3445 7695.875,422.0945 L7696.9688,422.8445 C7697.9063,423.4539 7698.3594,424.032 7698.3594,424.9695 C7698.3594,425.6414 7697.8906,426.0632 7697.1875,426.0632 C7696.4844,426.0632 7695.7344,425.5476 7695.0781,424.7195 L7693.5313,426.407 C7694.5625,427.5945 7695.8594,428.2351 7697.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="7711" y="427.636">informerSync</text></g><!--MD5=[7aeac9a5ce3eb7d186d36d5cfe4901c9]
class healthz.log--><g id="elem_healthz.log"><rect codeLine="571" fill="#F1F1F1" height="32" id="healthz.log" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="52" x="7837" y="405.532"/><ellipse cx="7852" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7852.1875,428.2351 C7854.4844,428.2351 7855.9375,426.6101 7855.9375,424.6101 C7855.9375,422.782 7855.1094,421.9382 7853.9688,421.1414 L7852.9531,420.4226 C7851.8281,419.6101 7851.4063,419.3132 7851.4063,418.4539 C7851.4063,417.7664 7851.8906,417.3601 7852.4688,417.3601 C7853.2031,417.3601 7853.6875,417.7507 7854.3906,418.3914 L7855.7031,416.8132 C7854.7344,415.7976 7853.7188,415.2039 7852.4531,415.2039 C7850.3125,415.2039 7848.8594,416.7195 7848.8594,418.6414 C7848.8594,420.4382 7849.7813,421.3445 7850.875,422.0945 L7851.9688,422.8445 C7852.9063,423.4539 7853.3594,424.032 7853.3594,424.9695 C7853.3594,425.6414 7852.8906,426.0632 7852.1875,426.0632 C7851.4844,426.0632 7850.7344,425.5476 7850.0781,424.7195 L7848.5313,426.407 C7849.5625,427.5945 7850.8594,428.2351 7852.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="20" x="7866" y="427.636">log</text></g><!--MD5=[683cd765903a7861b663de0b36d1fa4f]
class healthz.mux--><g id="elem_healthz.mux"><rect codeLine="579" fill="#F1F1F1" height="32" id="healthz.mux" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="61" x="7523.5" y="313.532"/><ellipse cx="7538.5" cy="329.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7534.8594,336.032 L7541.6406,336.032 L7541.6406,333.9539 L7539.4844,333.9539 L7539.4844,325.5164 L7541.6406,325.5164 L7541.6406,323.407 L7534.8594,323.407 L7534.8594,325.5164 L7536.9531,325.5164 L7536.9531,333.9539 L7534.8594,333.9539 L7534.8594,336.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="29" x="7552.5" y="335.636">mux</text></g><!--MD5=[8b3469235b46faba57a16f3da19b2626]
class healthz.ping--><g id="elem_healthz.ping"><rect codeLine="583" fill="#F1F1F1" height="32" id="healthz.ping" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="62" x="7924" y="405.532"/><ellipse cx="7939" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7939.1875,428.2351 C7941.4844,428.2351 7942.9375,426.6101 7942.9375,424.6101 C7942.9375,422.782 7942.1094,421.9382 7940.9688,421.1414 L7939.9531,420.4226 C7938.8281,419.6101 7938.4063,419.3132 7938.4063,418.4539 C7938.4063,417.7664 7938.8906,417.3601 7939.4688,417.3601 C7940.2031,417.3601 7940.6875,417.7507 7941.3906,418.3914 L7942.7031,416.8132 C7941.7344,415.7976 7940.7188,415.2039 7939.4531,415.2039 C7937.3125,415.2039 7935.8594,416.7195 7935.8594,418.6414 C7935.8594,420.4382 7936.7813,421.3445 7937.875,422.0945 L7938.9688,422.8445 C7939.9063,423.4539 7940.3594,424.032 7940.3594,424.9695 C7940.3594,425.6414 7939.8906,426.0632 7939.1875,426.0632 C7938.4844,426.0632 7937.7344,425.5476 7937.0781,424.7195 L7935.5313,426.407 C7936.5625,427.5945 7937.8594,428.2351 7939.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="7953" y="427.636">ping</text></g><!--MD5=[e1c726e483834ac7f6ff1fa9ffb74448]
class filters.GoawayDecider--><g id="elem_filters.GoawayDecider"><rect codeLine="454" fill="#F1F1F1" height="32" id="filters.GoawayDecider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="11243.5" y="405.532"/><ellipse cx="11258.5" cy="421.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11254.8594,428.032 L11261.6406,428.032 L11261.6406,425.9539 L11259.4844,425.9539 L11259.4844,417.5164 L11261.6406,417.5164 L11261.6406,415.407 L11254.8594,415.407 L11254.8594,417.5164 L11256.9531,417.5164 L11256.9531,425.9539 L11254.8594,425.9539 L11254.8594,428.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="11272.5" y="427.636">GoawayDecider</text></g><!--MD5=[069fb97bfe156200dcc2f22032b9ae12]
class filters.PriorityAndFairnessClassification--><g id="elem_filters.PriorityAndFairnessClassification"><rect codeLine="458" fill="#F1F1F1" height="32" id="filters.PriorityAndFairnessClassification" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="251" x="11413.5" y="405.532"/><ellipse cx="11428.5" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11428.6875,428.2351 C11430.9844,428.2351 11432.4375,426.6101 11432.4375,424.6101 C11432.4375,422.782 11431.6094,421.9382 11430.4688,421.1414 L11429.4531,420.4226 C11428.3281,419.6101 11427.9063,419.3132 11427.9063,418.4539 C11427.9063,417.7664 11428.3906,417.3601 11428.9688,417.3601 C11429.7031,417.3601 11430.1875,417.7507 11430.8906,418.3914 L11432.2031,416.8132 C11431.2344,415.7976 11430.2188,415.2039 11428.9531,415.2039 C11426.8125,415.2039 11425.3594,416.7195 11425.3594,418.6414 C11425.3594,420.4382 11426.2813,421.3445 11427.375,422.0945 L11428.4688,422.8445 C11429.4063,423.4539 11429.8594,424.032 11429.8594,424.9695 C11429.8594,425.6414 11429.3906,426.0632 11428.6875,426.0632 C11427.9844,426.0632 11427.2344,425.5476 11426.5781,424.7195 L11425.0313,426.407 C11426.0625,427.5945 11427.3594,428.2351 11428.6875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="11442.5" y="427.636">PriorityAndFairnessClassification</text></g><!--MD5=[921510256037aeb09729bfd04158fee0]
class filters.RequestWaitGroup--><g id="elem_filters.RequestWaitGroup"><rect codeLine="465" fill="#F1F1F1" height="32" id="filters.RequestWaitGroup" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="157" x="11699.5" y="405.532"/><ellipse cx="11714.5" cy="421.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11710.8594,428.032 L11717.6406,428.032 L11717.6406,425.9539 L11715.4844,425.9539 L11715.4844,417.5164 L11717.6406,417.5164 L11717.6406,415.407 L11710.8594,415.407 L11710.8594,417.5164 L11712.9531,417.5164 L11712.9531,425.9539 L11710.8594,425.9539 L11710.8594,428.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="125" x="11728.5" y="427.636">RequestWaitGroup</text></g><!--MD5=[04b70d72a22e6073a5ad705ba7079c7d]
class filters.baseTimeoutWriter--><g id="elem_filters.baseTimeoutWriter"><rect codeLine="470" fill="#F1F1F1" height="32" id="filters.baseTimeoutWriter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="158" x="11085" y="497.532"/><ellipse cx="11100" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11100.1875,520.2351 C11102.4844,520.2351 11103.9375,518.6101 11103.9375,516.6101 C11103.9375,514.782 11103.1094,513.9382 11101.9688,513.1414 L11100.9531,512.4226 C11099.8281,511.6101 11099.4063,511.3132 11099.4063,510.4539 C11099.4063,509.7664 11099.8906,509.3601 11100.4688,509.3601 C11101.2031,509.3601 11101.6875,509.7507 11102.3906,510.3914 L11103.7031,508.8132 C11102.7344,507.7976 11101.7188,507.2039 11100.4531,507.2039 C11098.3125,507.2039 11096.8594,508.7195 11096.8594,510.6414 C11096.8594,512.4382 11097.7813,513.3445 11098.875,514.0945 L11099.9688,514.8445 C11100.9063,515.4539 11101.3594,516.032 11101.3594,516.9695 C11101.3594,517.6414 11100.8906,518.0632 11100.1875,518.0632 C11099.4844,518.0632 11098.7344,517.5476 11098.0781,516.7195 L11096.5313,518.407 C11097.5625,519.5945 11098.8594,520.2351 11100.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="11114" y="519.636">baseTimeoutWriter</text></g><!--MD5=[5662f06fedf5deea42fc51f87960fbae]
class filters.isRequestExemptFunc--><g id="elem_filters.isRequestExemptFunc"><rect codeLine="489" fill="#F1F1F1" height="32" id="filters.isRequestExemptFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="181" x="11891.5" y="405.532"/><ellipse cx="11906.5" cy="421.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11905.2344,428.532 L11907.7813,428.532 L11907.7813,418.0164 L11910.4063,418.0164 L11910.4063,415.907 L11902.5938,415.907 L11902.5938,418.0164 L11905.2344,418.0164 L11905.2344,428.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="11920.5" y="427.636">isRequestExemptFunc</text></g><!--MD5=[03263c87934fad08b32ca9cdd26617c5]
class filters.shouldRespondWithRetryAfterFunc--><g id="elem_filters.shouldRespondWithRetryAfterFunc"><rect codeLine="491" fill="#F1F1F1" height="32" id="filters.shouldRespondWithRetryAfterFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="266" x="12108" y="405.532"/><ellipse cx="12123" cy="421.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12121.7344,428.532 L12124.2813,428.532 L12124.2813,418.0164 L12126.9063,418.0164 L12126.9063,415.907 L12119.0938,415.907 L12119.0938,418.0164 L12121.7344,418.0164 L12121.7344,428.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="12137" y="427.636">shouldRespondWithRetryAfterFunc</text></g><!--MD5=[11a98be24e42e0dbb53a796fb390c287]
class filters.timeoutFunc--><g id="elem_filters.timeoutFunc"><rect codeLine="493" fill="#F1F1F1" height="32" id="filters.timeoutFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="117" x="11531.5" y="497.532"/><ellipse cx="11546.5" cy="513.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11545.2344,520.532 L11547.7813,520.532 L11547.7813,510.0164 L11550.4063,510.0164 L11550.4063,507.907 L11542.5938,507.907 L11542.5938,510.0164 L11545.2344,510.0164 L11545.2344,520.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="11560.5" y="519.636">timeoutFunc</text></g><!--MD5=[80c1f7d22fc699ca59ebf15eb9274416]
class filters.goaway--><g id="elem_filters.goaway"><rect codeLine="495" fill="#F1F1F1" height="32" id="filters.goaway" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="82" x="11684" y="497.532"/><ellipse cx="11699" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11699.1875,520.2351 C11701.4844,520.2351 11702.9375,518.6101 11702.9375,516.6101 C11702.9375,514.782 11702.1094,513.9382 11700.9688,513.1414 L11699.9531,512.4226 C11698.8281,511.6101 11698.4063,511.3132 11698.4063,510.4539 C11698.4063,509.7664 11698.8906,509.3601 11699.4688,509.3601 C11700.2031,509.3601 11700.6875,509.7507 11701.3906,510.3914 L11702.7031,508.8132 C11701.7344,507.7976 11700.7188,507.2039 11699.4531,507.2039 C11697.3125,507.2039 11695.8594,508.7195 11695.8594,510.6414 C11695.8594,512.4382 11696.7813,513.3445 11697.875,514.0945 L11698.9688,514.8445 C11699.9063,515.4539 11700.3594,516.032 11700.3594,516.9695 C11700.3594,517.6414 11699.8906,518.0632 11699.1875,518.0632 C11698.4844,518.0632 11697.7344,517.5476 11697.0781,516.7195 L11695.5313,518.407 C11696.5625,519.5945 11697.8594,520.2351 11699.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="11713" y="519.636">goaway</text></g><!--MD5=[bc7c30a2926f37cc53fd77c399f130e6]
class filters.probabilisticGoawayDecider--><g id="elem_filters.probabilisticGoawayDecider"><rect codeLine="502" fill="#F1F1F1" height="32" id="filters.probabilisticGoawayDecider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="218" x="11278" y="497.532"/><ellipse cx="11293" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11293.1875,520.2351 C11295.4844,520.2351 11296.9375,518.6101 11296.9375,516.6101 C11296.9375,514.782 11296.1094,513.9382 11294.9688,513.1414 L11293.9531,512.4226 C11292.8281,511.6101 11292.4063,511.3132 11292.4063,510.4539 C11292.4063,509.7664 11292.8906,509.3601 11293.4688,509.3601 C11294.2031,509.3601 11294.6875,509.7507 11295.3906,510.3914 L11296.7031,508.8132 C11295.7344,507.7976 11294.7188,507.2039 11293.4531,507.2039 C11291.3125,507.2039 11289.8594,508.7195 11289.8594,510.6414 C11289.8594,512.4382 11290.7813,513.3445 11291.875,514.0945 L11292.9688,514.8445 C11293.9063,515.4539 11294.3594,516.032 11294.3594,516.9695 C11294.3594,517.6414 11293.8906,518.0632 11293.1875,518.0632 C11292.4844,518.0632 11291.7344,517.5476 11291.0781,516.7195 L11289.5313,518.407 C11290.5625,519.5945 11291.8594,520.2351 11293.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="11307" y="519.636">probabilisticGoawayDecider</text></g><!--MD5=[45a7d63c0c0459e587c7852c18328fe3]
class filters.requestWatermark--><g id="elem_filters.requestWatermark"><rect codeLine="509" fill="#F1F1F1" height="32" id="filters.requestWatermark" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="155" x="11801.5" y="497.532"/><ellipse cx="11816.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11816.6875,520.2351 C11818.9844,520.2351 11820.4375,518.6101 11820.4375,516.6101 C11820.4375,514.782 11819.6094,513.9382 11818.4688,513.1414 L11817.4531,512.4226 C11816.3281,511.6101 11815.9063,511.3132 11815.9063,510.4539 C11815.9063,509.7664 11816.3906,509.3601 11816.9688,509.3601 C11817.7031,509.3601 11818.1875,509.7507 11818.8906,510.3914 L11820.2031,508.8132 C11819.2344,507.7976 11818.2188,507.2039 11816.9531,507.2039 C11814.8125,507.2039 11813.3594,508.7195 11813.3594,510.6414 C11813.3594,512.4382 11814.2813,513.3445 11815.375,514.0945 L11816.4688,514.8445 C11817.4063,515.4539 11817.8594,516.032 11817.8594,516.9695 C11817.8594,517.6414 11817.3906,518.0632 11816.6875,518.0632 C11815.9844,518.0632 11815.2344,517.5476 11814.5781,516.7195 L11813.0313,518.407 C11814.0625,519.5945 11815.3594,520.2351 11816.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="11830.5" y="519.636">requestWatermark</text></g><!--MD5=[2753ddbe9e5af6e6ed15e47e3c0e64ce]
class filters.retryAfterParams--><g id="elem_filters.retryAfterParams"><rect codeLine="519" fill="#F1F1F1" height="32" id="filters.retryAfterParams" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="144" x="11992" y="497.532"/><ellipse cx="12007" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M12007.1875,520.2351 C12009.4844,520.2351 12010.9375,518.6101 12010.9375,516.6101 C12010.9375,514.782 12010.1094,513.9382 12008.9688,513.1414 L12007.9531,512.4226 C12006.8281,511.6101 12006.4063,511.3132 12006.4063,510.4539 C12006.4063,509.7664 12006.8906,509.3601 12007.4688,509.3601 C12008.2031,509.3601 12008.6875,509.7507 12009.3906,510.3914 L12010.7031,508.8132 C12009.7344,507.7976 12008.7188,507.2039 12007.4531,507.2039 C12005.3125,507.2039 12003.8594,508.7195 12003.8594,510.6414 C12003.8594,512.4382 12004.7813,513.3445 12005.875,514.0945 L12006.9688,514.8445 C12007.9063,515.4539 12008.3594,516.032 12008.3594,516.9695 C12008.3594,517.6414 12007.8906,518.0632 12007.1875,518.0632 C12006.4844,518.0632 12005.7344,517.5476 12005.0781,516.7195 L12003.5313,518.407 C12004.5625,519.5945 12005.8594,520.2351 12007.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="12021" y="519.636">retryAfterParams</text></g><!--MD5=[1bdecef124c4b55a3b68d84938ff51b1]
class filters.timeoutHandler--><g id="elem_filters.timeoutHandler"><rect codeLine="524" fill="#F1F1F1" height="32" id="filters.timeoutHandler" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="137" x="11480.5" y="589.532"/><ellipse cx="11495.5" cy="605.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11495.6875,612.2351 C11497.9844,612.2351 11499.4375,610.6101 11499.4375,608.6101 C11499.4375,606.782 11498.6094,605.9382 11497.4688,605.1414 L11496.4531,604.4226 C11495.3281,603.6101 11494.9063,603.3132 11494.9063,602.4539 C11494.9063,601.7664 11495.3906,601.3601 11495.9688,601.3601 C11496.7031,601.3601 11497.1875,601.7507 11497.8906,602.3914 L11499.2031,600.8132 C11498.2344,599.7976 11497.2188,599.2039 11495.9531,599.2039 C11493.8125,599.2039 11492.3594,600.7195 11492.3594,602.6414 C11492.3594,604.4382 11493.2813,605.3445 11494.375,606.0945 L11495.4688,606.8445 C11496.4063,607.4539 11496.8594,608.032 11496.8594,608.9695 C11496.8594,609.6414 11496.3906,610.0632 11495.6875,610.0632 C11494.9844,610.0632 11494.2344,609.5476 11493.5781,608.7195 L11492.0313,610.407 C11493.0625,611.5945 11494.3594,612.2351 11495.6875,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="11509.5" y="611.636">timeoutHandler</text></g><!--MD5=[1a5662ede5924d527a0c667c229baa6f]
class filters.timeoutWriter--><g id="elem_filters.timeoutWriter"><rect codeLine="531" fill="#F1F1F1" height="32" id="filters.timeoutWriter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="11085.5" y="405.532"/><ellipse cx="11100.5" cy="421.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11096.8594,428.032 L11103.6406,428.032 L11103.6406,425.9539 L11101.4844,425.9539 L11101.4844,417.5164 L11103.6406,417.5164 L11103.6406,415.407 L11096.8594,415.407 L11096.8594,417.5164 L11098.9531,417.5164 L11098.9531,425.9539 L11096.8594,425.9539 L11096.8594,428.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="91" x="11114.5" y="427.636">timeoutWriter</text></g><!--MD5=[afe05df71a835f9d8e7ca040259bea6f]
class filters.fontcolorbluefuncfonthttpRequestbool--><g id="elem_filters.fontcolorbluefuncfonthttpRequestbool"><rect codeLine="535" fill="#F1F1F1" height="32" id="filters.fontcolorbluefuncfonthttpRequestbool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="198" x="11653" y="589.532"/><ellipse cx="11668" cy="605.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11668.2344,612.2351 C11669.3906,612.2351 11670.4844,611.7507 11671.3125,610.7195 L11669.8906,609.2039 C11669.5,609.7507 11669.0313,610.0632 11668.4688,610.0632 C11667.2813,610.0632 11666.2656,608.9226 11666.2656,605.6882 C11666.2656,602.532 11667.3281,601.3601 11668.3594,601.3601 C11668.9531,601.3601 11669.3281,601.657 11669.75,602.157 L11671.1719,600.5945 C11670.5,599.8445 11669.5313,599.2039 11668.25,599.2039 C11665.8281,599.2039 11663.6875,601.1726 11663.6875,605.7976 C11663.6875,610.4382 11665.8281,612.2351 11668.2344,612.2351 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="11682" y="611.636">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="11712" y="611.636">(*http.Request) bool</text></g><!--MD5=[4c72e45190a4938ac88f7a89b72cfbb3]
class filters.fontcolorbluefuncfonthttpRequesthttpRequestboolfontcolorbluefuncfonterrorsStatusError--><g id="elem_filters.fontcolorbluefuncfonthttpRequesthttpRequestboolfontcolorbluefuncfonterrorsStatusError"><rect codeLine="538" fill="#F1F1F1" height="32" id="filters.fontcolorbluefuncfonthttpRequesthttpRequestboolfontcolorbluefuncfonterrorsStatusError" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="488" x="11886" y="589.532"/><ellipse cx="11901" cy="605.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11901.2344,612.2351 C11902.3906,612.2351 11903.4844,611.7507 11904.3125,610.7195 L11902.8906,609.2039 C11902.5,609.7507 11902.0313,610.0632 11901.4688,610.0632 C11900.2813,610.0632 11899.2656,608.9226 11899.2656,605.6882 C11899.2656,602.532 11900.3281,601.3601 11901.3594,601.3601 C11901.9531,601.3601 11902.3281,601.657 11902.75,602.157 L11904.1719,600.5945 C11903.5,599.8445 11902.5313,599.2039 11901.25,599.2039 C11898.8281,599.2039 11896.6875,601.1726 11896.6875,605.7976 C11896.6875,610.4382 11898.8281,612.2351 11901.2344,612.2351 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="11915" y="611.636">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="11945" y="611.636">(*http.Request) (*http.Request, bool,</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="12194" y="611.636">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="12224" y="611.636">() , *errors.StatusError)</text></g><!--MD5=[1ba17473dfe60c3cddfb0181a52413c3]
class httplog.ShouldLogRequestPred--><g id="elem_httplog.ShouldLogRequestPred"><rect codeLine="596" fill="#F1F1F1" height="32" id="httplog.ShouldLogRequestPred" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="189" x="2359.5" y="221.532"/><ellipse cx="2374.5" cy="237.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2373.2344,244.532 L2375.7813,244.532 L2375.7813,234.0164 L2378.4063,234.0164 L2378.4063,231.907 L2370.5938,231.907 L2370.5938,234.0164 L2373.2344,234.0164 L2373.2344,244.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="2388.5" y="243.636">ShouldLogRequestPred</text></g><!--MD5=[6d2646cb123206326c32885078a9beab]
class httplog.StacktracePred--><g id="elem_httplog.StacktracePred"><rect codeLine="598" fill="#F1F1F1" height="32" id="httplog.StacktracePred" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="132" x="2584" y="221.532"/><ellipse cx="2599" cy="237.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2597.7344,244.532 L2600.2813,244.532 L2600.2813,234.0164 L2602.9063,234.0164 L2602.9063,231.907 L2595.0938,231.907 L2595.0938,234.0164 L2597.7344,234.0164 L2597.7344,244.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="2613" y="243.636">StacktracePred</text></g><!--MD5=[4fee89c33b45fa2deffbf45a44ca2235]
class httplog.respLoggerContextKeyType--><g id="elem_httplog.respLoggerContextKeyType"><rect codeLine="600" fill="#F1F1F1" height="32" id="httplog.respLoggerContextKeyType" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="213" x="2502.5" y="313.532"/><ellipse cx="2517.5" cy="329.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2516.2344,336.532 L2518.7813,336.532 L2518.7813,326.0164 L2521.4063,326.0164 L2521.4063,323.907 L2513.5938,323.907 L2513.5938,326.0164 L2516.2344,326.0164 L2516.2344,336.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="2531.5" y="335.636">respLoggerContextKeyType</text></g><!--MD5=[39fd6c83eaa73e623c61d96df06761e6]
class httplog.logger--><g id="elem_httplog.logger"><rect codeLine="602" fill="#F1F1F1" height="32" id="httplog.logger" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="73" x="2229.5" y="221.532"/><ellipse cx="2244.5" cy="237.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2240.8594,244.032 L2247.6406,244.032 L2247.6406,241.9539 L2245.4844,241.9539 L2245.4844,233.5164 L2247.6406,233.5164 L2247.6406,231.407 L2240.8594,231.407 L2240.8594,233.5164 L2242.9531,233.5164 L2242.9531,241.9539 L2240.8594,241.9539 L2240.8594,244.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="41" x="2258.5" y="243.636">logger</text></g><!--MD5=[e860dd992cdc49ec4c67b34184afb310]
class httplog.passthroughLogger--><g id="elem_httplog.passthroughLogger"><rect codeLine="606" fill="#F1F1F1" height="32" id="httplog.passthroughLogger" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="161" x="2164.5" y="313.532"/><ellipse cx="2179.5" cy="329.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2179.6875,336.2351 C2181.9844,336.2351 2183.4375,334.6101 2183.4375,332.6101 C2183.4375,330.782 2182.6094,329.9382 2181.4688,329.1414 L2180.4531,328.4226 C2179.3281,327.6101 2178.9063,327.3132 2178.9063,326.4539 C2178.9063,325.7664 2179.3906,325.3601 2179.9688,325.3601 C2180.7031,325.3601 2181.1875,325.7507 2181.8906,326.3914 L2183.2031,324.8132 C2182.2344,323.7976 2181.2188,323.2039 2179.9531,323.2039 C2177.8125,323.2039 2176.3594,324.7195 2176.3594,326.6414 C2176.3594,328.4382 2177.2813,329.3445 2178.375,330.0945 L2179.4688,330.8445 C2180.4063,331.4539 2180.8594,332.032 2180.8594,332.9695 C2180.8594,333.6414 2180.3906,334.0632 2179.6875,334.0632 C2178.9844,334.0632 2178.2344,333.5476 2177.5781,332.7195 L2176.0313,334.407 C2177.0625,335.5945 2178.3594,336.2351 2179.6875,336.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="2193.5" y="335.636">passthroughLogger</text></g><!--MD5=[29642a1ea34fb8bbe8fd3fce5628b899]
class httplog.respLogger--><g id="elem_httplog.respLogger"><rect codeLine="610" fill="#F1F1F1" height="32" id="httplog.respLogger" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="106" x="2361" y="313.532"/><ellipse cx="2376" cy="329.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2376.1875,336.2351 C2378.4844,336.2351 2379.9375,334.6101 2379.9375,332.6101 C2379.9375,330.782 2379.1094,329.9382 2377.9688,329.1414 L2376.9531,328.4226 C2375.8281,327.6101 2375.4063,327.3132 2375.4063,326.4539 C2375.4063,325.7664 2375.8906,325.3601 2376.4688,325.3601 C2377.2031,325.3601 2377.6875,325.7507 2378.3906,326.3914 L2379.7031,324.8132 C2378.7344,323.7976 2377.7188,323.2039 2376.4531,323.2039 C2374.3125,323.2039 2372.8594,324.7195 2372.8594,326.6414 C2372.8594,328.4382 2373.7813,329.3445 2374.875,330.0945 L2375.9688,330.8445 C2376.9063,331.4539 2377.3594,332.032 2377.3594,332.9695 C2377.3594,333.6414 2376.8906,334.0632 2376.1875,334.0632 C2375.4844,334.0632 2374.7344,333.5476 2374.0781,332.7195 L2372.5313,334.407 C2373.5625,335.5945 2374.8594,336.2351 2376.1875,336.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="2390" y="335.636">respLogger</text></g><!--MD5=[4483ce009b27109a931440c667ce4c67]
class metrics.DialMetrics--><g id="elem_metrics.DialMetrics"><rect codeLine="644" fill="#F1F1F1" height="32" id="metrics.DialMetrics" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="105" x="10593.5" y="37.532"/><ellipse cx="10608.5" cy="53.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M10608.6875,60.2351 C10610.9844,60.2351 10612.4375,58.6101 10612.4375,56.6101 C10612.4375,54.782 10611.6094,53.9382 10610.4688,53.1414 L10609.4531,52.4226 C10608.3281,51.6101 10607.9063,51.3132 10607.9063,50.4539 C10607.9063,49.7664 10608.3906,49.3601 10608.9688,49.3601 C10609.7031,49.3601 10610.1875,49.7507 10610.8906,50.3914 L10612.2031,48.8132 C10611.2344,47.7976 10610.2188,47.2039 10608.9531,47.2039 C10606.8125,47.2039 10605.3594,48.7195 10605.3594,50.6414 C10605.3594,52.4382 10606.2813,53.3445 10607.375,54.0945 L10608.4688,54.8445 C10609.4063,55.4539 10609.8594,56.032 10609.8594,56.9695 C10609.8594,57.6414 10609.3906,58.0632 10608.6875,58.0632 C10607.9844,58.0632 10607.2344,57.5476 10606.5781,56.7195 L10605.0313,58.407 C10606.0625,59.5945 10607.3594,60.2351 10608.6875,60.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="10622.5" y="59.636">DialMetrics</text></g><!--MD5=[41b84aac3dfc84c22d5d8c7a3f4d8f7a]
class mux.PathRecorderMux--><g id="elem_mux.PathRecorderMux"><rect codeLine="662" fill="#F1F1F1" height="32" id="mux.PathRecorderMux" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="149" x="4510.5" y="405.532"/><ellipse cx="4525.5" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4525.6875,428.2351 C4527.9844,428.2351 4529.4375,426.6101 4529.4375,424.6101 C4529.4375,422.782 4528.6094,421.9382 4527.4688,421.1414 L4526.4531,420.4226 C4525.3281,419.6101 4524.9063,419.3132 4524.9063,418.4539 C4524.9063,417.7664 4525.3906,417.3601 4525.9688,417.3601 C4526.7031,417.3601 4527.1875,417.7507 4527.8906,418.3914 L4529.2031,416.8132 C4528.2344,415.7976 4527.2188,415.2039 4525.9531,415.2039 C4523.8125,415.2039 4522.3594,416.7195 4522.3594,418.6414 C4522.3594,420.4382 4523.2813,421.3445 4524.375,422.0945 L4525.4688,422.8445 C4526.4063,423.4539 4526.8594,424.032 4526.8594,424.9695 C4526.8594,425.6414 4526.3906,426.0632 4525.6875,426.0632 C4524.9844,426.0632 4524.2344,425.5476 4523.5781,424.7195 L4522.0313,426.407 C4523.0625,427.5945 4524.3594,428.2351 4525.6875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="4539.5" y="427.636">PathRecorderMux</text></g><!--MD5=[0d628206132e7f94b70777bbd65b5506]
class mux.byPrefixPriority--><g id="elem_mux.byPrefixPriority"><rect codeLine="693" fill="#F1F1F1" height="32" id="mux.byPrefixPriority" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="4342.5" y="405.532"/><ellipse cx="4357.5" cy="421.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4356.2344,428.532 L4358.7813,428.532 L4358.7813,418.0164 L4361.4063,418.0164 L4361.4063,415.907 L4353.5938,415.907 L4353.5938,418.0164 L4356.2344,418.0164 L4356.2344,428.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="4371.5" y="427.636">byPrefixPriority</text></g><!--MD5=[1c2d1ac635964ac7deefab7786af6563]
class mux.pathHandler--><g id="elem_mux.pathHandler"><rect codeLine="695" fill="#F1F1F1" height="32" id="mux.pathHandler" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="4191" y="405.532"/><ellipse cx="4206" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4206.1875,428.2351 C4208.4844,428.2351 4209.9375,426.6101 4209.9375,424.6101 C4209.9375,422.782 4209.1094,421.9382 4207.9688,421.1414 L4206.9531,420.4226 C4205.8281,419.6101 4205.4063,419.3132 4205.4063,418.4539 C4205.4063,417.7664 4205.8906,417.3601 4206.4688,417.3601 C4207.2031,417.3601 4207.6875,417.7507 4208.3906,418.3914 L4209.7031,416.8132 C4208.7344,415.7976 4207.7188,415.2039 4206.4531,415.2039 C4204.3125,415.2039 4202.8594,416.7195 4202.8594,418.6414 C4202.8594,420.4382 4203.7813,421.3445 4204.875,422.0945 L4205.9688,422.8445 C4206.9063,423.4539 4207.3594,424.032 4207.3594,424.9695 C4207.3594,425.6414 4206.8906,426.0632 4206.1875,426.0632 C4205.4844,426.0632 4204.7344,425.5476 4204.0781,424.7195 L4202.5313,426.407 C4203.5625,427.5945 4204.8594,428.2351 4206.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="4220" y="427.636">pathHandler</text></g><!--MD5=[1da217c3fa64c4c47041e9c5811f0f42]
class mux.prefixHandler--><g id="elem_mux.prefixHandler"><rect codeLine="704" fill="#F1F1F1" height="32" id="mux.prefixHandler" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="4347.5" y="497.532"/><ellipse cx="4362.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4362.6875,520.2351 C4364.9844,520.2351 4366.4375,518.6101 4366.4375,516.6101 C4366.4375,514.782 4365.6094,513.9382 4364.4688,513.1414 L4363.4531,512.4226 C4362.3281,511.6101 4361.9063,511.3132 4361.9063,510.4539 C4361.9063,509.7664 4362.3906,509.3601 4362.9688,509.3601 C4363.7031,509.3601 4364.1875,509.7507 4364.8906,510.3914 L4366.2031,508.8132 C4365.2344,507.7976 4364.2188,507.2039 4362.9531,507.2039 C4360.8125,507.2039 4359.3594,508.7195 4359.3594,510.6414 C4359.3594,512.4382 4360.2813,513.3445 4361.375,514.0945 L4362.4688,514.8445 C4363.4063,515.4539 4363.8594,516.032 4363.8594,516.9695 C4363.8594,517.6414 4363.3906,518.0632 4362.6875,518.0632 C4361.9844,518.0632 4361.2344,517.5476 4360.5781,516.7195 L4359.0313,518.407 C4360.0625,519.5945 4361.3594,520.2351 4362.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="4376.5" y="519.636">prefixHandler</text></g><!--MD5=[c0aeb46b585a38a4f97b1a1d1a16d1d5]
class routes.ListedPathProvider--><g id="elem_routes.ListedPathProvider"><rect codeLine="1133" fill="#F1F1F1" height="32" id="routes.ListedPathProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="159" x="3995.5" y="313.532"/><ellipse cx="4010.5" cy="329.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4006.8594,336.032 L4013.6406,336.032 L4013.6406,333.9539 L4011.4844,333.9539 L4011.4844,325.5164 L4013.6406,325.5164 L4013.6406,323.407 L4006.8594,323.407 L4006.8594,325.5164 L4008.9531,325.5164 L4008.9531,333.9539 L4006.8594,333.9539 L4006.8594,336.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="127" x="4024.5" y="335.636">ListedPathProvider</text></g><!--MD5=[0f331104ee80ab851a8409e6c9da3a5e]
class routes.DebugFlags--><g id="elem_routes.DebugFlags"><rect codeLine="1102" fill="#F1F1F1" height="32" id="routes.DebugFlags" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="111" x="3524.5" y="313.532"/><ellipse cx="3539.5" cy="329.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3539.6875,336.2351 C3541.9844,336.2351 3543.4375,334.6101 3543.4375,332.6101 C3543.4375,330.782 3542.6094,329.9382 3541.4688,329.1414 L3540.4531,328.4226 C3539.3281,327.6101 3538.9063,327.3132 3538.9063,326.4539 C3538.9063,325.7664 3539.3906,325.3601 3539.9688,325.3601 C3540.7031,325.3601 3541.1875,325.7507 3541.8906,326.3914 L3543.2031,324.8132 C3542.2344,323.7976 3541.2188,323.2039 3539.9531,323.2039 C3537.8125,323.2039 3536.3594,324.7195 3536.3594,326.6414 C3536.3594,328.4382 3537.2813,329.3445 3538.375,330.0945 L3539.4688,330.8445 C3540.4063,331.4539 3540.8594,332.032 3540.8594,332.9695 C3540.8594,333.6414 3540.3906,334.0632 3539.6875,334.0632 C3538.9844,334.0632 3538.2344,333.5476 3537.5781,332.7195 L3536.0313,334.407 C3537.0625,335.5945 3538.3594,336.2351 3539.6875,336.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="3553.5" y="335.636">DebugFlags</text></g><!--MD5=[80fe50a2cd76f697d6b0db25df934206]
class routes.DebugSocket--><g id="elem_routes.DebugSocket"><rect codeLine="1109" fill="#F1F1F1" height="32" id="routes.DebugSocket" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="3671" y="313.532"/><ellipse cx="3686" cy="329.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3686.1875,336.2351 C3688.4844,336.2351 3689.9375,334.6101 3689.9375,332.6101 C3689.9375,330.782 3689.1094,329.9382 3687.9688,329.1414 L3686.9531,328.4226 C3685.8281,327.6101 3685.4063,327.3132 3685.4063,326.4539 C3685.4063,325.7664 3685.8906,325.3601 3686.4688,325.3601 C3687.2031,325.3601 3687.6875,325.7507 3688.3906,326.3914 L3689.7031,324.8132 C3688.7344,323.7976 3687.7188,323.2039 3686.4531,323.2039 C3684.3125,323.2039 3682.8594,324.7195 3682.8594,326.6414 C3682.8594,328.4382 3683.7813,329.3445 3684.875,330.0945 L3685.9688,330.8445 C3686.9063,331.4539 3687.3594,332.032 3687.3594,332.9695 C3687.3594,333.6414 3686.8906,334.0632 3686.1875,334.0632 C3685.4844,334.0632 3684.7344,333.5476 3684.0781,332.7195 L3682.5313,334.407 C3683.5625,335.5945 3684.8594,336.2351 3686.1875,336.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="3700" y="335.636">DebugSocket</text></g><!--MD5=[27bffee76051460caa721afcb142c038]
class routes.DefaultMetrics--><g id="elem_routes.DefaultMetrics"><rect codeLine="1118" fill="#F1F1F1" height="32" id="routes.DefaultMetrics" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="3826" y="313.532"/><ellipse cx="3841" cy="329.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3841.1875,336.2351 C3843.4844,336.2351 3844.9375,334.6101 3844.9375,332.6101 C3844.9375,330.782 3844.1094,329.9382 3842.9688,329.1414 L3841.9531,328.4226 C3840.8281,327.6101 3840.4063,327.3132 3840.4063,326.4539 C3840.4063,325.7664 3840.8906,325.3601 3841.4688,325.3601 C3842.2031,325.3601 3842.6875,325.7507 3843.3906,326.3914 L3844.7031,324.8132 C3843.7344,323.7976 3842.7188,323.2039 3841.4531,323.2039 C3839.3125,323.2039 3837.8594,324.7195 3837.8594,326.6414 C3837.8594,328.4382 3838.7813,329.3445 3839.875,330.0945 L3840.9688,330.8445 C3841.9063,331.4539 3842.3594,332.032 3842.3594,332.9695 C3842.3594,333.6414 3841.8906,334.0632 3841.1875,334.0632 C3840.4844,334.0632 3839.7344,333.5476 3839.0781,332.7195 L3837.5313,334.407 C3838.5625,335.5945 3839.8594,336.2351 3841.1875,336.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="3855" y="335.636">DefaultMetrics</text></g><!--MD5=[d04110b439ac92767088231975c33095]
class routes.Index--><g id="elem_routes.Index"><rect codeLine="1122" fill="#F1F1F1" height="32" id="routes.Index" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="69" x="3420.5" y="313.532"/><ellipse cx="3435.5" cy="329.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3435.6875,336.2351 C3437.9844,336.2351 3439.4375,334.6101 3439.4375,332.6101 C3439.4375,330.782 3438.6094,329.9382 3437.4688,329.1414 L3436.4531,328.4226 C3435.3281,327.6101 3434.9063,327.3132 3434.9063,326.4539 C3434.9063,325.7664 3435.3906,325.3601 3435.9688,325.3601 C3436.7031,325.3601 3437.1875,325.7507 3437.8906,326.3914 L3439.2031,324.8132 C3438.2344,323.7976 3437.2188,323.2039 3435.9531,323.2039 C3433.8125,323.2039 3432.3594,324.7195 3432.3594,326.6414 C3432.3594,328.4382 3433.2813,329.3445 3434.375,330.0945 L3435.4688,330.8445 C3436.4063,331.4539 3436.8594,332.032 3436.8594,332.9695 C3436.8594,333.6414 3436.3906,334.0632 3435.6875,334.0632 C3434.9844,334.0632 3434.2344,333.5476 3433.5781,332.7195 L3432.0313,334.407 C3433.0625,335.5945 3434.3594,336.2351 3435.6875,336.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="37" x="3449.5" y="335.636">Index</text></g><!--MD5=[dceb47d268bc02c0d42e51b714740e56]
class routes.IndexLister--><g id="elem_routes.IndexLister"><rect codeLine="1126" fill="#F1F1F1" height="32" id="routes.IndexLister" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="106" x="3420" y="405.532"/><ellipse cx="3435" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3435.1875,428.2351 C3437.4844,428.2351 3438.9375,426.6101 3438.9375,424.6101 C3438.9375,422.782 3438.1094,421.9382 3436.9688,421.1414 L3435.9531,420.4226 C3434.8281,419.6101 3434.4063,419.3132 3434.4063,418.4539 C3434.4063,417.7664 3434.8906,417.3601 3435.4688,417.3601 C3436.2031,417.3601 3436.6875,417.7507 3437.3906,418.3914 L3438.7031,416.8132 C3437.7344,415.7976 3436.7188,415.2039 3435.4531,415.2039 C3433.3125,415.2039 3431.8594,416.7195 3431.8594,418.6414 C3431.8594,420.4382 3432.7813,421.3445 3433.875,422.0945 L3434.9688,422.8445 C3435.9063,423.4539 3436.3594,424.032 3436.3594,424.9695 C3436.3594,425.6414 3435.8906,426.0632 3435.1875,426.0632 C3434.4844,426.0632 3433.7344,425.5476 3433.0781,424.7195 L3431.5313,426.407 C3432.5625,427.5945 3433.8594,428.2351 3435.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="3449" y="427.636">IndexLister</text></g><!--MD5=[1534ed82acd4a3b926585eb071105a17]
class routes.ListedPathProviders--><g id="elem_routes.ListedPathProviders"><rect codeLine="1168" fill="#F1F1F1" height="32" id="routes.ListedPathProviders" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="166" x="3990" y="405.532"/><ellipse cx="4005" cy="421.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4003.7344,428.532 L4006.2813,428.532 L4006.2813,418.0164 L4008.9063,418.0164 L4008.9063,415.907 L4001.0938,415.907 L4001.0938,418.0164 L4003.7344,418.0164 L4003.7344,428.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="4019" y="427.636">ListedPathProviders</text></g><!--MD5=[5d5068de86a78c4122c7ef2909e252b0]
class routes.MetricsWithReset--><g id="elem_routes.MetricsWithReset"><rect codeLine="1141" fill="#F1F1F1" height="32" id="routes.MetricsWithReset" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="3561" y="405.532"/><ellipse cx="3576" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3576.1875,428.2351 C3578.4844,428.2351 3579.9375,426.6101 3579.9375,424.6101 C3579.9375,422.782 3579.1094,421.9382 3577.9688,421.1414 L3576.9531,420.4226 C3575.8281,419.6101 3575.4063,419.3132 3575.4063,418.4539 C3575.4063,417.7664 3575.8906,417.3601 3576.4688,417.3601 C3577.2031,417.3601 3577.6875,417.7507 3578.3906,418.3914 L3579.7031,416.8132 C3578.7344,415.7976 3577.7188,415.2039 3576.4531,415.2039 C3574.3125,415.2039 3572.8594,416.7195 3572.8594,418.6414 C3572.8594,420.4382 3573.7813,421.3445 3574.875,422.0945 L3575.9688,422.8445 C3576.9063,423.4539 3577.3594,424.032 3577.3594,424.9695 C3577.3594,425.6414 3576.8906,426.0632 3576.1875,426.0632 C3575.4844,426.0632 3574.7344,425.5476 3574.0781,424.7195 L3572.5313,426.407 C3573.5625,427.5945 3574.8594,428.2351 3576.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="3590" y="427.636">MetricsWithReset</text></g><!--MD5=[0188d2078458d1df1bcc3d41459fedef]
class routes.OpenAPI--><g id="elem_routes.OpenAPI"><rect codeLine="1145" fill="#F1F1F1" height="32" id="routes.OpenAPI" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="90" x="3742" y="405.532"/><ellipse cx="3757" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3757.1875,428.2351 C3759.4844,428.2351 3760.9375,426.6101 3760.9375,424.6101 C3760.9375,422.782 3760.1094,421.9382 3758.9688,421.1414 L3757.9531,420.4226 C3756.8281,419.6101 3756.4063,419.3132 3756.4063,418.4539 C3756.4063,417.7664 3756.8906,417.3601 3757.4688,417.3601 C3758.2031,417.3601 3758.6875,417.7507 3759.3906,418.3914 L3760.7031,416.8132 C3759.7344,415.7976 3758.7188,415.2039 3757.4531,415.2039 C3755.3125,415.2039 3753.8594,416.7195 3753.8594,418.6414 C3753.8594,420.4382 3754.7813,421.3445 3755.875,422.0945 L3756.9688,422.8445 C3757.9063,423.4539 3758.3594,424.032 3758.3594,424.9695 C3758.3594,425.6414 3757.8906,426.0632 3757.1875,426.0632 C3756.4844,426.0632 3755.7344,425.5476 3755.0781,424.7195 L3753.5313,426.407 C3754.5625,427.5945 3755.8594,428.2351 3757.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="3771" y="427.636">OpenAPI</text></g><!--MD5=[39fb173fbcd4cdc1b159506716ead70c]
class routes.Profiling--><g id="elem_routes.Profiling"><rect codeLine="1152" fill="#F1F1F1" height="32" id="routes.Profiling" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="88" x="3867" y="405.532"/><ellipse cx="3882" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3882.1875,428.2351 C3884.4844,428.2351 3885.9375,426.6101 3885.9375,424.6101 C3885.9375,422.782 3885.1094,421.9382 3883.9688,421.1414 L3882.9531,420.4226 C3881.8281,419.6101 3881.4063,419.3132 3881.4063,418.4539 C3881.4063,417.7664 3881.8906,417.3601 3882.4688,417.3601 C3883.2031,417.3601 3883.6875,417.7507 3884.3906,418.3914 L3885.7031,416.8132 C3884.7344,415.7976 3883.7188,415.2039 3882.4531,415.2039 C3880.3125,415.2039 3878.8594,416.7195 3878.8594,418.6414 C3878.8594,420.4382 3879.7813,421.3445 3880.875,422.0945 L3881.9688,422.8445 C3882.9063,423.4539 3883.3594,424.032 3883.3594,424.9695 C3883.3594,425.6414 3882.8906,426.0632 3882.1875,426.0632 C3881.4844,426.0632 3880.7344,425.5476 3880.0781,424.7195 L3878.5313,426.407 C3879.5625,427.5945 3880.8594,428.2351 3882.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="3896" y="427.636">Profiling</text></g><!--MD5=[4ade0fac0289922815c21af8de377bae]
class routes.Version--><g id="elem_routes.Version"><rect codeLine="1156" fill="#F1F1F1" height="32" id="routes.Version" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="81" x="3432.5" y="497.532"/><ellipse cx="3447.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3447.6875,520.2351 C3449.9844,520.2351 3451.4375,518.6101 3451.4375,516.6101 C3451.4375,514.782 3450.6094,513.9382 3449.4688,513.1414 L3448.4531,512.4226 C3447.3281,511.6101 3446.9063,511.3132 3446.9063,510.4539 C3446.9063,509.7664 3447.3906,509.3601 3447.9688,509.3601 C3448.7031,509.3601 3449.1875,509.7507 3449.8906,510.3914 L3451.2031,508.8132 C3450.2344,507.7976 3449.2188,507.2039 3447.9531,507.2039 C3445.8125,507.2039 3444.3594,508.7195 3444.3594,510.6414 C3444.3594,512.4382 3445.2813,513.3445 3446.375,514.0945 L3447.4688,514.8445 C3448.4063,515.4539 3448.8594,516.032 3448.8594,516.9695 C3448.8594,517.6414 3448.3906,518.0632 3447.6875,518.0632 C3446.9844,518.0632 3446.2344,517.5476 3445.5781,516.7195 L3444.0313,518.407 C3445.0625,519.5945 3446.3594,520.2351 3447.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="49" x="3461.5" y="519.636">Version</text></g><!--MD5=[60abf9b7dcd8460f6e85b71d1d89eb42]
class routes.debugFlag--><g id="elem_routes.debugFlag"><rect codeLine="1164" fill="#F1F1F1" height="32" id="routes.debugFlag" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="103" x="3548.5" y="497.532"/><ellipse cx="3563.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3563.6875,520.2351 C3565.9844,520.2351 3567.4375,518.6101 3567.4375,516.6101 C3567.4375,514.782 3566.6094,513.9382 3565.4688,513.1414 L3564.4531,512.4226 C3563.3281,511.6101 3562.9063,511.3132 3562.9063,510.4539 C3562.9063,509.7664 3563.3906,509.3601 3563.9688,509.3601 C3564.7031,509.3601 3565.1875,509.7507 3565.8906,510.3914 L3567.2031,508.8132 C3566.2344,507.7976 3565.2188,507.2039 3563.9531,507.2039 C3561.8125,507.2039 3560.3594,508.7195 3560.3594,510.6414 C3560.3594,512.4382 3561.2813,513.3445 3562.375,514.0945 L3563.4688,514.8445 C3564.4063,515.4539 3564.8594,516.032 3564.8594,516.9695 C3564.8594,517.6414 3564.3906,518.0632 3563.6875,518.0632 C3562.9844,518.0632 3562.2344,517.5476 3561.5781,516.7195 L3560.0313,518.407 C3561.0625,519.5945 3562.3594,520.2351 3563.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="3577.5" y="519.636">debugFlag</text></g><!--MD5=[6e0ad58884d9c8a4eb7672b8c7ec5e4d]
class routes.StringFlagSetterFunc--><g id="elem_routes.StringFlagSetterFunc"><rect codeLine="1170" fill="#F1F1F1" height="32" id="routes.StringFlagSetterFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="171" x="3686.5" y="497.532"/><ellipse cx="3701.5" cy="513.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3700.2344,520.532 L3702.7813,520.532 L3702.7813,510.0164 L3705.4063,510.0164 L3705.4063,507.907 L3697.5938,507.907 L3697.5938,510.0164 L3700.2344,510.0164 L3700.2344,520.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="3715.5" y="519.636">StringFlagSetterFunc</text></g><!--MD5=[3575e5ccf564ea7f006328b1420b6dd5]
class options.APIEnablementOptions--><g id="elem_options.APIEnablementOptions"><rect codeLine="715" fill="#F1F1F1" height="32" id="options.APIEnablementOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="187" x="14.5" y="497.532"/><ellipse cx="29.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M29.6875,520.2351 C31.9844,520.2351 33.4375,518.6101 33.4375,516.6101 C33.4375,514.782 32.6094,513.9382 31.4688,513.1414 L30.4531,512.4226 C29.3281,511.6101 28.9063,511.3132 28.9063,510.4539 C28.9063,509.7664 29.3906,509.3601 29.9688,509.3601 C30.7031,509.3601 31.1875,509.7507 31.8906,510.3914 L33.2031,508.8132 C32.2344,507.7976 31.2188,507.2039 29.9531,507.2039 C27.8125,507.2039 26.3594,508.7195 26.3594,510.6414 C26.3594,512.4382 27.2813,513.3445 28.375,514.0945 L29.4688,514.8445 C30.4063,515.4539 30.8594,516.032 30.8594,516.9695 C30.8594,517.6414 30.3906,518.0632 29.6875,518.0632 C28.9844,518.0632 28.2344,517.5476 27.5781,516.7195 L26.0313,518.407 C27.0625,519.5945 28.3594,520.2351 29.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="43.5" y="519.636">APIEnablementOptions</text></g><!--MD5=[f579a2e41b0514362a633c6d7a06e65e]
class options.AdmissionOptions--><g id="elem_options.AdmissionOptions"><rect codeLine="723" fill="#F1F1F1" height="32" id="options.AdmissionOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="154" x="237" y="497.532"/><ellipse cx="252" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M252.1875,520.2351 C254.4844,520.2351 255.9375,518.6101 255.9375,516.6101 C255.9375,514.782 255.1094,513.9382 253.9688,513.1414 L252.9531,512.4226 C251.8281,511.6101 251.4063,511.3132 251.4063,510.4539 C251.4063,509.7664 251.8906,509.3601 252.4688,509.3601 C253.2031,509.3601 253.6875,509.7507 254.3906,510.3914 L255.7031,508.8132 C254.7344,507.7976 253.7188,507.2039 252.4531,507.2039 C250.3125,507.2039 248.8594,508.7195 248.8594,510.6414 C248.8594,512.4382 249.7813,513.3445 250.875,514.0945 L251.9688,514.8445 C252.9063,515.4539 253.3594,516.032 253.3594,516.9695 C253.3594,517.6414 252.8906,518.0632 252.1875,518.0632 C251.4844,518.0632 250.7344,517.5476 250.0781,516.7195 L248.5313,518.407 C249.5625,519.5945 250.8594,520.2351 252.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="266" y="519.636">AdmissionOptions</text></g><!--MD5=[1c63473ab90510d283d32d2c83db7bca]
class options.AuditBatchOptions--><g id="elem_options.AuditBatchOptions"><rect codeLine="740" fill="#F1F1F1" height="32" id="options.AuditBatchOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="158" x="426" y="497.532"/><ellipse cx="441" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M441.1875,520.2351 C443.4844,520.2351 444.9375,518.6101 444.9375,516.6101 C444.9375,514.782 444.1094,513.9382 442.9688,513.1414 L441.9531,512.4226 C440.8281,511.6101 440.4063,511.3132 440.4063,510.4539 C440.4063,509.7664 440.8906,509.3601 441.4688,509.3601 C442.2031,509.3601 442.6875,509.7507 443.3906,510.3914 L444.7031,508.8132 C443.7344,507.7976 442.7188,507.2039 441.4531,507.2039 C439.3125,507.2039 437.8594,508.7195 437.8594,510.6414 C437.8594,512.4382 438.7813,513.3445 439.875,514.0945 L440.9688,514.8445 C441.9063,515.4539 442.3594,516.032 442.3594,516.9695 C442.3594,517.6414 441.8906,518.0632 441.1875,518.0632 C440.4844,518.0632 439.7344,517.5476 439.0781,516.7195 L437.5313,518.407 C438.5625,519.5945 439.8594,520.2351 441.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="455" y="519.636">AuditBatchOptions</text></g><!--MD5=[6bc115483c511e8d8e5d6deaf4939615]
class options.AuditDynamicOptions--><g id="elem_options.AuditDynamicOptions"><rect codeLine="749" fill="#F1F1F1" height="32" id="options.AuditDynamicOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="619" y="497.532"/><ellipse cx="634" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M634.1875,520.2351 C636.4844,520.2351 637.9375,518.6101 637.9375,516.6101 C637.9375,514.782 637.1094,513.9382 635.9688,513.1414 L634.9531,512.4226 C633.8281,511.6101 633.4063,511.3132 633.4063,510.4539 C633.4063,509.7664 633.8906,509.3601 634.4688,509.3601 C635.2031,509.3601 635.6875,509.7507 636.3906,510.3914 L637.7031,508.8132 C636.7344,507.7976 635.7188,507.2039 634.4531,507.2039 C632.3125,507.2039 630.8594,508.7195 630.8594,510.6414 C630.8594,512.4382 631.7813,513.3445 632.875,514.0945 L633.9688,514.8445 C634.9063,515.4539 635.3594,516.032 635.3594,516.9695 C635.3594,517.6414 634.8906,518.0632 634.1875,518.0632 C633.4844,518.0632 632.7344,517.5476 632.0781,516.7195 L630.5313,518.407 C631.5625,519.5945 632.8594,520.2351 634.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="648" y="519.636">AuditDynamicOptions</text></g><!--MD5=[9f567561ba010ada2ddc0573723996eb]
class options.AuditLogOptions--><g id="elem_options.AuditLogOptions"><rect codeLine="754" fill="#F1F1F1" height="32" id="options.AuditLogOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="144" x="832" y="497.532"/><ellipse cx="847" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M847.1875,520.2351 C849.4844,520.2351 850.9375,518.6101 850.9375,516.6101 C850.9375,514.782 850.1094,513.9382 848.9688,513.1414 L847.9531,512.4226 C846.8281,511.6101 846.4063,511.3132 846.4063,510.4539 C846.4063,509.7664 846.8906,509.3601 847.4688,509.3601 C848.2031,509.3601 848.6875,509.7507 849.3906,510.3914 L850.7031,508.8132 C849.7344,507.7976 848.7188,507.2039 847.4531,507.2039 C845.3125,507.2039 843.8594,508.7195 843.8594,510.6414 C843.8594,512.4382 844.7813,513.3445 845.875,514.0945 L846.9688,514.8445 C847.9063,515.4539 848.3594,516.032 848.3594,516.9695 C848.3594,517.6414 847.8906,518.0632 847.1875,518.0632 C846.4844,518.0632 845.7344,517.5476 845.0781,516.7195 L843.5313,518.407 C844.5625,519.5945 845.8594,520.2351 847.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="861" y="519.636">AuditLogOptions</text></g><!--MD5=[94222cd6234c08d9dd96340cef9a1457]
class options.AuditOptions--><g id="elem_options.AuditOptions"><rect codeLine="774" fill="#F1F1F1" height="32" id="options.AuditOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="1011" y="497.532"/><ellipse cx="1026" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1026.1875,520.2351 C1028.4844,520.2351 1029.9375,518.6101 1029.9375,516.6101 C1029.9375,514.782 1029.1094,513.9382 1027.9688,513.1414 L1026.9531,512.4226 C1025.8281,511.6101 1025.4063,511.3132 1025.4063,510.4539 C1025.4063,509.7664 1025.8906,509.3601 1026.4688,509.3601 C1027.2031,509.3601 1027.6875,509.7507 1028.3906,510.3914 L1029.7031,508.8132 C1028.7344,507.7976 1027.7188,507.2039 1026.4531,507.2039 C1024.3125,507.2039 1022.8594,508.7195 1022.8594,510.6414 C1022.8594,512.4382 1023.7813,513.3445 1024.875,514.0945 L1025.9688,514.8445 C1026.9063,515.4539 1027.3594,516.032 1027.3594,516.9695 C1027.3594,517.6414 1026.8906,518.0632 1026.1875,518.0632 C1025.4844,518.0632 1024.7344,517.5476 1024.0781,516.7195 L1022.5313,518.407 C1023.5625,519.5945 1024.8594,520.2351 1026.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="1040" y="519.636">AuditOptions</text></g><!--MD5=[eaab4b9a1890625804d2544f566d64e8]
class options.AuditTruncateOptions--><g id="elem_options.AuditTruncateOptions"><rect codeLine="786" fill="#F1F1F1" height="32" id="options.AuditTruncateOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="18.5" y="589.532"/><ellipse cx="33.5" cy="605.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M33.6875,612.2351 C35.9844,612.2351 37.4375,610.6101 37.4375,608.6101 C37.4375,606.782 36.6094,605.9382 35.4688,605.1414 L34.4531,604.4226 C33.3281,603.6101 32.9063,603.3132 32.9063,602.4539 C32.9063,601.7664 33.3906,601.3601 33.9688,601.3601 C34.7031,601.3601 35.1875,601.7507 35.8906,602.3914 L37.2031,600.8132 C36.2344,599.7976 35.2188,599.2039 33.9531,599.2039 C31.8125,599.2039 30.3594,600.7195 30.3594,602.6414 C30.3594,604.4382 31.2813,605.3445 32.375,606.0945 L33.4688,606.8445 C34.4063,607.4539 34.8594,608.032 34.8594,608.9695 C34.8594,609.6414 34.3906,610.0632 33.6875,610.0632 C32.9844,610.0632 32.2344,609.5476 31.5781,608.7195 L30.0313,610.407 C31.0625,611.5945 32.3594,612.2351 33.6875,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="47.5" y="611.636">AuditTruncateOptions</text></g><!--MD5=[2b8b4dfaaa832a9487846a90245277ab]
class options.AuditWebhookOptions--><g id="elem_options.AuditWebhookOptions"><rect codeLine="796" fill="#F1F1F1" height="32" id="options.AuditWebhookOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="182" x="233" y="589.532"/><ellipse cx="248" cy="605.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M248.1875,612.2351 C250.4844,612.2351 251.9375,610.6101 251.9375,608.6101 C251.9375,606.782 251.1094,605.9382 249.9688,605.1414 L248.9531,604.4226 C247.8281,603.6101 247.4063,603.3132 247.4063,602.4539 C247.4063,601.7664 247.8906,601.3601 248.4688,601.3601 C249.2031,601.3601 249.6875,601.7507 250.3906,602.3914 L251.7031,600.8132 C250.7344,599.7976 249.7188,599.2039 248.4531,599.2039 C246.3125,599.2039 244.8594,600.7195 244.8594,602.6414 C244.8594,604.4382 245.7813,605.3445 246.875,606.0945 L247.9688,606.8445 C248.9063,607.4539 249.3594,608.032 249.3594,608.9695 C249.3594,609.6414 248.8906,610.0632 248.1875,610.0632 C247.4844,610.0632 246.7344,609.5476 246.0781,608.7195 L244.5313,610.407 C245.5625,611.5945 246.8594,612.2351 248.1875,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="262" y="611.636">AuditWebhookOptions</text></g><!--MD5=[dc5ad4a973450fbec4d1cd2265f3f25d]
class options.CertKey--><g id="elem_options.CertKey"><rect codeLine="810" fill="#F1F1F1" height="32" id="options.CertKey" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="83" x="450.5" y="589.532"/><ellipse cx="465.5" cy="605.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M465.6875,612.2351 C467.9844,612.2351 469.4375,610.6101 469.4375,608.6101 C469.4375,606.782 468.6094,605.9382 467.4688,605.1414 L466.4531,604.4226 C465.3281,603.6101 464.9063,603.3132 464.9063,602.4539 C464.9063,601.7664 465.3906,601.3601 465.9688,601.3601 C466.7031,601.3601 467.1875,601.7507 467.8906,602.3914 L469.2031,600.8132 C468.2344,599.7976 467.2188,599.2039 465.9531,599.2039 C463.8125,599.2039 462.3594,600.7195 462.3594,602.6414 C462.3594,604.4382 463.2813,605.3445 464.375,606.0945 L465.4688,606.8445 C466.4063,607.4539 466.8594,608.032 466.8594,608.9695 C466.8594,609.6414 466.3906,610.0632 465.6875,610.0632 C464.9844,610.0632 464.2344,609.5476 463.5781,608.7195 L462.0313,610.407 C463.0625,611.5945 464.3594,612.2351 465.6875,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="479.5" y="611.636">CertKey</text></g><!--MD5=[d218b646e59d83f90f11e09168737424]
class options.ClientCertAuthenticationOptions--><g id="elem_options.ClientCertAuthenticationOptions"><rect codeLine="815" fill="#F1F1F1" height="32" id="options.ClientCertAuthenticationOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="249" x="568.5" y="589.532"/><ellipse cx="583.5" cy="605.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M583.6875,612.2351 C585.9844,612.2351 587.4375,610.6101 587.4375,608.6101 C587.4375,606.782 586.6094,605.9382 585.4688,605.1414 L584.4531,604.4226 C583.3281,603.6101 582.9063,603.3132 582.9063,602.4539 C582.9063,601.7664 583.3906,601.3601 583.9688,601.3601 C584.7031,601.3601 585.1875,601.7507 585.8906,602.3914 L587.2031,600.8132 C586.2344,599.7976 585.2188,599.2039 583.9531,599.2039 C581.8125,599.2039 580.3594,600.7195 580.3594,602.6414 C580.3594,604.4382 581.2813,605.3445 582.375,606.0945 L583.4688,606.8445 C584.4063,607.4539 584.8594,608.032 584.8594,608.9695 C584.8594,609.6414 584.3906,610.0632 583.6875,610.0632 C582.9844,610.0632 582.2344,609.5476 581.5781,608.7195 L580.0313,610.407 C581.0625,611.5945 582.3594,612.2351 583.6875,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="597.5" y="611.636">ClientCertAuthenticationOptions</text></g><!--MD5=[7b341d9a06a48bd756e2d0d758347111]
class options.CoreAPIOptions--><g id="elem_options.CoreAPIOptions"><rect codeLine="823" fill="#F1F1F1" height="32" id="options.CoreAPIOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="136" x="853" y="589.532"/><ellipse cx="868" cy="605.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M868.1875,612.2351 C870.4844,612.2351 871.9375,610.6101 871.9375,608.6101 C871.9375,606.782 871.1094,605.9382 869.9688,605.1414 L868.9531,604.4226 C867.8281,603.6101 867.4063,603.3132 867.4063,602.4539 C867.4063,601.7664 867.8906,601.3601 868.4688,601.3601 C869.2031,601.3601 869.6875,601.7507 870.3906,602.3914 L871.7031,600.8132 C870.7344,599.7976 869.7188,599.2039 868.4531,599.2039 C866.3125,599.2039 864.8594,600.7195 864.8594,602.6414 C864.8594,604.4382 865.7813,605.3445 866.875,606.0945 L867.9688,606.8445 C868.9063,607.4539 869.3594,608.032 869.3594,608.9695 C869.3594,609.6414 868.8906,610.0632 868.1875,610.0632 C867.4844,610.0632 866.7344,609.5476 866.0781,608.7195 L864.5313,610.407 C865.5625,611.5945 866.8594,612.2351 868.1875,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="882" y="611.636">CoreAPIOptions</text></g><!--MD5=[1f945721774d4790c3196f6a1c1d179d]
class options.DelegatingAuthenticationOptions--><g id="elem_options.DelegatingAuthenticationOptions"><rect codeLine="831" fill="#F1F1F1" height="32" id="options.DelegatingAuthenticationOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="255" x="1024.5" y="589.532"/><ellipse cx="1039.5" cy="605.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1039.6875,612.2351 C1041.9844,612.2351 1043.4375,610.6101 1043.4375,608.6101 C1043.4375,606.782 1042.6094,605.9382 1041.4688,605.1414 L1040.4531,604.4226 C1039.3281,603.6101 1038.9063,603.3132 1038.9063,602.4539 C1038.9063,601.7664 1039.3906,601.3601 1039.9688,601.3601 C1040.7031,601.3601 1041.1875,601.7507 1041.8906,602.3914 L1043.2031,600.8132 C1042.2344,599.7976 1041.2188,599.2039 1039.9531,599.2039 C1037.8125,599.2039 1036.3594,600.7195 1036.3594,602.6414 C1036.3594,604.4382 1037.2813,605.3445 1038.375,606.0945 L1039.4688,606.8445 C1040.4063,607.4539 1040.8594,608.032 1040.8594,608.9695 C1040.8594,609.6414 1040.3906,610.0632 1039.6875,610.0632 C1038.9844,610.0632 1038.2344,609.5476 1037.5781,608.7195 L1036.0313,610.407 C1037.0625,611.5945 1038.3594,612.2351 1039.6875,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="1053.5" y="611.636">DelegatingAuthenticationOptions</text></g><!--MD5=[0f0fa14f6f14a492c3600747b1401f4b]
class options.DelegatingAuthorizationOptions--><g id="elem_options.DelegatingAuthorizationOptions"><rect codeLine="855" fill="#F1F1F1" height="32" id="options.DelegatingAuthorizationOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="246" x="14" y="681.532"/><ellipse cx="29" cy="697.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M29.1875,704.2351 C31.4844,704.2351 32.9375,702.6101 32.9375,700.6101 C32.9375,698.782 32.1094,697.9382 30.9688,697.1414 L29.9531,696.4226 C28.8281,695.6101 28.4063,695.3132 28.4063,694.4539 C28.4063,693.7664 28.8906,693.3601 29.4688,693.3601 C30.2031,693.3601 30.6875,693.7507 31.3906,694.3914 L32.7031,692.8132 C31.7344,691.7976 30.7188,691.2039 29.4531,691.2039 C27.3125,691.2039 25.8594,692.7195 25.8594,694.6414 C25.8594,696.4382 26.7813,697.3445 27.875,698.0945 L28.9688,698.8445 C29.9063,699.4539 30.3594,700.032 30.3594,700.9695 C30.3594,701.6414 29.8906,702.0632 29.1875,702.0632 C28.4844,702.0632 27.7344,701.5476 27.0781,700.7195 L25.5313,702.407 C26.5625,703.5945 27.8594,704.2351 29.1875,704.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="43" y="703.636">DelegatingAuthorizationOptions</text></g><!--MD5=[7c15473bbcc6fabcea4007d6094b744d]
class options.DeprecatedInsecureServingOptions--><g id="elem_options.DeprecatedInsecureServingOptions"><rect codeLine="879" fill="#F1F1F1" height="32" id="options.DeprecatedInsecureServingOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="267" x="295.5" y="681.532"/><ellipse cx="310.5" cy="697.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M310.6875,704.2351 C312.9844,704.2351 314.4375,702.6101 314.4375,700.6101 C314.4375,698.782 313.6094,697.9382 312.4688,697.1414 L311.4531,696.4226 C310.3281,695.6101 309.9063,695.3132 309.9063,694.4539 C309.9063,693.7664 310.3906,693.3601 310.9688,693.3601 C311.7031,693.3601 312.1875,693.7507 312.8906,694.3914 L314.2031,692.8132 C313.2344,691.7976 312.2188,691.2039 310.9531,691.2039 C308.8125,691.2039 307.3594,692.7195 307.3594,694.6414 C307.3594,696.4382 308.2813,697.3445 309.375,698.0945 L310.4688,698.8445 C311.4063,699.4539 311.8594,700.032 311.8594,700.9695 C311.8594,701.6414 311.3906,702.0632 310.6875,702.0632 C309.9844,702.0632 309.2344,701.5476 308.5781,700.7195 L307.0313,702.407 C308.0625,703.5945 309.3594,704.2351 310.6875,704.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="324.5" y="703.636">DeprecatedInsecureServingOptions</text></g><!--MD5=[ece9a61c7d1c09956dfaab08b7361971]
class options.DynamicRequestHeaderController--><g id="elem_options.DynamicRequestHeaderController"><rect codeLine="892" fill="#F1F1F1" height="32" id="options.DynamicRequestHeaderController" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="258" x="1379" y="497.532"/><ellipse cx="1394" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1394.1875,520.2351 C1396.4844,520.2351 1397.9375,518.6101 1397.9375,516.6101 C1397.9375,514.782 1397.1094,513.9382 1395.9688,513.1414 L1394.9531,512.4226 C1393.8281,511.6101 1393.4063,511.3132 1393.4063,510.4539 C1393.4063,509.7664 1393.8906,509.3601 1394.4688,509.3601 C1395.2031,509.3601 1395.6875,509.7507 1396.3906,510.3914 L1397.7031,508.8132 C1396.7344,507.7976 1395.7188,507.2039 1394.4531,507.2039 C1392.3125,507.2039 1390.8594,508.7195 1390.8594,510.6414 C1390.8594,512.4382 1391.7813,513.3445 1392.875,514.0945 L1393.9688,514.8445 C1394.9063,515.4539 1395.3594,516.032 1395.3594,516.9695 C1395.3594,517.6414 1394.8906,518.0632 1394.1875,518.0632 C1393.4844,518.0632 1392.7344,517.5476 1392.0781,516.7195 L1390.5313,518.407 C1391.5625,519.5945 1392.8594,520.2351 1394.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="1408" y="519.636">DynamicRequestHeaderController</text></g><!--MD5=[e499f8a558ebe6d5cd7d0b075d5af0af]
class options.EgressSelectorOptions--><g id="elem_options.EgressSelectorOptions"><rect codeLine="897" fill="#F1F1F1" height="32" id="options.EgressSelectorOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="180" x="598" y="681.532"/><ellipse cx="613" cy="697.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M613.1875,704.2351 C615.4844,704.2351 616.9375,702.6101 616.9375,700.6101 C616.9375,698.782 616.1094,697.9382 614.9688,697.1414 L613.9531,696.4226 C612.8281,695.6101 612.4063,695.3132 612.4063,694.4539 C612.4063,693.7664 612.8906,693.3601 613.4688,693.3601 C614.2031,693.3601 614.6875,693.7507 615.3906,694.3914 L616.7031,692.8132 C615.7344,691.7976 614.7188,691.2039 613.4531,691.2039 C611.3125,691.2039 609.8594,692.7195 609.8594,694.6414 C609.8594,696.4382 610.7813,697.3445 611.875,698.0945 L612.9688,698.8445 C613.9063,699.4539 614.3594,700.032 614.3594,700.9695 C614.3594,701.6414 613.8906,702.0632 613.1875,702.0632 C612.4844,702.0632 611.7344,701.5476 611.0781,700.7195 L609.5313,702.407 C610.5625,703.5945 611.8594,704.2351 613.1875,704.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="627" y="703.636">EgressSelectorOptions</text></g><!--MD5=[15e957572aadba79383c1fad590e6d68]
class options.EtcdOptions--><g id="elem_options.EtcdOptions"><rect codeLine="905" fill="#F1F1F1" height="32" id="options.EtcdOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="113" x="813.5" y="681.532"/><ellipse cx="828.5" cy="697.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M828.6875,704.2351 C830.9844,704.2351 832.4375,702.6101 832.4375,700.6101 C832.4375,698.782 831.6094,697.9382 830.4688,697.1414 L829.4531,696.4226 C828.3281,695.6101 827.9063,695.3132 827.9063,694.4539 C827.9063,693.7664 828.3906,693.3601 828.9688,693.3601 C829.7031,693.3601 830.1875,693.7507 830.8906,694.3914 L832.2031,692.8132 C831.2344,691.7976 830.2188,691.2039 828.9531,691.2039 C826.8125,691.2039 825.3594,692.7195 825.3594,694.6414 C825.3594,696.4382 826.2813,697.3445 827.375,698.0945 L828.4688,698.8445 C829.4063,699.4539 829.8594,700.032 829.8594,700.9695 C829.8594,701.6414 829.3906,702.0632 828.6875,702.0632 C827.9844,702.0632 827.2344,701.5476 826.5781,700.7195 L825.0313,702.407 C826.0625,703.5945 827.3594,704.2351 828.6875,704.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="842.5" y="703.636">EtcdOptions</text></g><!--MD5=[c89da153a6a5e6541f159c8b30769e86]
class options.FeatureOptions--><g id="elem_options.FeatureOptions"><rect codeLine="931" fill="#F1F1F1" height="32" id="options.FeatureOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="961.5" y="681.532"/><ellipse cx="976.5" cy="697.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M976.6875,704.2351 C978.9844,704.2351 980.4375,702.6101 980.4375,700.6101 C980.4375,698.782 979.6094,697.9382 978.4688,697.1414 L977.4531,696.4226 C976.3281,695.6101 975.9063,695.3132 975.9063,694.4539 C975.9063,693.7664 976.3906,693.3601 976.9688,693.3601 C977.7031,693.3601 978.1875,693.7507 978.8906,694.3914 L980.2031,692.8132 C979.2344,691.7976 978.2188,691.2039 976.9531,691.2039 C974.8125,691.2039 973.3594,692.7195 973.3594,694.6414 C973.3594,696.4382 974.2813,697.3445 975.375,698.0945 L976.4688,698.8445 C977.4063,699.4539 977.8594,700.032 977.8594,700.9695 C977.8594,701.6414 977.3906,702.0632 976.6875,702.0632 C975.9844,702.0632 975.2344,701.5476 974.5781,700.7195 L973.0313,702.407 C974.0625,703.5945 975.3594,704.2351 976.6875,704.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="990.5" y="703.636">FeatureOptions</text></g><!--MD5=[d8d867046a03311c7ee2151a5488c240]
class options.GeneratableKeyCert--><g id="elem_options.GeneratableKeyCert"><rect codeLine="941" fill="#F1F1F1" height="32" id="options.GeneratableKeyCert" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="165" x="1131.5" y="681.532"/><ellipse cx="1146.5" cy="697.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1146.6875,704.2351 C1148.9844,704.2351 1150.4375,702.6101 1150.4375,700.6101 C1150.4375,698.782 1149.6094,697.9382 1148.4688,697.1414 L1147.4531,696.4226 C1146.3281,695.6101 1145.9063,695.3132 1145.9063,694.4539 C1145.9063,693.7664 1146.3906,693.3601 1146.9688,693.3601 C1147.7031,693.3601 1148.1875,693.7507 1148.8906,694.3914 L1150.2031,692.8132 C1149.2344,691.7976 1148.2188,691.2039 1146.9531,691.2039 C1144.8125,691.2039 1143.3594,692.7195 1143.3594,694.6414 C1143.3594,696.4382 1144.2813,697.3445 1145.375,698.0945 L1146.4688,698.8445 C1147.4063,699.4539 1147.8594,700.032 1147.8594,700.9695 C1147.8594,701.6414 1147.3906,702.0632 1146.6875,702.0632 C1145.9844,702.0632 1145.2344,701.5476 1144.5781,700.7195 L1143.0313,702.407 C1144.0625,703.5945 1145.3594,704.2351 1146.6875,704.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="1160.5" y="703.636">GeneratableKeyCert</text></g><!--MD5=[6697f9afd737902d2736c05db6592c12]
class options.GroupRegistry--><g id="elem_options.GroupRegistry"><rect codeLine="949" fill="#F1F1F1" height="32" id="options.GroupRegistry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="126" x="74" y="773.532"/><ellipse cx="89" cy="789.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M85.3594,796.032 L92.1406,796.032 L92.1406,793.9539 L89.9844,793.9539 L89.9844,785.5164 L92.1406,785.5164 L92.1406,783.407 L85.3594,783.407 L85.3594,785.5164 L87.4531,785.5164 L87.4531,793.9539 L85.3594,793.9539 L85.3594,796.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="94" x="103" y="795.636">GroupRegistry</text></g><!--MD5=[958a8be3939b31a057a1ca256d04aa4b]
class options.RecommendedOptions--><g id="elem_options.RecommendedOptions"><rect codeLine="953" fill="#F1F1F1" height="32" id="options.RecommendedOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="185" x="235.5" y="773.532"/><ellipse cx="250.5" cy="789.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M250.6875,796.2351 C252.9844,796.2351 254.4375,794.6101 254.4375,792.6101 C254.4375,790.782 253.6094,789.9382 252.4688,789.1414 L251.4531,788.4226 C250.3281,787.6101 249.9063,787.3132 249.9063,786.4539 C249.9063,785.7664 250.3906,785.3601 250.9688,785.3601 C251.7031,785.3601 252.1875,785.7507 252.8906,786.3914 L254.2031,784.8132 C253.2344,783.7976 252.2188,783.2039 250.9531,783.2039 C248.8125,783.2039 247.3594,784.7195 247.3594,786.6414 C247.3594,788.4382 248.2813,789.3445 249.375,790.0945 L250.4688,790.8445 C251.4063,791.4539 251.8594,792.032 251.8594,792.9695 C251.8594,793.6414 251.3906,794.0632 250.6875,794.0632 C249.9844,794.0632 249.2344,793.5476 248.5781,792.7195 L247.0313,794.407 C248.0625,795.5945 249.3594,796.2351 250.6875,796.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="264.5" y="795.636">RecommendedOptions</text></g><!--MD5=[0e154ca5d3dfe88450aadb81a5ef3fe4]
class options.RequestHeaderAuthenticationOptions--><g id="elem_options.RequestHeaderAuthenticationOptions"><rect codeLine="972" fill="#F1F1F1" height="32" id="options.RequestHeaderAuthenticationOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="286" x="456" y="773.532"/><ellipse cx="471" cy="789.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M471.1875,796.2351 C473.4844,796.2351 474.9375,794.6101 474.9375,792.6101 C474.9375,790.782 474.1094,789.9382 472.9688,789.1414 L471.9531,788.4226 C470.8281,787.6101 470.4063,787.3132 470.4063,786.4539 C470.4063,785.7664 470.8906,785.3601 471.4688,785.3601 C472.2031,785.3601 472.6875,785.7507 473.3906,786.3914 L474.7031,784.8132 C473.7344,783.7976 472.7188,783.2039 471.4531,783.2039 C469.3125,783.2039 467.8594,784.7195 467.8594,786.6414 C467.8594,788.4382 468.7813,789.3445 469.875,790.0945 L470.9688,790.8445 C471.9063,791.4539 472.3594,792.032 472.3594,792.9695 C472.3594,793.6414 471.8906,794.0632 471.1875,794.0632 C470.4844,794.0632 469.7344,793.5476 469.0781,792.7195 L467.5313,794.407 C468.5625,795.5945 469.8594,796.2351 471.1875,796.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="485" y="795.636">RequestHeaderAuthenticationOptions</text></g><!--MD5=[7601f5f8b22e4f308165a759899a1910]
class options.SecureServingOptions--><g id="elem_options.SecureServingOptions"><rect codeLine="984" fill="#F1F1F1" height="32" id="options.SecureServingOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="1166" y="497.532"/><ellipse cx="1181" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1181.1875,520.2351 C1183.4844,520.2351 1184.9375,518.6101 1184.9375,516.6101 C1184.9375,514.782 1184.1094,513.9382 1182.9688,513.1414 L1181.9531,512.4226 C1180.8281,511.6101 1180.4063,511.3132 1180.4063,510.4539 C1180.4063,509.7664 1180.8906,509.3601 1181.4688,509.3601 C1182.2031,509.3601 1182.6875,509.7507 1183.3906,510.3914 L1184.7031,508.8132 C1183.7344,507.7976 1182.7188,507.2039 1181.4531,507.2039 C1179.3125,507.2039 1177.8594,508.7195 1177.8594,510.6414 C1177.8594,512.4382 1178.7813,513.3445 1179.875,514.0945 L1180.9688,514.8445 C1181.9063,515.4539 1182.3594,516.032 1182.3594,516.9695 C1182.3594,517.6414 1181.8906,518.0632 1181.1875,518.0632 C1180.4844,518.0632 1179.7344,517.5476 1179.0781,516.7195 L1177.5313,518.407 C1178.5625,519.5945 1179.8594,520.2351 1181.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="1195" y="519.636">SecureServingOptions</text></g><!--MD5=[a725c7bc198e5d3c2121d4df8331a0f7]
class options.SecureServingOptionsWithLoopback--><g id="elem_options.SecureServingOptionsWithLoopback"><rect codeLine="1007" fill="#F1F1F1" height="32" id="options.SecureServingOptionsWithLoopback" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="273" x="1314.5" y="589.532"/><ellipse cx="1329.5" cy="605.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1329.6875,612.2351 C1331.9844,612.2351 1333.4375,610.6101 1333.4375,608.6101 C1333.4375,606.782 1332.6094,605.9382 1331.4688,605.1414 L1330.4531,604.4226 C1329.3281,603.6101 1328.9063,603.3132 1328.9063,602.4539 C1328.9063,601.7664 1329.3906,601.3601 1329.9688,601.3601 C1330.7031,601.3601 1331.1875,601.7507 1331.8906,602.3914 L1333.2031,600.8132 C1332.2344,599.7976 1331.2188,599.2039 1329.9531,599.2039 C1327.8125,599.2039 1326.3594,600.7195 1326.3594,602.6414 C1326.3594,604.4382 1327.2813,605.3445 1328.375,606.0945 L1329.4688,606.8445 C1330.4063,607.4539 1330.8594,608.032 1330.8594,608.9695 C1330.8594,609.6414 1330.3906,610.0632 1329.6875,610.0632 C1328.9844,610.0632 1328.2344,609.5476 1327.5781,608.7195 L1326.0313,610.407 C1327.0625,611.5945 1328.3594,612.2351 1329.6875,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="1343.5" y="611.636">SecureServingOptionsWithLoopback</text></g><!--MD5=[e9b0bcb6e6a27e6b1775fe815f8fe3f5]
class options.ServerRunOptions--><g id="elem_options.ServerRunOptions"><rect codeLine="1011" fill="#F1F1F1" height="32" id="options.ServerRunOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="777" y="773.532"/><ellipse cx="792" cy="789.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M792.1875,796.2351 C794.4844,796.2351 795.9375,794.6101 795.9375,792.6101 C795.9375,790.782 795.1094,789.9382 793.9688,789.1414 L792.9531,788.4226 C791.8281,787.6101 791.4063,787.3132 791.4063,786.4539 C791.4063,785.7664 791.8906,785.3601 792.4688,785.3601 C793.2031,785.3601 793.6875,785.7507 794.3906,786.3914 L795.7031,784.8132 C794.7344,783.7976 793.7188,783.2039 792.4531,783.2039 C790.3125,783.2039 788.8594,784.7195 788.8594,786.6414 C788.8594,788.4382 789.7813,789.3445 790.875,790.0945 L791.9688,790.8445 C792.9063,791.4539 793.3594,792.032 793.3594,792.9695 C793.3594,793.6414 792.8906,794.0632 792.1875,794.0632 C791.4844,794.0632 790.7344,793.5476 790.0781,792.7195 L788.5313,794.407 C789.5625,795.5945 790.8594,796.2351 792.1875,796.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="806" y="795.636">ServerRunOptions</text></g><!--MD5=[57105d872cea63e4dac7327b484c4089]
class options.SimpleStorageFactory--><g id="elem_options.SimpleStorageFactory"><rect codeLine="1035" fill="#F1F1F1" height="32" id="options.SimpleStorageFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="176" x="1877" y="497.532"/><ellipse cx="1892" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1892.1875,520.2351 C1894.4844,520.2351 1895.9375,518.6101 1895.9375,516.6101 C1895.9375,514.782 1895.1094,513.9382 1893.9688,513.1414 L1892.9531,512.4226 C1891.8281,511.6101 1891.4063,511.3132 1891.4063,510.4539 C1891.4063,509.7664 1891.8906,509.3601 1892.4688,509.3601 C1893.2031,509.3601 1893.6875,509.7507 1894.3906,510.3914 L1895.7031,508.8132 C1894.7344,507.7976 1893.7188,507.2039 1892.4531,507.2039 C1890.3125,507.2039 1888.8594,508.7195 1888.8594,510.6414 C1888.8594,512.4382 1889.7813,513.3445 1890.875,514.0945 L1891.9688,514.8445 C1892.9063,515.4539 1893.3594,516.032 1893.3594,516.9695 C1893.3594,517.6414 1892.8906,518.0632 1892.1875,518.0632 C1891.4844,518.0632 1890.7344,517.5476 1890.0781,516.7195 L1888.5313,518.407 C1889.5625,519.5945 1890.8594,520.2351 1892.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="1906" y="519.636">SimpleStorageFactory</text></g><!--MD5=[a300e2b60529c884c4951f00c23974d2]
class options.StorageFactoryRestOptionsFactory--><g id="elem_options.StorageFactoryRestOptionsFactory"><rect codeLine="1043" fill="#F1F1F1" height="32" id="options.StorageFactoryRestOptionsFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="259" x="964.5" y="773.532"/><ellipse cx="979.5" cy="789.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M979.6875,796.2351 C981.9844,796.2351 983.4375,794.6101 983.4375,792.6101 C983.4375,790.782 982.6094,789.9382 981.4688,789.1414 L980.4531,788.4226 C979.3281,787.6101 978.9063,787.3132 978.9063,786.4539 C978.9063,785.7664 979.3906,785.3601 979.9688,785.3601 C980.7031,785.3601 981.1875,785.7507 981.8906,786.3914 L983.2031,784.8132 C982.2344,783.7976 981.2188,783.2039 979.9531,783.2039 C977.8125,783.2039 976.3594,784.7195 976.3594,786.6414 C976.3594,788.4382 977.2813,789.3445 978.375,790.0945 L979.4688,790.8445 C980.4063,791.4539 980.8594,792.032 980.8594,792.9695 C980.8594,793.6414 980.3906,794.0632 979.6875,794.0632 C978.9844,794.0632 978.2344,793.5476 977.5781,792.7195 L976.0313,794.407 C977.0625,795.5945 978.3594,796.2351 979.6875,796.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="993.5" y="795.636">StorageFactoryRestOptionsFactory</text></g><!--MD5=[5068c6137ff4319421ad302c679e4807]
class options.TracingOptions--><g id="elem_options.TracingOptions"><rect codeLine="1050" fill="#F1F1F1" height="32" id="options.TracingOptions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="1258.5" y="773.532"/><ellipse cx="1273.5" cy="789.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1273.6875,796.2351 C1275.9844,796.2351 1277.4375,794.6101 1277.4375,792.6101 C1277.4375,790.782 1276.6094,789.9382 1275.4688,789.1414 L1274.4531,788.4226 C1273.3281,787.6101 1272.9063,787.3132 1272.9063,786.4539 C1272.9063,785.7664 1273.3906,785.3601 1273.9688,785.3601 C1274.7031,785.3601 1275.1875,785.7507 1275.8906,786.3914 L1277.2031,784.8132 C1276.2344,783.7976 1275.2188,783.2039 1273.9531,783.2039 C1271.8125,783.2039 1270.3594,784.7195 1270.3594,786.6414 C1270.3594,788.4382 1271.2813,789.3445 1272.375,790.0945 L1273.4688,790.8445 C1274.4063,791.4539 1274.8594,792.032 1274.8594,792.9695 C1274.8594,793.6414 1274.3906,794.0632 1273.6875,794.0632 C1272.9844,794.0632 1272.2344,793.5476 1271.5781,792.7195 L1270.0313,794.407 C1271.0625,795.5945 1272.3594,796.2351 1273.6875,796.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="1287.5" y="795.636">TracingOptions</text></g><!--MD5=[11353c5cb4cb0c969324bc494fb5fb30]
class options.ignoreErrorsBackend--><g id="elem_options.ignoreErrorsBackend"><rect codeLine="1058" fill="#F1F1F1" height="32" id="options.ignoreErrorsBackend" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="170" x="1672" y="497.532"/><ellipse cx="1687" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1687.1875,520.2351 C1689.4844,520.2351 1690.9375,518.6101 1690.9375,516.6101 C1690.9375,514.782 1690.1094,513.9382 1688.9688,513.1414 L1687.9531,512.4226 C1686.8281,511.6101 1686.4063,511.3132 1686.4063,510.4539 C1686.4063,509.7664 1686.8906,509.3601 1687.4688,509.3601 C1688.2031,509.3601 1688.6875,509.7507 1689.3906,510.3914 L1690.7031,508.8132 C1689.7344,507.7976 1688.7188,507.2039 1687.4531,507.2039 C1685.3125,507.2039 1683.8594,508.7195 1683.8594,510.6414 C1683.8594,512.4382 1684.7813,513.3445 1685.875,514.0945 L1686.9688,514.8445 C1687.9063,515.4539 1688.3594,516.032 1688.3594,516.9695 C1688.3594,517.6414 1687.8906,518.0632 1687.1875,518.0632 C1686.4844,518.0632 1685.7344,517.5476 1685.0781,516.7195 L1683.5313,518.407 C1684.5625,519.5945 1685.8594,520.2351 1687.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="1701" y="519.636">ignoreErrorsBackend</text></g><!--MD5=[27c1b40bb95e8d1ba695c2e6b7756ec4]
class options.multipleControls--><g id="elem_options.multipleControls"><rect codeLine="1067" fill="#F1F1F1" height="32" id="options.multipleControls" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="143" x="65.5" y="865.532"/><ellipse cx="80.5" cy="881.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M79.2344,888.532 L81.7813,888.532 L81.7813,878.0164 L84.4063,878.0164 L84.4063,875.907 L76.5938,875.907 L76.5938,878.0164 L79.2344,878.0164 L79.2344,888.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="94.5" y="887.636">multipleControls</text></g><!--MD5=[a4ba4eb31d1317c0f6725a409ab3557d]
class options.transformerStorageFactory--><g id="elem_options.transformerStorageFactory"><rect codeLine="1069" fill="#F1F1F1" height="32" id="options.transformerStorageFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="208" x="2088" y="497.532"/><ellipse cx="2103" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2103.1875,520.2351 C2105.4844,520.2351 2106.9375,518.6101 2106.9375,516.6101 C2106.9375,514.782 2106.1094,513.9382 2104.9688,513.1414 L2103.9531,512.4226 C2102.8281,511.6101 2102.4063,511.3132 2102.4063,510.4539 C2102.4063,509.7664 2102.8906,509.3601 2103.4688,509.3601 C2104.2031,509.3601 2104.6875,509.7507 2105.3906,510.3914 L2106.7031,508.8132 C2105.7344,507.7976 2104.7188,507.2039 2103.4531,507.2039 C2101.3125,507.2039 2099.8594,508.7195 2099.8594,510.6414 C2099.8594,512.4382 2100.7813,513.3445 2101.875,514.0945 L2102.9688,514.8445 C2103.9063,515.4539 2104.3594,516.032 2104.3594,516.9695 C2104.3594,517.6414 2103.8906,518.0632 2103.1875,518.0632 C2102.4844,518.0632 2101.7344,517.5476 2101.0781,516.7195 L2099.5313,518.407 C2100.5625,519.5945 2101.8594,520.2351 2103.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="2117" y="519.636">transformerStorageFactory</text></g><!--MD5=[ad7ab5f3601ceedaa4f662fe7906b126]
class options.fontcolorbluefuncfontstringstringsyscallRawConnerror--><g id="elem_options.fontcolorbluefuncfontstringstringsyscallRawConnerror"><rect codeLine="1078" fill="#F1F1F1" height="32" id="options.fontcolorbluefuncfontstringstringsyscallRawConnerror" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="317" x="243.5" y="865.532"/><ellipse cx="258.5" cy="881.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M258.7344,888.2351 C259.8906,888.2351 260.9844,887.7507 261.8125,886.7195 L260.3906,885.2039 C260,885.7507 259.5313,886.0632 258.9688,886.0632 C257.7813,886.0632 256.7656,884.9226 256.7656,881.6882 C256.7656,878.532 257.8281,877.3601 258.8594,877.3601 C259.4531,877.3601 259.8281,877.657 260.25,878.157 L261.6719,876.5945 C261,875.8445 260.0313,875.2039 258.75,875.2039 C256.3281,875.2039 254.1875,877.1726 254.1875,881.7976 C254.1875,886.4382 256.3281,888.2351 258.7344,888.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="272.5" y="887.636">[]</text><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="282.5" y="887.636">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="245" x="312.5" y="887.636">(string, string, syscall.RawConn) error</text></g><!--MD5=[793ee2dbbd9858a5a2ff326fac482fca]
class headerrequest.RequestHeaderAuthRequestController--><g id="elem_headerrequest.RequestHeaderAuthRequestController"><rect fill="#F1F1F1" height="32" id="headerrequest.RequestHeaderAuthRequestController" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="287" x="1510.5" y="405.532"/><ellipse cx="1525.5" cy="421.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1525.7344,428.2351 C1526.8906,428.2351 1527.9844,427.7507 1528.8125,426.7195 L1527.3906,425.2039 C1527,425.7507 1526.5313,426.0632 1525.9688,426.0632 C1524.7813,426.0632 1523.7656,424.9226 1523.7656,421.6882 C1523.7656,418.532 1524.8281,417.3601 1525.8594,417.3601 C1526.4531,417.3601 1526.8281,417.657 1527.25,418.157 L1528.6719,416.5945 C1528,415.8445 1527.0313,415.2039 1525.75,415.2039 C1523.3281,415.2039 1521.1875,417.1726 1521.1875,421.7976 C1521.1875,426.4382 1523.3281,428.2351 1525.7344,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="255" x="1539.5" y="427.636">RequestHeaderAuthRequestController</text></g><!--MD5=[fbd10969a109cc9f5fb69f13c40c7497]
class audit.Backend--><g id="elem_audit.Backend"><rect fill="#F1F1F1" height="32" id="audit.Backend" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="90" x="1833" y="405.532"/><ellipse cx="1848" cy="421.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1848.2344,428.2351 C1849.3906,428.2351 1850.4844,427.7507 1851.3125,426.7195 L1849.8906,425.2039 C1849.5,425.7507 1849.0313,426.0632 1848.4688,426.0632 C1847.2813,426.0632 1846.2656,424.9226 1846.2656,421.6882 C1846.2656,418.532 1847.3281,417.3601 1848.3594,417.3601 C1848.9531,417.3601 1849.3281,417.657 1849.75,418.157 L1851.1719,416.5945 C1850.5,415.8445 1849.5313,415.2039 1848.25,415.2039 C1845.8281,415.2039 1843.6875,417.1726 1843.6875,421.7976 C1843.6875,426.4382 1845.8281,428.2351 1848.2344,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="1862" y="427.636">Backend</text></g><!--MD5=[48e6eb57df65fe240539d34b212d9fce]
class storage.StorageFactory--><g id="elem_storage.StorageFactory"><rect codeLine="1676" fill="#F1F1F1" height="32" id="storage.StorageFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="130" x="2350" y="405.532"/><ellipse cx="2365" cy="421.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2361.3594,428.032 L2368.1406,428.032 L2368.1406,425.9539 L2365.9844,425.9539 L2365.9844,417.5164 L2368.1406,417.5164 L2368.1406,415.407 L2361.3594,415.407 L2361.3594,417.5164 L2363.4531,417.5164 L2363.4531,425.9539 L2361.3594,425.9539 L2361.3594,428.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="98" x="2379" y="427.636">StorageFactory</text></g><!--MD5=[34035015c0980c69571c177a97e73db3]
class storage.APIResourceConfigSource--><g id="elem_storage.APIResourceConfigSource"><rect codeLine="1595" fill="#F1F1F1" height="32" id="storage.APIResourceConfigSource" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="203" x="2795.5" y="405.532"/><ellipse cx="2810.5" cy="421.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2806.8594,428.032 L2813.6406,428.032 L2813.6406,425.9539 L2811.4844,425.9539 L2811.4844,417.5164 L2813.6406,417.5164 L2813.6406,415.407 L2806.8594,415.407 L2806.8594,417.5164 L2808.9531,417.5164 L2808.9531,425.9539 L2806.8594,425.9539 L2806.8594,428.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="171" x="2824.5" y="427.636">APIResourceConfigSource</text></g><!--MD5=[7b57363ffb4ba9effc09e356cce00387]
class storage.Backend--><g id="elem_storage.Backend"><rect codeLine="1600" fill="#F1F1F1" height="32" id="storage.Backend" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="90" x="3036" y="405.532"/><ellipse cx="3051" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3051.1875,428.2351 C3053.4844,428.2351 3054.9375,426.6101 3054.9375,424.6101 C3054.9375,422.782 3054.1094,421.9382 3052.9688,421.1414 L3051.9531,420.4226 C3050.8281,419.6101 3050.4063,419.3132 3050.4063,418.4539 C3050.4063,417.7664 3050.8906,417.3601 3051.4688,417.3601 C3052.2031,417.3601 3052.6875,417.7507 3053.3906,418.3914 L3054.7031,416.8132 C3053.7344,415.7976 3052.7188,415.2039 3051.4531,415.2039 C3049.3125,415.2039 3047.8594,416.7195 3047.8594,418.6414 C3047.8594,420.4382 3048.7813,421.3445 3049.875,422.0945 L3050.9688,422.8445 C3051.9063,423.4539 3052.3594,424.032 3052.3594,424.9695 C3052.3594,425.6414 3051.8906,426.0632 3051.1875,426.0632 C3050.4844,426.0632 3049.7344,425.5476 3049.0781,424.7195 L3047.5313,426.407 C3048.5625,427.5945 3049.8594,428.2351 3051.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="3065" y="427.636">Backend</text></g><!--MD5=[6c969cfc81acfba25a402d94264321ca]
class storage.DefaultResourceEncodingConfig--><g id="elem_storage.DefaultResourceEncodingConfig"><rect codeLine="1605" fill="#F1F1F1" height="32" id="storage.DefaultResourceEncodingConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="247" x="2545.5" y="497.532"/><ellipse cx="2560.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2560.6875,520.2351 C2562.9844,520.2351 2564.4375,518.6101 2564.4375,516.6101 C2564.4375,514.782 2563.6094,513.9382 2562.4688,513.1414 L2561.4531,512.4226 C2560.3281,511.6101 2559.9063,511.3132 2559.9063,510.4539 C2559.9063,509.7664 2560.3906,509.3601 2560.9688,509.3601 C2561.7031,509.3601 2562.1875,509.7507 2562.8906,510.3914 L2564.2031,508.8132 C2563.2344,507.7976 2562.2188,507.2039 2560.9531,507.2039 C2558.8125,507.2039 2557.3594,508.7195 2557.3594,510.6414 C2557.3594,512.4382 2558.2813,513.3445 2559.375,514.0945 L2560.4688,514.8445 C2561.4063,515.4539 2561.8594,516.032 2561.8594,516.9695 C2561.8594,517.6414 2561.3906,518.0632 2560.6875,518.0632 C2559.9844,518.0632 2559.2344,517.5476 2558.5781,516.7195 L2557.0313,518.407 C2558.0625,519.5945 2559.3594,520.2351 2560.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="2574.5" y="519.636">DefaultResourceEncodingConfig</text></g><!--MD5=[4bbcba136b65350aa4cc6ec35480da2d]
class storage.DefaultStorageFactory--><g id="elem_storage.DefaultStorageFactory"><rect codeLine="1614" fill="#F1F1F1" height="32" id="storage.DefaultStorageFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="2331.5" y="497.532"/><ellipse cx="2346.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2346.6875,520.2351 C2348.9844,520.2351 2350.4375,518.6101 2350.4375,516.6101 C2350.4375,514.782 2349.6094,513.9382 2348.4688,513.1414 L2347.4531,512.4226 C2346.3281,511.6101 2345.9063,511.3132 2345.9063,510.4539 C2345.9063,509.7664 2346.3906,509.3601 2346.9688,509.3601 C2347.7031,509.3601 2348.1875,509.7507 2348.8906,510.3914 L2350.2031,508.8132 C2349.2344,507.7976 2348.2188,507.2039 2346.9531,507.2039 C2344.8125,507.2039 2343.3594,508.7195 2343.3594,510.6414 C2343.3594,512.4382 2344.2813,513.3445 2345.375,514.0945 L2346.4688,514.8445 C2347.4063,515.4539 2347.8594,516.032 2347.8594,516.9695 C2347.8594,517.6414 2347.3906,518.0632 2346.6875,518.0632 C2345.9844,518.0632 2345.2344,517.5476 2344.5781,516.7195 L2343.0313,518.407 C2344.0625,519.5945 2345.3594,520.2351 2346.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="2360.5" y="519.636">DefaultStorageFactory</text></g><!--MD5=[ac753c41862f2c05e34c39a528089ae3]
class storage.OverridingResourceEncoding--><g id="elem_storage.OverridingResourceEncoding"><rect codeLine="1639" fill="#F1F1F1" height="32" id="storage.OverridingResourceEncoding" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="224" x="3161" y="405.532"/><ellipse cx="3176" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3176.1875,428.2351 C3178.4844,428.2351 3179.9375,426.6101 3179.9375,424.6101 C3179.9375,422.782 3179.1094,421.9382 3177.9688,421.1414 L3176.9531,420.4226 C3175.8281,419.6101 3175.4063,419.3132 3175.4063,418.4539 C3175.4063,417.7664 3175.8906,417.3601 3176.4688,417.3601 C3177.2031,417.3601 3177.6875,417.7507 3178.3906,418.3914 L3179.7031,416.8132 C3178.7344,415.7976 3177.7188,415.2039 3176.4531,415.2039 C3174.3125,415.2039 3172.8594,416.7195 3172.8594,418.6414 C3172.8594,420.4382 3173.7813,421.3445 3174.875,422.0945 L3175.9688,422.8445 C3176.9063,423.4539 3177.3594,424.032 3177.3594,424.9695 C3177.3594,425.6414 3176.8906,426.0632 3176.1875,426.0632 C3175.4844,426.0632 3174.7344,425.5476 3174.0781,424.7195 L3172.5313,426.407 C3173.5625,427.5945 3174.8594,428.2351 3176.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="3190" y="427.636">OverridingResourceEncoding</text></g><!--MD5=[4db6fb77ba73bc32333531b3e0c5d774]
class storage.ResourceConfig--><g id="elem_storage.ResourceConfig"><rect codeLine="1644" fill="#F1F1F1" height="32" id="storage.ResourceConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="136" x="2828" y="497.532"/><ellipse cx="2843" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2843.1875,520.2351 C2845.4844,520.2351 2846.9375,518.6101 2846.9375,516.6101 C2846.9375,514.782 2846.1094,513.9382 2844.9688,513.1414 L2843.9531,512.4226 C2842.8281,511.6101 2842.4063,511.3132 2842.4063,510.4539 C2842.4063,509.7664 2842.8906,509.3601 2843.4688,509.3601 C2844.2031,509.3601 2844.6875,509.7507 2845.3906,510.3914 L2846.7031,508.8132 C2845.7344,507.7976 2844.7188,507.2039 2843.4531,507.2039 C2841.3125,507.2039 2839.8594,508.7195 2839.8594,510.6414 C2839.8594,512.4382 2840.7813,513.3445 2841.875,514.0945 L2842.9688,514.8445 C2843.9063,515.4539 2844.3594,516.032 2844.3594,516.9695 C2844.3594,517.6414 2843.8906,518.0632 2843.1875,518.0632 C2842.4844,518.0632 2841.7344,517.5476 2841.0781,516.7195 L2839.5313,518.407 C2840.5625,519.5945 2841.8594,520.2351 2843.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="2857" y="519.636">ResourceConfig</text></g><!--MD5=[b752a10d31777fb8cf8234876a3ca90e]
class storage.ResourceEncodingConfig--><g id="elem_storage.ResourceEncodingConfig"><rect codeLine="1661" fill="#F1F1F1" height="32" id="storage.ResourceEncodingConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="198" x="2562" y="405.532"/><ellipse cx="2577" cy="421.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2573.3594,428.032 L2580.1406,428.032 L2580.1406,425.9539 L2577.9844,425.9539 L2577.9844,417.5164 L2580.1406,417.5164 L2580.1406,415.407 L2573.3594,415.407 L2573.3594,417.5164 L2575.4531,417.5164 L2575.4531,425.9539 L2573.3594,425.9539 L2573.3594,428.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="166" x="2591" y="427.636">ResourceEncodingConfig</text></g><!--MD5=[fc8baa5858dd3df08941da0b68cd2eba]
class storage.StorageCodecConfig--><g id="elem_storage.StorageCodecConfig"><rect codeLine="1666" fill="#F1F1F1" height="32" id="storage.StorageCodecConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="166" x="2999" y="497.532"/><ellipse cx="3014" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3014.1875,520.2351 C3016.4844,520.2351 3017.9375,518.6101 3017.9375,516.6101 C3017.9375,514.782 3017.1094,513.9382 3015.9688,513.1414 L3014.9531,512.4226 C3013.8281,511.6101 3013.4063,511.3132 3013.4063,510.4539 C3013.4063,509.7664 3013.8906,509.3601 3014.4688,509.3601 C3015.2031,509.3601 3015.6875,509.7507 3016.3906,510.3914 L3017.7031,508.8132 C3016.7344,507.7976 3015.7188,507.2039 3014.4531,507.2039 C3012.3125,507.2039 3010.8594,508.7195 3010.8594,510.6414 C3010.8594,512.4382 3011.7813,513.3445 3012.875,514.0945 L3013.9688,514.8445 C3014.9063,515.4539 3015.3594,516.032 3015.3594,516.9695 C3015.3594,517.6414 3014.8906,518.0632 3014.1875,518.0632 C3013.4844,518.0632 3012.7344,517.5476 3012.0781,516.7195 L3010.5313,518.407 C3011.5625,519.5945 3012.8594,520.2351 3014.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="3028" y="519.636">StorageCodecConfig</text></g><!--MD5=[8f6a348baca033f8da563ddefc422972]
class storage.groupResourceOverrides--><g id="elem_storage.groupResourceOverrides"><rect codeLine="1682" fill="#F1F1F1" height="32" id="storage.groupResourceOverrides" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="195" x="3200.5" y="497.532"/><ellipse cx="3215.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3215.6875,520.2351 C3217.9844,520.2351 3219.4375,518.6101 3219.4375,516.6101 C3219.4375,514.782 3218.6094,513.9382 3217.4688,513.1414 L3216.4531,512.4226 C3215.3281,511.6101 3214.9063,511.3132 3214.9063,510.4539 C3214.9063,509.7664 3215.3906,509.3601 3215.9688,509.3601 C3216.7031,509.3601 3217.1875,509.7507 3217.8906,510.3914 L3219.2031,508.8132 C3218.2344,507.7976 3217.2188,507.2039 3215.9531,507.2039 C3213.8125,507.2039 3212.3594,508.7195 3212.3594,510.6414 C3212.3594,512.4382 3213.2813,513.3445 3214.375,514.0945 L3215.4688,514.8445 C3216.4063,515.4539 3216.8594,516.032 3216.8594,516.9695 C3216.8594,517.6414 3216.3906,518.0632 3215.6875,518.0632 C3214.9844,518.0632 3214.2344,517.5476 3213.5781,516.7195 L3212.0313,518.407 C3213.0625,519.5945 3214.3594,520.2351 3215.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="3229.5" y="519.636">groupResourceOverrides</text></g><!--MD5=[2b278d87d5de76b94b5eb7e315d7503e]
class resourceconfig.GroupVersionRegistry--><g id="elem_resourceconfig.GroupVersionRegistry"><rect codeLine="1092" fill="#F1F1F1" height="32" id="resourceconfig.GroupVersionRegistry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="175" x="11465.5" y="37.532"/><ellipse cx="11480.5" cy="53.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M11476.8594,60.032 L11483.6406,60.032 L11483.6406,57.9539 L11481.4844,57.9539 L11481.4844,49.5164 L11483.6406,49.5164 L11483.6406,47.407 L11476.8594,47.407 L11476.8594,49.5164 L11478.9531,49.5164 L11478.9531,57.9539 L11476.8594,57.9539 L11476.8594,60.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="143" x="11494.5" y="59.636">GroupVersionRegistry</text></g><!--MD5=[a1ab3426a95ff48a6e7406a118ef009a]
class server.APIGroupInfo--><g id="elem_server.APIGroupInfo"><rect codeLine="1177" fill="#F1F1F1" height="32" id="server.APIGroupInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="6523.5" y="405.532"/><ellipse cx="6538.5" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6538.6875,428.2351 C6540.9844,428.2351 6542.4375,426.6101 6542.4375,424.6101 C6542.4375,422.782 6541.6094,421.9382 6540.4688,421.1414 L6539.4531,420.4226 C6538.3281,419.6101 6537.9063,419.3132 6537.9063,418.4539 C6537.9063,417.7664 6538.3906,417.3601 6538.9688,417.3601 C6539.7031,417.3601 6540.1875,417.7507 6540.8906,418.3914 L6542.2031,416.8132 C6541.2344,415.7976 6540.2188,415.2039 6538.9531,415.2039 C6536.8125,415.2039 6535.3594,416.7195 6535.3594,418.6414 C6535.3594,420.4382 6536.2813,421.3445 6537.375,422.0945 L6538.4688,422.8445 C6539.4063,423.4539 6539.8594,424.032 6539.8594,424.9695 C6539.8594,425.6414 6539.3906,426.0632 6538.6875,426.0632 C6537.9844,426.0632 6537.2344,425.5476 6536.5781,424.7195 L6535.0313,426.407 C6536.0625,427.5945 6537.3594,428.2351 6538.6875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="6552.5" y="427.636">APIGroupInfo</text></g><!--MD5=[97119f6b585b3f3e0d312968cdd5b963]
class server.APIServerHandler--><g id="elem_server.APIServerHandler"><rect codeLine="1190" fill="#F1F1F1" height="32" id="server.APIServerHandler" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="148" x="4837" y="405.532"/><ellipse cx="4852" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4852.1875,428.2351 C4854.4844,428.2351 4855.9375,426.6101 4855.9375,424.6101 C4855.9375,422.782 4855.1094,421.9382 4853.9688,421.1414 L4852.9531,420.4226 C4851.8281,419.6101 4851.4063,419.3132 4851.4063,418.4539 C4851.4063,417.7664 4851.8906,417.3601 4852.4688,417.3601 C4853.2031,417.3601 4853.6875,417.7507 4854.3906,418.3914 L4855.7031,416.8132 C4854.7344,415.7976 4853.7188,415.2039 4852.4531,415.2039 C4850.3125,415.2039 4848.8594,416.7195 4848.8594,418.6414 C4848.8594,420.4382 4849.7813,421.3445 4850.875,422.0945 L4851.9688,422.8445 C4852.9063,423.4539 4853.3594,424.032 4853.3594,424.9695 C4853.3594,425.6414 4852.8906,426.0632 4852.1875,426.0632 C4851.4844,426.0632 4850.7344,425.5476 4850.0781,424.7195 L4848.5313,426.407 C4849.5625,427.5945 4850.8594,428.2351 4852.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="4866" y="427.636">APIServerHandler</text></g><!--MD5=[1933998b67e9bb3d3327259dcec4ddf2]
class server.AuthenticationInfo--><g id="elem_server.AuthenticationInfo"><rect codeLine="1200" fill="#F1F1F1" height="32" id="server.AuthenticationInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="157" x="6679.5" y="405.532"/><ellipse cx="6694.5" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6694.6875,428.2351 C6696.9844,428.2351 6698.4375,426.6101 6698.4375,424.6101 C6698.4375,422.782 6697.6094,421.9382 6696.4688,421.1414 L6695.4531,420.4226 C6694.3281,419.6101 6693.9063,419.3132 6693.9063,418.4539 C6693.9063,417.7664 6694.3906,417.3601 6694.9688,417.3601 C6695.7031,417.3601 6696.1875,417.7507 6696.8906,418.3914 L6698.2031,416.8132 C6697.2344,415.7976 6696.2188,415.2039 6694.9531,415.2039 C6692.8125,415.2039 6691.3594,416.7195 6691.3594,418.6414 C6691.3594,420.4382 6692.2813,421.3445 6693.375,422.0945 L6694.4688,422.8445 C6695.4063,423.4539 6695.8594,424.032 6695.8594,424.9695 C6695.8594,425.6414 6695.3906,426.0632 6694.6875,426.0632 C6693.9844,426.0632 6693.2344,425.5476 6692.5781,424.7195 L6691.0313,426.407 C6692.0625,427.5945 6693.3594,428.2351 6694.6875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="6708.5" y="427.636">AuthenticationInfo</text></g><!--MD5=[994957f47600d414fb6bcf2720a18858]
class server.AuthorizationInfo--><g id="elem_server.AuthorizationInfo"><rect codeLine="1207" fill="#F1F1F1" height="32" id="server.AuthorizationInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="148" x="6872" y="405.532"/><ellipse cx="6887" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6887.1875,428.2351 C6889.4844,428.2351 6890.9375,426.6101 6890.9375,424.6101 C6890.9375,422.782 6890.1094,421.9382 6888.9688,421.1414 L6887.9531,420.4226 C6886.8281,419.6101 6886.4063,419.3132 6886.4063,418.4539 C6886.4063,417.7664 6886.8906,417.3601 6887.4688,417.3601 C6888.2031,417.3601 6888.6875,417.7507 6889.3906,418.3914 L6890.7031,416.8132 C6889.7344,415.7976 6888.7188,415.2039 6887.4531,415.2039 C6885.3125,415.2039 6883.8594,416.7195 6883.8594,418.6414 C6883.8594,420.4382 6884.7813,421.3445 6885.875,422.0945 L6886.9688,422.8445 C6887.9063,423.4539 6888.3594,424.032 6888.3594,424.9695 C6888.3594,425.6414 6887.8906,426.0632 6887.1875,426.0632 C6886.4844,426.0632 6885.7344,425.5476 6885.0781,424.7195 L6883.5313,426.407 C6884.5625,427.5945 6885.8594,428.2351 6887.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="6901" y="427.636">AuthorizationInfo</text></g><!--MD5=[280d38ae8ffad72759dd2f5c2cac8592]
class server.CompletedConfig--><g id="elem_server.CompletedConfig"><rect codeLine="1211" fill="#F1F1F1" height="32" id="server.CompletedConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="148" x="6128" y="589.532"/><ellipse cx="6143" cy="605.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6143.1875,612.2351 C6145.4844,612.2351 6146.9375,610.6101 6146.9375,608.6101 C6146.9375,606.782 6146.1094,605.9382 6144.9688,605.1414 L6143.9531,604.4226 C6142.8281,603.6101 6142.4063,603.3132 6142.4063,602.4539 C6142.4063,601.7664 6142.8906,601.3601 6143.4688,601.3601 C6144.2031,601.3601 6144.6875,601.7507 6145.3906,602.3914 L6146.7031,600.8132 C6145.7344,599.7976 6144.7188,599.2039 6143.4531,599.2039 C6141.3125,599.2039 6139.8594,600.7195 6139.8594,602.6414 C6139.8594,604.4382 6140.7813,605.3445 6141.875,606.0945 L6142.9688,606.8445 C6143.9063,607.4539 6144.3594,608.032 6144.3594,608.9695 C6144.3594,609.6414 6143.8906,610.0632 6143.1875,610.0632 C6142.4844,610.0632 6141.7344,609.5476 6141.0781,608.7195 L6139.5313,610.407 C6140.5625,611.5945 6141.8594,612.2351 6143.1875,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="6157" y="611.636">CompletedConfig</text></g><!--MD5=[361a9733e517758f8e13a7468af01c63]
class server.Config--><g id="elem_server.Config"><rect codeLine="1213" fill="#F1F1F1" height="32" id="server.Config" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="75" x="6217.5" y="405.532"/><ellipse cx="6232.5" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6232.6875,428.2351 C6234.9844,428.2351 6236.4375,426.6101 6236.4375,424.6101 C6236.4375,422.782 6235.6094,421.9382 6234.4688,421.1414 L6233.4531,420.4226 C6232.3281,419.6101 6231.9063,419.3132 6231.9063,418.4539 C6231.9063,417.7664 6232.3906,417.3601 6232.9688,417.3601 C6233.7031,417.3601 6234.1875,417.7507 6234.8906,418.3914 L6236.2031,416.8132 C6235.2344,415.7976 6234.2188,415.2039 6232.9531,415.2039 C6230.8125,415.2039 6229.3594,416.7195 6229.3594,418.6414 C6229.3594,420.4382 6230.2813,421.3445 6231.375,422.0945 L6232.4688,422.8445 C6233.4063,423.4539 6233.8594,424.032 6233.8594,424.9695 C6233.8594,425.6414 6233.3906,426.0632 6232.6875,426.0632 C6231.9844,426.0632 6231.2344,425.5476 6230.5781,424.7195 L6229.0313,426.407 C6230.0625,427.5945 6231.3594,428.2351 6232.6875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="43" x="6246.5" y="427.636">Config</text></g><!--MD5=[812054b177b186539ccb850576532d0b]
class server.DelegationTarget--><g id="elem_server.DelegationTarget"><rect codeLine="1281" fill="#F1F1F1" height="32" id="server.DelegationTarget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="5404" y="405.532"/><ellipse cx="5419" cy="421.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5415.3594,428.032 L5422.1406,428.032 L5422.1406,425.9539 L5419.9844,425.9539 L5419.9844,417.5164 L5422.1406,417.5164 L5422.1406,415.407 L5415.3594,415.407 L5415.3594,417.5164 L5417.4531,417.5164 L5417.4531,425.9539 L5415.3594,425.9539 L5415.3594,428.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114" x="5433" y="427.636">DelegationTarget</text></g><!--MD5=[9b5712f1f2f162feb1083be75ad04958]
class server.DeprecatedInsecureServingInfo--><g id="elem_server.DeprecatedInsecureServingInfo"><rect codeLine="1293" fill="#F1F1F1" height="32" id="server.DeprecatedInsecureServingInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="241" x="7055.5" y="405.532"/><ellipse cx="7070.5" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7070.6875,428.2351 C7072.9844,428.2351 7074.4375,426.6101 7074.4375,424.6101 C7074.4375,422.782 7073.6094,421.9382 7072.4688,421.1414 L7071.4531,420.4226 C7070.3281,419.6101 7069.9063,419.3132 7069.9063,418.4539 C7069.9063,417.7664 7070.3906,417.3601 7070.9688,417.3601 C7071.7031,417.3601 7072.1875,417.7507 7072.8906,418.3914 L7074.2031,416.8132 C7073.2344,415.7976 7072.2188,415.2039 7070.9531,415.2039 C7068.8125,415.2039 7067.3594,416.7195 7067.3594,418.6414 C7067.3594,420.4382 7068.2813,421.3445 7069.375,422.0945 L7070.4688,422.8445 C7071.4063,423.4539 7071.8594,424.032 7071.8594,424.9695 C7071.8594,425.6414 7071.3906,426.0632 7070.6875,426.0632 C7069.9844,426.0632 7069.2344,425.5476 7068.5781,424.7195 L7067.0313,426.407 C7068.0625,427.5945 7069.3594,428.2351 7070.6875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="7084.5" y="427.636">DeprecatedInsecureServingInfo</text></g><!--MD5=[7a1657a8c1d7a031097e4c71ab9bc0da]
class server.GenericAPIServer--><g id="elem_server.GenericAPIServer"><rect codeLine="1301" fill="#F1F1F1" height="32" id="server.GenericAPIServer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="4959" y="497.532"/><ellipse cx="4974" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4974.1875,520.2351 C4976.4844,520.2351 4977.9375,518.6101 4977.9375,516.6101 C4977.9375,514.782 4977.1094,513.9382 4975.9688,513.1414 L4974.9531,512.4226 C4973.8281,511.6101 4973.4063,511.3132 4973.4063,510.4539 C4973.4063,509.7664 4973.8906,509.3601 4974.4688,509.3601 C4975.2031,509.3601 4975.6875,509.7507 4976.3906,510.3914 L4977.7031,508.8132 C4976.7344,507.7976 4975.7188,507.2039 4974.4531,507.2039 C4972.3125,507.2039 4970.8594,508.7195 4970.8594,510.6414 C4970.8594,512.4382 4971.7813,513.3445 4972.875,514.0945 L4973.9688,514.8445 C4974.9063,515.4539 4975.3594,516.032 4975.3594,516.9695 C4975.3594,517.6414 4974.8906,518.0632 4974.1875,518.0632 C4973.4844,518.0632 4972.7344,517.5476 4972.0781,516.7195 L4970.5313,518.407 C4971.5625,519.5945 4972.8594,520.2351 4974.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="4988" y="519.636">GenericAPIServer</text></g><!--MD5=[9ef99edb1f96fa594ab3619f19535878]
class server.InsecureSuperuser--><g id="elem_server.InsecureSuperuser"><rect codeLine="1396" fill="#F1F1F1" height="32" id="server.InsecureSuperuser" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="157" x="7331.5" y="405.532"/><ellipse cx="7346.5" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7346.6875,428.2351 C7348.9844,428.2351 7350.4375,426.6101 7350.4375,424.6101 C7350.4375,422.782 7349.6094,421.9382 7348.4688,421.1414 L7347.4531,420.4226 C7346.3281,419.6101 7345.9063,419.3132 7345.9063,418.4539 C7345.9063,417.7664 7346.3906,417.3601 7346.9688,417.3601 C7347.7031,417.3601 7348.1875,417.7507 7348.8906,418.3914 L7350.2031,416.8132 C7349.2344,415.7976 7348.2188,415.2039 7346.9531,415.2039 C7344.8125,415.2039 7343.3594,416.7195 7343.3594,418.6414 C7343.3594,420.4382 7344.2813,421.3445 7345.375,422.0945 L7346.4688,422.8445 C7347.4063,423.4539 7347.8594,424.032 7347.8594,424.9695 C7347.8594,425.6414 7347.3906,426.0632 7346.6875,426.0632 C7345.9844,426.0632 7345.2344,425.5476 7344.5781,424.7195 L7343.0313,426.407 C7344.0625,427.5945 7345.3594,428.2351 7346.6875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="7360.5" y="427.636">InsecureSuperuser</text></g><!--MD5=[99e47cd2dedf618e7618a1b6ac13392b]
class server.PostStartHookConfigEntry--><g id="elem_server.PostStartHookConfigEntry"><rect codeLine="1400" fill="#F1F1F1" height="32" id="server.PostStartHookConfigEntry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="203" x="6521.5" y="497.532"/><ellipse cx="6536.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6536.6875,520.2351 C6538.9844,520.2351 6540.4375,518.6101 6540.4375,516.6101 C6540.4375,514.782 6539.6094,513.9382 6538.4688,513.1414 L6537.4531,512.4226 C6536.3281,511.6101 6535.9063,511.3132 6535.9063,510.4539 C6535.9063,509.7664 6536.3906,509.3601 6536.9688,509.3601 C6537.7031,509.3601 6538.1875,509.7507 6538.8906,510.3914 L6540.2031,508.8132 C6539.2344,507.7976 6538.2188,507.2039 6536.9531,507.2039 C6534.8125,507.2039 6533.3594,508.7195 6533.3594,510.6414 C6533.3594,512.4382 6534.2813,513.3445 6535.375,514.0945 L6536.4688,514.8445 C6537.4063,515.4539 6537.8594,516.032 6537.8594,516.9695 C6537.8594,517.6414 6537.3906,518.0632 6536.6875,518.0632 C6535.9844,518.0632 6535.2344,517.5476 6534.5781,516.7195 L6533.0313,518.407 C6534.0625,519.5945 6535.3594,520.2351 6536.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="6550.5" y="519.636">PostStartHookConfigEntry</text></g><!--MD5=[5a8b26cdb9f2a593e03a5a261d3647b9]
class server.PostStartHookContext--><g id="elem_server.PostStartHookContext"><rect codeLine="1405" fill="#F1F1F1" height="32" id="server.PostStartHookContext" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="6759.5" y="497.532"/><ellipse cx="6774.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6774.6875,520.2351 C6776.9844,520.2351 6778.4375,518.6101 6778.4375,516.6101 C6778.4375,514.782 6777.6094,513.9382 6776.4688,513.1414 L6775.4531,512.4226 C6774.3281,511.6101 6773.9063,511.3132 6773.9063,510.4539 C6773.9063,509.7664 6774.3906,509.3601 6774.9688,509.3601 C6775.7031,509.3601 6776.1875,509.7507 6776.8906,510.3914 L6778.2031,508.8132 C6777.2344,507.7976 6776.2188,507.2039 6774.9531,507.2039 C6772.8125,507.2039 6771.3594,508.7195 6771.3594,510.6414 C6771.3594,512.4382 6772.2813,513.3445 6773.375,514.0945 L6774.4688,514.8445 C6775.4063,515.4539 6775.8594,516.032 6775.8594,516.9695 C6775.8594,517.6414 6775.3906,518.0632 6774.6875,518.0632 C6773.9844,518.0632 6773.2344,517.5476 6772.5781,516.7195 L6771.0313,518.407 C6772.0625,519.5945 6773.3594,520.2351 6774.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="6788.5" y="519.636">PostStartHookContext</text></g><!--MD5=[5ba2669d408a27b9e229c8ca7aa8f086]
class server.PostStartHookProvider--><g id="elem_server.PostStartHookProvider"><rect codeLine="1410" fill="#F1F1F1" height="32" id="server.PostStartHookProvider" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="181" x="6971.5" y="497.532"/><ellipse cx="6986.5" cy="513.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6982.8594,520.032 L6989.6406,520.032 L6989.6406,517.9539 L6987.4844,517.9539 L6987.4844,509.5164 L6989.6406,509.5164 L6989.6406,507.407 L6982.8594,507.407 L6982.8594,509.5164 L6984.9531,509.5164 L6984.9531,517.9539 L6982.8594,517.9539 L6982.8594,520.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="149" x="7000.5" y="519.636">PostStartHookProvider</text></g><!--MD5=[bc045407be8595287351d1b5b71477b4]
class server.RecommendedConfig--><g id="elem_server.RecommendedConfig"><rect codeLine="1414" fill="#F1F1F1" height="32" id="server.RecommendedConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="176" x="6310" y="497.532"/><ellipse cx="6325" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6325.1875,520.2351 C6327.4844,520.2351 6328.9375,518.6101 6328.9375,516.6101 C6328.9375,514.782 6328.1094,513.9382 6326.9688,513.1414 L6325.9531,512.4226 C6324.8281,511.6101 6324.4063,511.3132 6324.4063,510.4539 C6324.4063,509.7664 6324.8906,509.3601 6325.4688,509.3601 C6326.2031,509.3601 6326.6875,509.7507 6327.3906,510.3914 L6328.7031,508.8132 C6327.7344,507.7976 6326.7188,507.2039 6325.4531,507.2039 C6323.3125,507.2039 6321.8594,508.7195 6321.8594,510.6414 C6321.8594,512.4382 6322.7813,513.3445 6323.875,514.0945 L6324.9688,514.8445 C6325.9063,515.4539 6326.3594,516.032 6326.3594,516.9695 C6326.3594,517.6414 6325.8906,518.0632 6325.1875,518.0632 C6324.4844,518.0632 6323.7344,517.5476 6323.0781,516.7195 L6321.5313,518.407 C6322.5625,519.5945 6323.8594,520.2351 6325.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="6339" y="519.636">RecommendedConfig</text></g><!--MD5=[0fe4ade937e15394ccc8e7d5ad7eac4b]
class server.ResourceExpirationEvaluator--><g id="elem_server.ResourceExpirationEvaluator"><rect codeLine="1421" fill="#F1F1F1" height="32" id="server.ResourceExpirationEvaluator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="222" x="5960" y="405.532"/><ellipse cx="5975" cy="421.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5971.3594,428.032 L5978.1406,428.032 L5978.1406,425.9539 L5975.9844,425.9539 L5975.9844,417.5164 L5978.1406,417.5164 L5978.1406,415.407 L5971.3594,415.407 L5971.3594,417.5164 L5973.4531,417.5164 L5973.4531,425.9539 L5971.3594,425.9539 L5971.3594,428.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="190" x="5989" y="427.636">ResourceExpirationEvaluator</text></g><!--MD5=[4a07f7a3963ad290cedcd5914647bf76]
class server.SecureServingInfo--><g id="elem_server.SecureServingInfo"><rect codeLine="1426" fill="#F1F1F1" height="32" id="server.SecureServingInfo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="7188" y="497.532"/><ellipse cx="7203" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7203.1875,520.2351 C7205.4844,520.2351 7206.9375,518.6101 7206.9375,516.6101 C7206.9375,514.782 7206.1094,513.9382 7204.9688,513.1414 L7203.9531,512.4226 C7202.8281,511.6101 7202.4063,511.3132 7202.4063,510.4539 C7202.4063,509.7664 7202.8906,509.3601 7203.4688,509.3601 C7204.2031,509.3601 7204.6875,509.7507 7205.3906,510.3914 L7206.7031,508.8132 C7205.7344,507.7976 7204.7188,507.2039 7203.4531,507.2039 C7201.3125,507.2039 7199.8594,508.7195 7199.8594,510.6414 C7199.8594,512.4382 7200.7813,513.3445 7201.875,514.0945 L7202.9688,514.8445 C7203.9063,515.4539 7204.3594,516.032 7204.3594,516.9695 C7204.3594,517.6414 7203.8906,518.0632 7203.1875,518.0632 C7202.4844,518.0632 7201.7344,517.5476 7201.0781,516.7195 L7199.5313,518.407 C7200.5625,519.5945 7201.8594,520.2351 7203.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="7217" y="519.636">SecureServingInfo</text></g><!--MD5=[c32632474bdf7cc6b1ac99cfc3d6e31f]
class server.completedConfig--><g id="elem_server.completedConfig"><rect codeLine="1444" fill="#F1F1F1" height="32" id="server.completedConfig" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="6129" y="497.532"/><ellipse cx="6144" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6144.1875,520.2351 C6146.4844,520.2351 6147.9375,518.6101 6147.9375,516.6101 C6147.9375,514.782 6147.1094,513.9382 6145.9688,513.1414 L6144.9531,512.4226 C6143.8281,511.6101 6143.4063,511.3132 6143.4063,510.4539 C6143.4063,509.7664 6143.8906,509.3601 6144.4688,509.3601 C6145.2031,509.3601 6145.6875,509.7507 6146.3906,510.3914 L6147.7031,508.8132 C6146.7344,507.7976 6145.7188,507.2039 6144.4531,507.2039 C6142.3125,507.2039 6140.8594,508.7195 6140.8594,510.6414 C6140.8594,512.4382 6141.7813,513.3445 6142.875,514.0945 L6143.9688,514.8445 C6144.9063,515.4539 6145.3594,516.032 6145.3594,516.9695 C6145.3594,517.6414 6144.8906,518.0632 6144.1875,518.0632 C6143.4844,518.0632 6142.7344,517.5476 6142.0781,516.7195 L6140.5313,518.407 C6141.5625,519.5945 6142.8594,520.2351 6144.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="6158" y="519.636">completedConfig</text></g><!--MD5=[c01179c1b1d87a28c29bc636a89bd4ff]
class server.delayedLivezCheck--><g id="elem_server.delayedLivezCheck"><rect codeLine="1450" fill="#F1F1F1" height="32" id="server.delayedLivezCheck" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="6328" y="405.532"/><ellipse cx="6343" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6343.1875,428.2351 C6345.4844,428.2351 6346.9375,426.6101 6346.9375,424.6101 C6346.9375,422.782 6346.1094,421.9382 6344.9688,421.1414 L6343.9531,420.4226 C6342.8281,419.6101 6342.4063,419.3132 6342.4063,418.4539 C6342.4063,417.7664 6342.8906,417.3601 6343.4688,417.3601 C6344.2031,417.3601 6344.6875,417.7507 6345.3906,418.3914 L6346.7031,416.8132 C6345.7344,415.7976 6344.7188,415.2039 6343.4531,415.2039 C6341.3125,415.2039 6339.8594,416.7195 6339.8594,418.6414 C6339.8594,420.4382 6340.7813,421.3445 6341.875,422.0945 L6342.9688,422.8445 C6343.9063,423.4539 6344.3594,424.032 6344.3594,424.9695 C6344.3594,425.6414 6343.8906,426.0632 6343.1875,426.0632 C6342.4844,426.0632 6341.7344,425.5476 6341.0781,424.7195 L6339.5313,426.407 C6340.5625,427.5945 6341.8594,428.2351 6343.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="6357" y="427.636">delayedLivezCheck</text></g><!--MD5=[5c7b59906390f4321fa2ee1bbe24de21]
class server.director--><g id="elem_server.director"><rect codeLine="1459" fill="#F1F1F1" height="32" id="server.director" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="83" x="7375.5" y="497.532"/><ellipse cx="7390.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7390.6875,520.2351 C7392.9844,520.2351 7394.4375,518.6101 7394.4375,516.6101 C7394.4375,514.782 7393.6094,513.9382 7392.4688,513.1414 L7391.4531,512.4226 C7390.3281,511.6101 7389.9063,511.3132 7389.9063,510.4539 C7389.9063,509.7664 7390.3906,509.3601 7390.9688,509.3601 C7391.7031,509.3601 7392.1875,509.7507 7392.8906,510.3914 L7394.2031,508.8132 C7393.2344,507.7976 7392.2188,507.2039 7390.9531,507.2039 C7388.8125,507.2039 7387.3594,508.7195 7387.3594,510.6414 C7387.3594,512.4382 7388.2813,513.3445 7389.375,514.0945 L7390.4688,514.8445 C7391.4063,515.4539 7391.8594,516.032 7391.8594,516.9695 C7391.8594,517.6414 7391.3906,518.0632 7390.6875,518.0632 C7389.9844,518.0632 7389.2344,517.5476 7388.5781,516.7195 L7387.0313,518.407 C7388.0625,519.5945 7389.3594,520.2351 7390.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="7404.5" y="519.636">director</text></g><!--MD5=[1f89558b88418e8eb9b32bc60c23527e]
class server.emptyDelegate--><g id="elem_server.emptyDelegate"><rect codeLine="1467" fill="#F1F1F1" height="32" id="server.emptyDelegate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="5320.5" y="497.532"/><ellipse cx="5335.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5335.6875,520.2351 C5337.9844,520.2351 5339.4375,518.6101 5339.4375,516.6101 C5339.4375,514.782 5338.6094,513.9382 5337.4688,513.1414 L5336.4531,512.4226 C5335.3281,511.6101 5334.9063,511.3132 5334.9063,510.4539 C5334.9063,509.7664 5335.3906,509.3601 5335.9688,509.3601 C5336.7031,509.3601 5337.1875,509.7507 5337.8906,510.3914 L5339.2031,508.8132 C5338.2344,507.7976 5337.2188,507.2039 5335.9531,507.2039 C5333.8125,507.2039 5332.3594,508.7195 5332.3594,510.6414 C5332.3594,512.4382 5333.2813,513.3445 5334.375,514.0945 L5335.4688,514.8445 C5336.4063,515.4539 5336.8594,516.032 5336.8594,516.9695 C5336.8594,517.6414 5336.3906,518.0632 5335.6875,518.0632 C5334.9844,518.0632 5334.2344,517.5476 5333.5781,516.7195 L5332.0313,518.407 C5333.0625,519.5945 5334.3594,520.2351 5335.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="5349.5" y="519.636">emptyDelegate</text></g><!--MD5=[e59bb253cb8d767d6930e0f9a08f2d68]
class server.lifecycleSignal--><g id="elem_server.lifecycleSignal"><rect codeLine="1481" fill="#F1F1F1" height="32" id="server.lifecycleSignal" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="127" x="5797.5" y="405.532"/><ellipse cx="5812.5" cy="421.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5808.8594,428.032 L5815.6406,428.032 L5815.6406,425.9539 L5813.4844,425.9539 L5813.4844,417.5164 L5815.6406,417.5164 L5815.6406,415.407 L5808.8594,415.407 L5808.8594,417.5164 L5810.9531,417.5164 L5810.9531,425.9539 L5808.8594,425.9539 L5808.8594,428.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="95" x="5826.5" y="427.636">lifecycleSignal</text></g><!--MD5=[212972b00aa9d90eedcac8ae04bd70b4]
class server.lifecycleSignals--><g id="elem_server.lifecycleSignals"><rect codeLine="1487" fill="#F1F1F1" height="32" id="server.lifecycleSignals" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="6526" y="589.532"/><ellipse cx="6541" cy="605.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6541.1875,612.2351 C6543.4844,612.2351 6544.9375,610.6101 6544.9375,608.6101 C6544.9375,606.782 6544.1094,605.9382 6542.9688,605.1414 L6541.9531,604.4226 C6540.8281,603.6101 6540.4063,603.3132 6540.4063,602.4539 C6540.4063,601.7664 6540.8906,601.3601 6541.4688,601.3601 C6542.2031,601.3601 6542.6875,601.7507 6543.3906,602.3914 L6544.7031,600.8132 C6543.7344,599.7976 6542.7188,599.2039 6541.4531,599.2039 C6539.3125,599.2039 6537.8594,600.7195 6537.8594,602.6414 C6537.8594,604.4382 6538.7813,605.3445 6539.875,606.0945 L6540.9688,606.8445 C6541.9063,607.4539 6542.3594,608.032 6542.3594,608.9695 C6542.3594,609.6414 6541.8906,610.0632 6541.1875,610.0632 C6540.4844,610.0632 6539.7344,609.5476 6539.0781,608.7195 L6537.5313,610.407 C6538.5625,611.5945 6539.8594,612.2351 6541.1875,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="6555" y="611.636">lifecycleSignals</text></g><!--MD5=[0e4ccaeb91a34b57b805d01595c2b802]
class server.namedChannelWrapper--><g id="elem_server.namedChannelWrapper"><rect codeLine="1500" fill="#F1F1F1" height="32" id="server.namedChannelWrapper" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="191" x="5649.5" y="497.532"/><ellipse cx="5664.5" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5664.6875,520.2351 C5666.9844,520.2351 5668.4375,518.6101 5668.4375,516.6101 C5668.4375,514.782 5667.6094,513.9382 5666.4688,513.1414 L5665.4531,512.4226 C5664.3281,511.6101 5663.9063,511.3132 5663.9063,510.4539 C5663.9063,509.7664 5664.3906,509.3601 5664.9688,509.3601 C5665.7031,509.3601 5666.1875,509.7507 5666.8906,510.3914 L5668.2031,508.8132 C5667.2344,507.7976 5666.2188,507.2039 5664.9531,507.2039 C5662.8125,507.2039 5661.3594,508.7195 5661.3594,510.6414 C5661.3594,512.4382 5662.2813,513.3445 5663.375,514.0945 L5664.4688,514.8445 C5665.4063,515.4539 5665.8594,516.032 5665.8594,516.9695 C5665.8594,517.6414 5665.3906,518.0632 5664.6875,518.0632 C5663.9844,518.0632 5663.2344,517.5476 5662.5781,516.7195 L5661.0313,518.407 C5662.0625,519.5945 5663.3594,520.2351 5664.6875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="5678.5" y="519.636">namedChannelWrapper</text></g><!--MD5=[ff70dd82c7c0193c452c65ae0154c02d]
class server.postStartHookEntry--><g id="elem_server.postStartHookEntry"><rect codeLine="1510" fill="#F1F1F1" height="32" id="server.postStartHookEntry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="6695" y="589.532"/><ellipse cx="6710" cy="605.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6710.1875,612.2351 C6712.4844,612.2351 6713.9375,610.6101 6713.9375,608.6101 C6713.9375,606.782 6713.1094,605.9382 6711.9688,605.1414 L6710.9531,604.4226 C6709.8281,603.6101 6709.4063,603.3132 6709.4063,602.4539 C6709.4063,601.7664 6709.8906,601.3601 6710.4688,601.3601 C6711.2031,601.3601 6711.6875,601.7507 6712.3906,602.3914 L6713.7031,600.8132 C6712.7344,599.7976 6711.7188,599.2039 6710.4531,599.2039 C6708.3125,599.2039 6706.8594,600.7195 6706.8594,602.6414 C6706.8594,604.4382 6707.7813,605.3445 6708.875,606.0945 L6709.9688,606.8445 C6710.9063,607.4539 6711.3594,608.032 6711.3594,608.9695 C6711.3594,609.6414 6710.8906,610.0632 6710.1875,610.0632 C6709.4844,610.0632 6708.7344,609.5476 6708.0781,608.7195 L6706.5313,610.407 C6707.5625,611.5945 6708.8594,612.2351 6710.1875,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="6724" y="611.636">postStartHookEntry</text></g><!--MD5=[55ddbc3d257bb9a276be70e6b6d6f5d5]
class server.postStartHookHealthz--><g id="elem_server.postStartHookHealthz"><rect codeLine="1516" fill="#F1F1F1" height="32" id="server.postStartHookHealthz" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="5585.5" y="405.532"/><ellipse cx="5600.5" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5600.6875,428.2351 C5602.9844,428.2351 5604.4375,426.6101 5604.4375,424.6101 C5604.4375,422.782 5603.6094,421.9382 5602.4688,421.1414 L5601.4531,420.4226 C5600.3281,419.6101 5599.9063,419.3132 5599.9063,418.4539 C5599.9063,417.7664 5600.3906,417.3601 5600.9688,417.3601 C5601.7031,417.3601 5602.1875,417.7507 5602.8906,418.3914 L5604.2031,416.8132 C5603.2344,415.7976 5602.2188,415.2039 5600.9531,415.2039 C5598.8125,415.2039 5597.3594,416.7195 5597.3594,418.6414 C5597.3594,420.4382 5598.2813,421.3445 5599.375,422.0945 L5600.4688,422.8445 C5601.4063,423.4539 5601.8594,424.032 5601.8594,424.9695 C5601.8594,425.6414 5601.3906,426.0632 5600.6875,426.0632 C5599.9844,426.0632 5599.2344,425.5476 5598.5781,424.7195 L5597.0313,426.407 C5598.0625,427.5945 5599.3594,428.2351 5600.6875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="5614.5" y="427.636">postStartHookHealthz</text></g><!--MD5=[eaad19e87caeefac334b5e278d04696b]
class server.preShutdownHookEntry--><g id="elem_server.preShutdownHookEntry"><rect codeLine="1524" fill="#F1F1F1" height="32" id="server.preShutdownHookEntry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="190" x="6890" y="589.532"/><ellipse cx="6905" cy="605.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6905.1875,612.2351 C6907.4844,612.2351 6908.9375,610.6101 6908.9375,608.6101 C6908.9375,606.782 6908.1094,605.9382 6906.9688,605.1414 L6905.9531,604.4226 C6904.8281,603.6101 6904.4063,603.3132 6904.4063,602.4539 C6904.4063,601.7664 6904.8906,601.3601 6905.4688,601.3601 C6906.2031,601.3601 6906.6875,601.7507 6907.3906,602.3914 L6908.7031,600.8132 C6907.7344,599.7976 6906.7188,599.2039 6905.4531,599.2039 C6903.3125,599.2039 6901.8594,600.7195 6901.8594,602.6414 C6901.8594,604.4382 6902.7813,605.3445 6903.875,606.0945 L6904.9688,606.8445 C6905.9063,607.4539 6906.3594,608.032 6906.3594,608.9695 C6906.3594,609.6414 6905.8906,610.0632 6905.1875,610.0632 C6904.4844,610.0632 6903.7344,609.5476 6903.0781,608.7195 L6901.5313,610.407 C6902.5625,611.5945 6903.8594,612.2351 6905.1875,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="6919" y="611.636">preShutdownHookEntry</text></g><!--MD5=[e5e2c0915ac6336c4453e4b605855cdf]
class server.preparedGenericAPIServer--><g id="elem_server.preparedGenericAPIServer"><rect codeLine="1528" fill="#F1F1F1" height="32" id="server.preparedGenericAPIServer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="207" x="4928.5" y="589.532"/><ellipse cx="4943.5" cy="605.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4943.6875,612.2351 C4945.9844,612.2351 4947.4375,610.6101 4947.4375,608.6101 C4947.4375,606.782 4946.6094,605.9382 4945.4688,605.1414 L4944.4531,604.4226 C4943.3281,603.6101 4942.9063,603.3132 4942.9063,602.4539 C4942.9063,601.7664 4943.3906,601.3601 4943.9688,601.3601 C4944.7031,601.3601 4945.1875,601.7507 4945.8906,602.3914 L4947.2031,600.8132 C4946.2344,599.7976 4945.2188,599.2039 4943.9531,599.2039 C4941.8125,599.2039 4940.3594,600.7195 4940.3594,602.6414 C4940.3594,604.4382 4941.2813,605.3445 4942.375,606.0945 L4943.4688,606.8445 C4944.4063,607.4539 4944.8594,608.032 4944.8594,608.9695 C4944.8594,609.6414 4944.3906,610.0632 4943.6875,610.0632 C4942.9844,610.0632 4942.2344,609.5476 4941.5781,608.7195 L4940.0313,610.407 C4941.0625,611.5945 4942.3594,612.2351 4943.6875,612.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="4957.5" y="611.636">preparedGenericAPIServer</text></g><!--MD5=[78104542af1ac1a49c1b24fad780a607]
class server.removedInterface--><g id="elem_server.removedInterface"><rect codeLine="1533" fill="#F1F1F1" height="32" id="server.removedInterface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="149" x="7115.5" y="589.532"/><ellipse cx="7130.5" cy="605.532" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7126.8594,612.032 L7133.6406,612.032 L7133.6406,609.9539 L7131.4844,609.9539 L7131.4844,601.5164 L7133.6406,601.5164 L7133.6406,599.407 L7126.8594,599.407 L7126.8594,601.5164 L7128.9531,601.5164 L7128.9531,609.9539 L7126.8594,609.9539 L7126.8594,612.032 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="117" x="7144.5" y="611.636">removedInterface</text></g><!--MD5=[cfef1bebca22e314f5f177fa9e4f92ef]
class server.resourceExpirationEvaluator--><g id="elem_server.resourceExpirationEvaluator"><rect codeLine="1537" fill="#F1F1F1" height="32" id="server.resourceExpirationEvaluator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="218" x="5876" y="497.532"/><ellipse cx="5891" cy="513.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5891.1875,520.2351 C5893.4844,520.2351 5894.9375,518.6101 5894.9375,516.6101 C5894.9375,514.782 5894.1094,513.9382 5892.9688,513.1414 L5891.9531,512.4226 C5890.8281,511.6101 5890.4063,511.3132 5890.4063,510.4539 C5890.4063,509.7664 5890.8906,509.3601 5891.4688,509.3601 C5892.2031,509.3601 5892.6875,509.7507 5893.3906,510.3914 L5894.7031,508.8132 C5893.7344,507.7976 5892.7188,507.2039 5891.4531,507.2039 C5889.3125,507.2039 5887.8594,508.7195 5887.8594,510.6414 C5887.8594,512.4382 5888.7813,513.3445 5889.875,514.0945 L5890.9688,514.8445 C5891.9063,515.4539 5892.3594,516.032 5892.3594,516.9695 C5892.3594,517.6414 5891.8906,518.0632 5891.1875,518.0632 C5890.4844,518.0632 5889.7344,517.5476 5889.0781,516.7195 L5887.5313,518.407 C5888.5625,519.5945 5889.8594,520.2351 5891.1875,520.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="5905" y="519.636">resourceExpirationEvaluator</text></g><!--MD5=[e14adbf1a2508e93b016e9929d4f26af]
class server.HandlerChainBuilderFn--><g id="elem_server.HandlerChainBuilderFn"><rect codeLine="1550" fill="#F1F1F1" height="32" id="server.HandlerChainBuilderFn" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="189" x="7299.5" y="589.532"/><ellipse cx="7314.5" cy="605.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7313.2344,612.532 L7315.7813,612.532 L7315.7813,602.0164 L7318.4063,602.0164 L7318.4063,599.907 L7310.5938,599.907 L7310.5938,602.0164 L7313.2344,602.0164 L7313.2344,612.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="7328.5" y="611.636">HandlerChainBuilderFn</text></g><!--MD5=[d8e24960e16523c97e4d2d75a6a5a954]
class server.PostStartHookFunc--><g id="elem_server.PostStartHookFunc"><rect codeLine="1552" fill="#F1F1F1" height="32" id="server.PostStartHookFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="159" x="6513.5" y="681.532"/><ellipse cx="6528.5" cy="697.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6527.2344,704.532 L6529.7813,704.532 L6529.7813,694.0164 L6532.4063,694.0164 L6532.4063,691.907 L6524.5938,691.907 L6524.5938,694.0164 L6527.2344,694.0164 L6527.2344,704.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="6542.5" y="703.636">PostStartHookFunc</text></g><!--MD5=[de9fbe75e0bea091380a59877e08c87f]
class server.PreShutdownHookFunc--><g id="elem_server.PreShutdownHookFunc"><rect codeLine="1554" fill="#F1F1F1" height="32" id="server.PreShutdownHookFunc" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="189" x="6707.5" y="681.532"/><ellipse cx="6722.5" cy="697.532" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6721.2344,704.532 L6723.7813,704.532 L6723.7813,694.0164 L6726.4063,694.0164 L6726.4063,691.907 L6718.5938,691.907 L6718.5938,694.0164 L6721.2344,694.0164 L6721.2344,704.532 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="6736.5" y="703.636">PreShutdownHookFunc</text></g><!--MD5=[df32dcb08994638c1138313f66f6bcdf]
class server.shutdownCheck--><g id="elem_server.shutdownCheck"><rect codeLine="1556" fill="#F1F1F1" height="32" id="server.shutdownCheck" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="140" x="5229" y="405.532"/><ellipse cx="5244" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5244.1875,428.2351 C5246.4844,428.2351 5247.9375,426.6101 5247.9375,424.6101 C5247.9375,422.782 5247.1094,421.9382 5245.9688,421.1414 L5244.9531,420.4226 C5243.8281,419.6101 5243.4063,419.3132 5243.4063,418.4539 C5243.4063,417.7664 5243.8906,417.3601 5244.4688,417.3601 C5245.2031,417.3601 5245.6875,417.7507 5246.3906,418.3914 L5247.7031,416.8132 C5246.7344,415.7976 5245.7188,415.2039 5244.4531,415.2039 C5242.3125,415.2039 5240.8594,416.7195 5240.8594,418.6414 C5240.8594,420.4382 5241.7813,421.3445 5242.875,422.0945 L5243.9688,422.8445 C5244.9063,423.4539 5245.3594,424.032 5245.3594,424.9695 C5245.3594,425.6414 5244.8906,426.0632 5244.1875,426.0632 C5243.4844,426.0632 5242.7344,425.5476 5242.0781,424.7195 L5240.5313,426.407 C5241.5625,427.5945 5242.8594,428.2351 5244.1875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="5258" y="427.636">shutdownCheck</text></g><!--MD5=[17408c44a2e4918b3c96f2209f1046e6]
class server.tcpKeepAliveListener--><g id="elem_server.tcpKeepAliveListener"><rect codeLine="1563" fill="#F1F1F1" height="32" id="server.tcpKeepAliveListener" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="173" x="5020.5" y="405.532"/><ellipse cx="5035.5" cy="421.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5035.6875,428.2351 C5037.9844,428.2351 5039.4375,426.6101 5039.4375,424.6101 C5039.4375,422.782 5038.6094,421.9382 5037.4688,421.1414 L5036.4531,420.4226 C5035.3281,419.6101 5034.9063,419.3132 5034.9063,418.4539 C5034.9063,417.7664 5035.3906,417.3601 5035.9688,417.3601 C5036.7031,417.3601 5037.1875,417.7507 5037.8906,418.3914 L5039.2031,416.8132 C5038.2344,415.7976 5037.2188,415.2039 5035.9531,415.2039 C5033.8125,415.2039 5032.3594,416.7195 5032.3594,418.6414 C5032.3594,420.4382 5033.2813,421.3445 5034.375,422.0945 L5035.4688,422.8445 C5036.4063,423.4539 5036.8594,424.032 5036.8594,424.9695 C5036.8594,425.6414 5036.3906,426.0632 5035.6875,426.0632 C5034.9844,426.0632 5034.2344,425.5476 5033.5781,424.7195 L5032.0313,426.407 C5033.0625,427.5945 5034.3594,428.2351 5035.6875,428.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="5049.5" y="427.636">tcpKeepAliveListener</text></g><!--MD5=[7c3aba9f5d45b8f5584882087104081b]
class server.tlsHandshakeErrorWriter--><g id="elem_server.tlsHandshakeErrorWriter"><rect codeLine="1567" fill="#F1F1F1" height="32" id="server.tlsHandshakeErrorWriter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="6932" y="681.532"/><ellipse cx="6947" cy="697.532" fill="#7FFFD4" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6947.1875,704.2351 C6949.4844,704.2351 6950.9375,702.6101 6950.9375,700.6101 C6950.9375,698.782 6950.1094,697.9382 6948.9688,697.1414 L6947.9531,696.4226 C6946.8281,695.6101 6946.4063,695.3132 6946.4063,694.4539 C6946.4063,693.7664 6946.8906,693.3601 6947.4688,693.3601 C6948.2031,693.3601 6948.6875,693.7507 6949.3906,694.3914 L6950.7031,692.8132 C6949.7344,691.7976 6948.7188,691.2039 6947.4531,691.2039 C6945.3125,691.2039 6943.8594,692.7195 6943.8594,694.6414 C6943.8594,696.4382 6944.7813,697.3445 6945.875,698.0945 L6946.9688,698.8445 C6947.9063,699.4539 6948.3594,700.032 6948.3594,700.9695 C6948.3594,701.6414 6947.8906,702.0632 6947.1875,702.0632 C6946.4844,702.0632 6945.7344,701.5476 6945.0781,700.7195 L6943.5313,702.407 C6944.5625,703.5945 6945.8594,704.2351 6947.1875,704.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="6961" y="703.636">tlsHandshakeErrorWriter</text></g><!--MD5=[361fd2891c6ab370523beb4a750f9030]
class server.fontcolorbluefuncfonthttpHandlerhttpHandler--><g id="elem_server.fontcolorbluefuncfonthttpHandlerhttpHandler"><rect codeLine="1573" fill="#F1F1F1" height="32" id="server.fontcolorbluefuncfonthttpHandlerhttpHandler" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="245" x="7161.5" y="681.532"/><ellipse cx="7176.5" cy="697.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7176.7344,704.2351 C7177.8906,704.2351 7178.9844,703.7507 7179.8125,702.7195 L7178.3906,701.2039 C7178,701.7507 7177.5313,702.0632 7176.9688,702.0632 C7175.7813,702.0632 7174.7656,700.9226 7174.7656,697.6882 C7174.7656,694.532 7175.8281,693.3601 7176.8594,693.3601 C7177.4531,693.3601 7177.8281,693.657 7178.25,694.157 L7179.6719,692.5945 C7179,691.8445 7178.0313,691.2039 7176.75,691.2039 C7174.3281,691.2039 7172.1875,693.1726 7172.1875,697.7976 C7172.1875,702.4382 7174.3281,704.2351 7176.7344,704.2351 Z " fill="#000000"/><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="7190.5" y="703.636">func</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="7220.5" y="703.636">(http.Handler) http.Handler</text></g><!--MD5=[ee15cd28a3e9ace39d126dd05607779f]
class net.Listener--><g id="elem_net.Listener"><rect fill="#F1F1F1" height="32" id="net.Listener" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="86" x="5871" y="313.532"/><ellipse cx="5886" cy="329.532" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5886.2344,336.2351 C5887.3906,336.2351 5888.4844,335.7507 5889.3125,334.7195 L5887.8906,333.2039 C5887.5,333.7507 5887.0313,334.0632 5886.4688,334.0632 C5885.2813,334.0632 5884.2656,332.9226 5884.2656,329.6882 C5884.2656,326.532 5885.3281,325.3601 5886.3594,325.3601 C5886.9531,325.3601 5887.3281,325.657 5887.75,326.157 L5889.1719,324.5945 C5888.5,323.8445 5887.5313,323.2039 5886.25,323.2039 C5883.8281,323.2039 5881.6875,325.1726 5881.6875,329.7976 C5881.6875,334.4382 5883.8281,336.2351 5886.2344,336.2351 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="5900" y="335.636">Listener</text></g><!--MD5=[83c221d16c43d1be13e53de6a161e264]
reverse link dynamiccertificates.Notifier to dynamiccertificates.CAContentProvider--><g id="link_dynamiccertificates.Notifier_dynamiccertificates.CAContentProvider"><path codeLine="219" d="M5140.8237,75.8156 C5110.2623,92.3548 5069.2968,114.5243 5041.8428,129.3818 " fill="none" id="dynamiccertificates.Notifier-backto-dynamiccertificates.CAContentProvider" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5152.3883,69.5572,5145.2077,68.895,5141.8347,75.2686,5149.0153,75.9308,5152.3883,69.5572" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[47f26dc548c13edca0ca7b8bb7838020]
reverse link dynamiccertificates.Notifier to dynamiccertificates.CertKeyContentProvider--><g id="link_dynamiccertificates.Notifier_dynamiccertificates.CertKeyContentProvider"><path codeLine="220" d="M5226.6416,75.3779 C5260.5305,91.9618 5306.3678,114.3928 5336.9974,129.3818 " fill="none" id="dynamiccertificates.Notifier-backto-dynamiccertificates.CertKeyContentProvider" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5214.7471,69.5572,5218.3782,75.7874,5225.5257,74.8319,5221.8946,68.6017,5214.7471,69.5572" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e66be92dee0c081df9d35a14dfc19b13]
reverse link dynamiccertificates.DynamicCertKeyPairContent to dynamiccertificates.DynamicFileSNIContent--><g id="link_dynamiccertificates.DynamicCertKeyPairContent_dynamiccertificates.DynamicFileSNIContent"><path codeLine="221" d="M5404.2202,253.1712 C5501.3804,265.5632 5621.4638,281.0395 5627,282.532 C5654.8935,290.0518 5685.0082,302.9835 5706.9782,313.381 " fill="none" id="dynamiccertificates.DynamicCertKeyPairContent-backto-dynamiccertificates.DynamicFileSNIContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5391.2843,251.5223,5396.7303,256.2489,5403.188,253.0398,5397.742,248.3132,5391.2843,251.5223" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[48418c56ca806241d72952a0e820f03f]
reverse link dynamiccertificates.CertKeyContentProvider to dynamiccertificates.SNICertKeyContentProvider--><g id="link_dynamiccertificates.CertKeyContentProvider_dynamiccertificates.SNICertKeyContentProvider"><path codeLine="222" d="M5478.4182,161.005 C5521.6249,168.2994 5571.5565,178.1547 5616,190.532 C5645.8298,198.8395 5678.5434,211.3913 5702.8764,221.4344 " fill="none" id="dynamiccertificates.CertKeyContentProvider-backto-dynamiccertificates.SNICertKeyContentProvider" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5465.5356,158.8717,5470.8014,163.7982,5477.3744,160.8323,5472.1085,155.9057,5465.5356,158.8717" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[938fdd9fa1b5bb978dd5022b20f61a6d]
reverse link dynamiccertificates.Notifier to dynamiccertificates.SNICertKeyContentProvider--><g id="link_dynamiccertificates.Notifier_dynamiccertificates.SNICertKeyContentProvider"><path codeLine="223" d="M5235.6596,61.6286 C5300.1827,72.4205 5411.0301,94.3541 5501,129.532 C5528.0578,140.1115 5531.8849,148.802 5558,161.532 C5604.9385,184.4125 5660.5391,207.0026 5697.825,221.5288 " fill="none" id="dynamiccertificates.Notifier-backto-dynamiccertificates.SNICertKeyContentProvider" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5222.6184,59.4941,5227.8935,64.4107,5234.4608,61.4324,5229.1857,56.5158,5222.6184,59.4941" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ee269d6eacbd77a476a69b1ce9e321a4]
reverse link dynamiccertificates.certKeyContent to dynamiccertificates.sniCertKeyContent--><g id="link_dynamiccertificates.certKeyContent_dynamiccertificates.sniCertKeyContent"><path codeLine="224" d="M4320,82.6694 C4320,98.1116 4320,116.4966 4320,129.3818 " fill="none" id="dynamiccertificates.certKeyContent-backto-dynamiccertificates.sniCertKeyContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4320,69.5572,4316,75.5572,4320,81.5572,4324,75.5572,4320,69.5572" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c1fadcd94dd7ec02ef60859d5e1fb284]
reverse link dynamiccertificates.staticCertKeyContent to dynamiccertificates.staticSNICertKeyContent--><g id="link_dynamiccertificates.staticCertKeyContent_dynamiccertificates.staticSNICertKeyContent"><path codeLine="225" d="M5512,266.6694 C5512,282.1116 5512,300.4966 5512,313.3818 " fill="none" id="dynamiccertificates.staticCertKeyContent-backto-dynamiccertificates.staticSNICertKeyContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5512,253.5572,5508,259.5572,5512,265.5572,5516,259.5572,5512,253.5572" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1a32acbe78ad242ba7e0fc390fc8f7c1]
reverse link dynamiccertificates.CAContentProvider to dynamiccertificates.ConfigMapCAController--><g id="link_dynamiccertificates.CAContentProvider_dynamiccertificates.ConfigMapCAController"><path codeLine="227" d="M4962.4391,170.7232 C4930.6502,186.8811 4890.3228,207.379 4862.7738,221.3818 " fill="none" id="dynamiccertificates.CAContentProvider-backto-dynamiccertificates.ConfigMapCAController" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4959.4713,164.3793,4980.4722,161.5572,4965.815,176.8597,4959.4713,164.3793" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[edecef8785c34ce54d084ca312bf5fec]
reverse link dynamiccertificates.ControllerRunner to dynamiccertificates.ConfigMapCAController--><g id="link_dynamiccertificates.ControllerRunner_dynamiccertificates.ConfigMapCAController"><path codeLine="228" d="M4827.3742,181.9368 C4828.266,195.6108 4829.235,210.4688 4829.9467,221.3818 " fill="none" id="dynamiccertificates.ControllerRunner-backto-dynamiccertificates.ConfigMapCAController" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4820.3616,181.9704,4826.0451,161.5572,4834.332,181.0592,4820.3616,181.9704" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[70670ea969f5258d287de58dddf47dbb]
reverse link dynamiccertificates.Notifier to dynamiccertificates.ConfigMapCAController--><g id="link_dynamiccertificates.Notifier_dynamiccertificates.ConfigMapCAController"><path codeLine="229" d="M5160.2226,86.4051 C5139.4109,117.7204 5110.9161,160.2925 5109,161.532 C5045.7473,202.4485 5014.268,169.2622 4942,190.532 C4914.697,198.5678 4885.0763,211.3302 4863.3061,221.5293 " fill="none" id="dynamiccertificates.Notifier-backto-dynamiccertificates.ConfigMapCAController" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5154.439,82.4607,5171.3293,69.6655,5166.1047,90.2009,5154.439,82.4607" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e9340e08d9ba96cbb9daf726e1d9e1f0]
reverse link dynamiccertificates.CertKeyContentProvider to dynamiccertificates.DynamicCertKeyPairContent--><g id="link_dynamiccertificates.CertKeyContentProvider_dynamiccertificates.DynamicCertKeyPairContent"><path codeLine="230" d="M5340.4331,176.0956 C5325.7901,191.2321 5308.7071,208.891 5296.6236,221.3818 " fill="none" id="dynamiccertificates.CertKeyContentProvider-backto-dynamiccertificates.DynamicCertKeyPairContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5335.5604,171.0647,5354.4974,161.5572,5345.6226,180.7988,5335.5604,171.0647" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[72ef6fc7b248bce8aa5aec008c3140d7]
reverse link dynamiccertificates.ControllerRunner to dynamiccertificates.DynamicCertKeyPairContent--><g id="link_dynamiccertificates.ControllerRunner_dynamiccertificates.DynamicCertKeyPairContent"><path codeLine="231" d="M4918.3012,161.7451 C5008.0337,175.3275 5033.9156,172.9721 5116,190.532 C5155.1749,198.9125 5198.7314,211.4605 5231.2517,221.4837 " fill="none" id="dynamiccertificates.ControllerRunner-backto-dynamiccertificates.DynamicCertKeyPairContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4917.1534,168.6508,4898.4745,158.6458,4919.3157,154.8188,4917.1534,168.6508" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2220d340b84a365fedd13b435ff9ae38]
reverse link dynamiccertificates.Notifier to dynamiccertificates.DynamicCertKeyPairContent--><g id="link_dynamiccertificates.Notifier_dynamiccertificates.DynamicCertKeyPairContent"><path codeLine="232" d="M5200.1754,87.3125 C5221.5896,127.1127 5256.2807,191.589 5272.337,221.4311 " fill="none" id="dynamiccertificates.Notifier-backto-dynamiccertificates.DynamicCertKeyPairContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5193.9244,90.4681,5190.6124,69.5389,5206.2531,83.8347,5193.9244,90.4681" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[30dde61d5186487518efdaa40424106d]
reverse link dynamiccertificates.CAContentProvider to dynamiccertificates.DynamicFileCAContent--><g id="link_dynamiccertificates.CAContentProvider_dynamiccertificates.DynamicFileCAContent"><path codeLine="233" d="M4913.0359,161.8124 C4825.9281,174.1979 4799.6656,168.4143 4721,190.532 C4693.6014,198.2354 4663.9867,211.0186 4642.2431,221.3102 " fill="none" id="dynamiccertificates.CAContentProvider-backto-dynamiccertificates.DynamicFileCAContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4912.0943,154.8754,4932.9124,158.8259,4914.1746,168.72,4912.0943,154.8754" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7eab39dd0150d0250d6f0adf56d7d430]
reverse link dynamiccertificates.ControllerRunner to dynamiccertificates.DynamicFileCAContent--><g id="link_dynamiccertificates.ControllerRunner_dynamiccertificates.DynamicFileCAContent"><path codeLine="234" d="M4769.0337,169.4804 C4730.853,185.8181 4681.3113,207.0174 4647.7424,221.3818 " fill="none" id="dynamiccertificates.ControllerRunner-backto-dynamiccertificates.DynamicFileCAContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4766.4087,162.9897,4787.5499,161.5572,4771.9164,175.8609,4766.4087,162.9897" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[82dd2906fc6f2d3dcecd6c64c144e626]
reverse link dynamiccertificates.Notifier to dynamiccertificates.DynamicFileCAContent--><g id="link_dynamiccertificates.Notifier_dynamiccertificates.DynamicFileCAContent"><path codeLine="235" d="M5121.4753,59.7456 C5015.8359,71.2603 4802.6008,97.6665 4735,129.532 C4710.6147,141.0267 4654.632,193.8837 4626.6117,221.1529 " fill="none" id="dynamiccertificates.Notifier-backto-dynamiccertificates.DynamicFileCAContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5120.7623,52.782,5141.394,57.6124,5122.2532,66.7024,5120.7623,52.782" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c325d03dc26783571a819a1bd7dcd82b]
reverse link dynamiccertificates.SNICertKeyContentProvider to dynamiccertificates.DynamicFileSNIContent--><g id="link_dynamiccertificates.SNICertKeyContentProvider_dynamiccertificates.DynamicFileSNIContent"><path codeLine="236" d="M5739.6043,273.9368 C5739.4557,287.6108 5739.2942,302.4688 5739.1755,313.3818 " fill="none" id="dynamiccertificates.SNICertKeyContentProvider-backto-dynamiccertificates.DynamicFileSNIContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5732.6088,273.4799,5739.8258,253.5572,5746.6079,273.6321,5732.6088,273.4799" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[27544951fe2b675fb1d30d60d524e46e]
reverse link dynamiccertificates.Listener to dynamiccertificates.DynamicServingCertificateController--><g id="link_dynamiccertificates.Listener_dynamiccertificates.DynamicServingCertificateController"><path codeLine="237" d="M5650.8992,84.0956 C5665.7066,99.2321 5682.9816,116.891 5695.2009,129.3818 " fill="none" id="dynamiccertificates.Listener-backto-dynamiccertificates.DynamicServingCertificateController" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5645.6589,88.749,5636.6768,69.5572,5655.6666,78.9588,5645.6589,88.749" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[160103848703676560f3b518e0487e1f]
reverse link dynamiccertificates.CAContentProvider to dynamiccertificates.staticCAContent--><g id="link_dynamiccertificates.CAContentProvider_dynamiccertificates.staticCAContent"><path codeLine="238" d="M5018.6357,181.443 C5021.1874,195.2522 5023.9749,210.3373 5026.0157,221.3818 " fill="none" id="dynamiccertificates.CAContentProvider-backto-dynamiccertificates.staticCAContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5011.7119,182.4962,5014.9612,161.5572,5025.4789,179.9523,5011.7119,182.4962" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[237d22a7d992bb9e6315520b4c83b1b0]
reverse link dynamiccertificates.Notifier to dynamiccertificates.staticCAContent--><g id="link_dynamiccertificates.Notifier_dynamiccertificates.staticCAContent"><path codeLine="239" d="M5172.3179,89.1477 C5164.9627,111.5848 5153.1527,140.2307 5136,161.532 C5115.4215,187.0876 5084.1384,207.94 5060.7045,221.2944 " fill="none" id="dynamiccertificates.Notifier-backto-dynamiccertificates.staticCAContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5165.7122,86.8032,5178.1276,69.6317,5179.1302,90.7976,5165.7122,86.8032" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[aa2fbe4b07e1eee6778ab58a8f8c2f49]
reverse link dynamiccertificates.CertKeyContentProvider to dynamiccertificates.staticCertKeyContent--><g id="link_dynamiccertificates.CertKeyContentProvider_dynamiccertificates.staticCertKeyContent"><path codeLine="240" d="M5411.7195,172.5616 C5436.1838,188.4116 5466.2712,207.9049 5487.0725,221.3818 " fill="none" id="dynamiccertificates.CertKeyContentProvider-backto-dynamiccertificates.staticCertKeyContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5407.7134,178.3068,5394.7345,161.5572,5415.3258,166.5573,5407.7134,178.3068" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3526582af82eadce8b1cbeed730d75e0]
reverse link dynamiccertificates.Notifier to dynamiccertificates.staticCertKeyContent--><g id="link_dynamiccertificates.Notifier_dynamiccertificates.staticCertKeyContent"><path codeLine="241" d="M5242.6869,61.5212 C5320.4703,72.9624 5449.3236,96.3573 5483,129.532 C5508.0333,154.1924 5512.1648,197.9699 5512.437,221.5042 " fill="none" id="dynamiccertificates.Notifier-backto-dynamiccertificates.staticCertKeyContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5241.5079,68.424,5222.693,58.6773,5243.4794,54.5635,5241.5079,68.424" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8a5489088f91ce84e6de5310060da35b]
reverse link dynamiccertificates.Notifier to dynamiccertificates.staticSNICertKeyContent--><g id="link_dynamiccertificates.Notifier_dynamiccertificates.staticSNICertKeyContent"><path codeLine="242" d="M5172.5872,89.4647 C5165.9005,116.9227 5157.5101,155.8279 5154,190.532 C5151.1823,218.3899 5136.3763,231.7742 5154,253.532 C5186.2935,293.4008 5320.3198,313.2131 5414.8684,322.4075 " fill="none" id="dynamiccertificates.Notifier-backto-dynamiccertificates.staticSNICertKeyContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5165.8666,87.4884,5177.5587,69.8165,5179.4389,90.9225,5165.8666,87.4884" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3c54c45d2d8bb2d9211cccb68b94b111]
reverse link dynamiccertificates.SNICertKeyContentProvider to dynamiccertificates.staticSNICertKeyContent--><g id="link_dynamiccertificates.SNICertKeyContentProvider_dynamiccertificates.staticSNICertKeyContent"><path codeLine="243" d="M5680.7294,261.0191 C5663.3983,267.9183 5644.4294,275.5001 5627,282.532 C5601.6977,292.7403 5573.3211,304.3361 5551.0866,313.4556 " fill="none" id="dynamiccertificates.SNICertKeyContentProvider-backto-dynamiccertificates.staticSNICertKeyContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5678.2604,254.4679,5699.4316,253.5853,5683.4316,267.4778,5678.2604,254.4679" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d1e6b9bb397746b5cae1410e92ac25ee]
reverse link dynamiccertificates.CAContentProvider to dynamiccertificates.unionCAContent--><g id="link_dynamiccertificates.CAContentProvider_dynamiccertificates.unionCAContent"><path codeLine="244" d="M4912.8709,161.5393 C4728.1211,180.3711 4672.1434,141.4538 4500,190.532 C4476.4744,197.2392 4452.0625,210.6668 4434.7695,221.4584 " fill="none" id="dynamiccertificates.CAContentProvider-backto-dynamiccertificates.unionCAContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4912.332,154.5563,4932.98,159.3165,4913.8702,168.4716,4912.332,154.5563" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[75072d983b91da27a3a73d25eb4d34fa]
reverse link dynamiccertificates.ControllerRunner to dynamiccertificates.unionCAContent--><g id="link_dynamiccertificates.ControllerRunner_dynamiccertificates.unionCAContent"><path codeLine="245" d="M4731.7563,156.7679 C4643.6227,167.6601 4521.7227,183.5322 4500,190.532 C4477.0486,197.9277 4452.9793,211.0076 4435.6668,221.4942 " fill="none" id="dynamiccertificates.ControllerRunner-backto-dynamiccertificates.unionCAContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4730.9692,149.812,4751.6738,154.3197,4732.6772,163.7074,4730.9692,149.812" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[87cd9299c72379bbe7bb8554b67d93b7]
reverse link dynamiccertificates.Notifier to dynamiccertificates.unionCAContent--><g id="link_dynamiccertificates.Notifier_dynamiccertificates.unionCAContent"><path codeLine="246" d="M5121.3224,57.1006 C5005.4235,64.8335 4757.616,86.0513 4685,129.532 C4669.7474,138.6649 4676.1303,152.1981 4661,161.532 C4599.1203,199.7056 4568.7358,166.8315 4500,190.532 C4477.5339,198.2784 4453.8199,211.0589 4436.5244,221.3385 " fill="none" id="dynamiccertificates.Notifier-backto-dynamiccertificates.unionCAContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5120.9479,50.1104,5141.3562,55.8113,5121.8471,64.0814,5120.9479,50.1104" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d80568dc7a1cfc81c980a4ed5d846d95]
reverse link egressselector.proxier to egressselector.grpcProxier--><g id="link_egressselector.proxier_egressselector.grpcProxier"><path codeLine="326" d="M10361,457.9368 C10361,471.6108 10361,486.4688 10361,497.3818 " fill="none" id="egressselector.proxier-backto-egressselector.grpcProxier" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="10354.0001,457.5572,10361,437.5572,10368.0001,457.5571,10354.0001,457.5572" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ba74cf1acceb61cbbac7bae7d350d300]
reverse link egressselector.proxier to egressselector.httpConnectProxier--><g id="link_egressselector.proxier_egressselector.httpConnectProxier"><path codeLine="327" d="M10408.1133,447.1795 C10437.6625,463.2654 10474.8517,483.5104 10500.3327,497.3818 " fill="none" id="egressselector.proxier-backto-egressselector.httpConnectProxier" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="10404.6565,453.2678,10390.4376,437.5572,10411.3503,440.9717,10404.6565,453.2678" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[dd189f9fcf0d9029ef7d3adef43c9b8e]
reverse link egressselector.proxyServerConnector to egressselector.tcpHTTPConnectConnector--><g id="link_egressselector.proxyServerConnector_egressselector.tcpHTTPConnectConnector"><path codeLine="328" d="M9983.3055,444.4118 C10002.8277,451.4305 10024.3167,459.2292 10044,466.532 C10071.2192,476.6308 10101.7033,488.2768 10125.5139,497.4495 " fill="none" id="egressselector.proxyServerConnector-backto-egressselector.tcpHTTPConnectConnector" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9980.6726,450.9042,9964.2065,437.5674,9985.3956,437.7249,9980.6726,450.9042" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c79661b68d350618d65fe7a28adf477b]
reverse link egressselector.proxyServerConnector to egressselector.udsGRPCConnector--><g id="link_egressselector.proxyServerConnector_egressselector.udsGRPCConnector"><path codeLine="329" d="M9852.0938,444.2572 C9833.1674,451.0525 9812.6489,458.7702 9794,466.532 C9771.165,476.0361 9745.9923,488.0076 9726.7447,497.4898 " fill="none" id="egressselector.proxyServerConnector-backto-egressselector.udsGRPCConnector" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9849.906,437.6062,9871.0955,437.5464,9854.5681,450.8071,9849.906,437.6062" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[5667136f985b831ce188f76eba8878ce]
reverse link egressselector.proxyServerConnector to egressselector.udsHTTPConnectConnector--><g id="link_egressselector.proxyServerConnector_egressselector.udsHTTPConnectConnector"><path codeLine="330" d="M9919,457.9368 C9919,471.6108 9919,486.4688 9919,497.3818 " fill="none" id="egressselector.proxyServerConnector-backto-egressselector.udsHTTPConnectConnector" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9912.0001,457.5572,9919,437.5572,9926.0001,457.5571,9912.0001,457.5572" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[81126506a4eef7a0d4077e7ea8aa7b45]
reverse link encryptionconfig.ResourceTransformers to encryptionconfig.DynamicTransformers--><g id="link_encryptionconfig.ResourceTransformers_encryptionconfig.DynamicTransformers"><path codeLine="446" d="M9429.8992,452.0956 C9444.7066,467.2321 9461.9816,484.891 9474.2009,497.3818 " fill="none" id="encryptionconfig.ResourceTransformers-backto-encryptionconfig.DynamicTransformers" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9424.6589,456.749,9415.6768,437.5572,9434.6666,446.9588,9424.6589,456.749" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[bbf61fd3b188992c9616254449a9e934]
reverse link healthz.HealthChecker to encryptionconfig.DynamicTransformers--><g id="link_healthz.HealthChecker_encryptionconfig.DynamicTransformers"><path codeLine="447" d="M7949.2166,331.0734 C8284.3757,337.2333 9494.2789,360.4302 9508,374.532 C9540.2417,407.6683 9514.7095,468.185 9499.4014,497.1864 " fill="none" id="healthz.HealthChecker-backto-encryptionconfig.DynamicTransformers" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7948.9754,338.0702,7929.107,330.7049,7949.2319,324.0726,7948.9754,338.0702" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[33c3910103b18b15928bfcb08c5d0643]
reverse link encryptionconfig.ResourceTransformers to encryptionconfig.StaticTransformers--><g id="link_encryptionconfig.ResourceTransformers_encryptionconfig.StaticTransformers"><path codeLine="448" d="M9364.7912,450.1976 C9345.7061,465.7359 9322.8246,484.3651 9306.8367,497.3818 " fill="none" id="encryptionconfig.ResourceTransformers-backto-encryptionconfig.StaticTransformers" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9360.3876,444.7562,9380.3169,437.5572,9369.2268,455.613,9360.3876,444.7562" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e1c196d9ef25bcf34987aa8dca1c6d23]
reverse link healthz.HealthChecker to encryptionconfig.kmsHealthChecker--><g id="link_healthz.HealthChecker_encryptionconfig.kmsHealthChecker"><path codeLine="449" d="M7949.036,335.1632 C8010.8552,340.9217 8095.9695,352.323 8168,374.532 C8192.4987,382.0856 8218.5562,395.015 8237.4878,405.403 " fill="none" id="healthz.HealthChecker-backto-encryptionconfig.kmsHealthChecker" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7948.3338,342.1287,7929.0168,333.4192,7949.5489,328.1815,7948.3338,342.1287" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b763994775d5dd08ebd81a0d8ce6c9ed]
reverse link encryptionconfig.healthChecker to encryptionconfig.kmsPluginProbe--><g id="link_encryptionconfig.healthChecker_encryptionconfig.kmsPluginProbe"><path codeLine="450" d="M8084.0215,457.9368 C8083.2783,471.6108 8082.4708,486.4688 8081.8777,497.3818 " fill="none" id="encryptionconfig.healthChecker-backto-encryptionconfig.kmsPluginProbe" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="8077.0539,457.1478,8085.1291,437.5572,8091.0333,457.9076,8077.0539,457.1478" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9a1a6827dc942072da323ea09cded5e8]
reverse link encryptionconfig.healthChecker to encryptionconfig.kmsv2PluginProbe--><g id="link_encryptionconfig.healthChecker_encryptionconfig.kmsv2PluginProbe"><path codeLine="451" d="M8135.2871,446.7232 C8166.9003,462.8811 8207.0049,483.379 8234.4017,497.3818 " fill="none" id="encryptionconfig.healthChecker-backto-encryptionconfig.kmsv2PluginProbe" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="8131.9765,452.8925,8117.3536,437.5572,8138.3481,440.4264,8131.9765,452.8925" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fcd0d2fb19925ed4e597304bd9d4e2b1]
reverse link filters.timeoutWriter to filters.baseTimeoutWriter--><g id="link_filters.timeoutWriter_filters.baseTimeoutWriter"><path codeLine="543" d="M11153.6357,457.443 C11156.1874,471.2522 11158.9749,486.3373 11161.0157,497.3818 " fill="none" id="filters.timeoutWriter-backto-filters.baseTimeoutWriter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="11146.7119,458.4962,11149.9612,437.5572,11160.4789,455.9523,11146.7119,458.4962" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[993ec6ffb742fae92d2cdcb668300b40]
reverse link filters.GoawayDecider to filters.probabilisticGoawayDecider--><g id="link_filters.GoawayDecider_filters.probabilisticGoawayDecider"><path codeLine="544" d="M11337.0406,453.0549 C11349.3646,467.9733 11363.5573,485.154 11373.6585,497.3818 " fill="none" id="filters.GoawayDecider-backto-filters.probabilisticGoawayDecider" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="11331.5791,457.4346,11324.2382,437.5572,11342.3726,448.5183,11331.5791,457.4346" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9939c7e0f861e2855a8452fdbdab9674]
reverse link healthz.HealthChecker to healthz.healthzCheck--><g id="link_healthz.HealthChecker_healthz.healthzCheck"><path codeLine="590" d="M7792.7599,350.8791 C7789.1305,351.8109 7785.5285,352.7015 7782,353.532 C7730.5743,365.6361 7714.548,356.1988 7665,374.532 C7644.3028,382.1901 7622.8467,395.1121 7607.3714,405.4707 " fill="none" id="healthz.HealthChecker-backto-healthz.healthzCheck" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7791.0334,344.0945,7812.1686,345.6126,7794.6998,357.606,7791.0334,344.0945" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7bd3388f4beb0031a20443cd9df93dd1]
reverse link healthz.HealthChecker to healthz.informerSync--><g id="link_healthz.HealthChecker_healthz.informerSync"><path codeLine="591" d="M7826.6101,357.7277 C7805.8816,373.359 7780.8522,392.2336 7763.4166,405.3818 " fill="none" id="healthz.HealthChecker-backto-healthz.informerSync" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7822.566,352.0101,7842.7492,345.5572,7830.9953,363.1881,7822.566,352.0101" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[580705ebe8fa1c4e8a4b5393a3a874a2]
reverse link healthz.HealthChecker to healthz.log--><g id="link_healthz.HealthChecker_healthz.log"><path codeLine="592" d="M7863.6043,365.9368 C7863.4557,379.6108 7863.2942,394.4688 7863.1755,405.3818 " fill="none" id="healthz.HealthChecker-backto-healthz.log" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7856.6088,365.4799,7863.8258,345.5572,7870.6079,365.6321,7856.6088,365.4799" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d21129aa7a98ddc122a47d4805cbaa39]
reverse link healthz.HealthChecker to healthz.ping--><g id="link_healthz.HealthChecker_healthz.ping"><path codeLine="593" d="M7894.2314,360.0956 C7909.2034,375.2321 7926.6703,392.891 7939.0253,405.3818 " fill="none" id="healthz.HealthChecker-backto-healthz.ping" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7888.9389,364.699,7879.851,345.5572,7898.8924,354.8538,7888.9389,364.699" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[cdea3b36376ea59a2217e47e92352db5]
reverse link httplog.logger to httplog.passthroughLogger--><g id="link_httplog.logger_httplog.passthroughLogger"><path codeLine="640" d="M2257.8029,273.443 C2254.6508,287.2522 2251.2075,302.3373 2248.6865,313.3818 " fill="none" id="httplog.logger-backto-httplog.passthroughLogger" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2251.0668,271.4979,2262.3421,253.5572,2264.7157,274.6135,2251.0668,271.4979" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[542ecd104b9a408bd361526ccb250733]
reverse link httplog.logger to httplog.respLogger--><g id="link_httplog.logger_httplog.respLogger"><path codeLine="641" d="M2312.0063,263.8547 C2322.2723,269.8846 2333.0594,276.3438 2343,282.532 C2359.0633,292.5317 2376.8133,304.2817 2390.5475,313.5318 " fill="none" id="httplog.logger-backto-httplog.respLogger" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2308.1613,269.7165,2294.3859,253.6156,2315.1953,257.6118,2308.1613,269.7165" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[b2f29f9e95968170bcf1cbf4e94d6717]
reverse link healthz.mux to mux.PathRecorderMux--><g id="link_healthz.mux_mux.PathRecorderMux"><path codeLine="711" d="M7503.1682,330.3064 C7132.2363,335.9652 4855.6711,370.8247 4821,374.532 C4762.2208,380.8171 4696.3186,394.5134 4649.1255,405.5079 " fill="none" id="healthz.mux-backto-mux.PathRecorderMux" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7503.1528,323.306,7523.2573,330.0001,7503.3664,337.3043,7503.1528,323.306" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[be32995d51069d94d65468a89a362053]
reverse link routes.ListedPathProvider to mux.PathRecorderMux--><g id="link_routes.ListedPathProvider_mux.PathRecorderMux"><path codeLine="712" d="M4174.547,346.4977 C4191.6761,349.0891 4209.3276,351.5545 4226,353.532 C4344.2046,367.552 4378.4524,342.1634 4493,374.532 C4516.9913,381.3114 4542.0525,394.5851 4559.9488,405.302 " fill="none" id="routes.ListedPathProvider-backto-mux.PathRecorderMux" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4173.4544,353.412,4154.769,343.4193,4175.6076,339.5786,4173.4544,353.412" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3643a6ab855549e0dda8044ea1018bac]
reverse link dynamiccertificates.ConfigMapCAController to options.DynamicRequestHeaderController--><g id="link_dynamiccertificates.ConfigMapCAController_options.DynamicRequestHeaderController"><path codeLine="1082" d="M4724.6704,253.126 C4723.1037,253.2685 4721.5462,253.404 4720,253.532 C4136.9635,301.798 3987.8463,245.3208 3404,282.532 C3104.2791,301.6346 3031.4151,330.1199 2732,353.532 C2548.7666,367.8595 2501.5198,352.9389 2319,374.532 C2148.3783,394.7175 2109.3782,423.3853 1939,445.532 C1813.4891,461.8466 1779.25,442.4258 1655,466.532 C1618.4387,473.6254 1578.2429,486.8721 1549.1382,497.4988 " fill="none" id="dynamiccertificates.ConfigMapCAController-backto-options.DynamicRequestHeaderController" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="4737.8259,251.7976,4731.4544,248.4206,4725.8866,253.0031,4732.2581,256.3801,4737.8259,251.7976" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[40af4e01f4e96bebff072a111029f723]
reverse link headerrequest.RequestHeaderAuthRequestController to options.DynamicRequestHeaderController--><g id="link_headerrequest.RequestHeaderAuthRequestController_options.DynamicRequestHeaderController"><path codeLine="1083" d="M1617.2349,444.699 C1591.1482,461.1372 1556.7905,482.7873 1533.6297,497.3818 " fill="none" id="headerrequest.RequestHeaderAuthRequestController-backto-options.DynamicRequestHeaderController" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1628.5687,437.5572,1621.36,437.3717,1618.4162,443.9546,1625.6249,444.1401,1628.5687,437.5572" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[fc91721364cec7cb1a0f40650164771f]
reverse link options.SecureServingOptions to options.SecureServingOptionsWithLoopback--><g id="link_options.SecureServingOptions_options.SecureServingOptionsWithLoopback"><path codeLine="1084" d="M1301.0771,535.16 C1336.4527,551.7649 1384.52,574.3271 1416.593,589.3818 " fill="none" id="options.SecureServingOptions-backto-options.SecureServingOptionsWithLoopback" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1289.1406,529.5572,1292.8724,535.7276,1300.0034,534.6561,1296.2717,528.4857,1289.1406,529.5572" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[9382d6923c6602aa08a6d2e400551d28]
reverse link audit.Backend to options.ignoreErrorsBackend--><g id="link_audit.Backend_options.ignoreErrorsBackend"><path codeLine="1085" d="M1846.3551,445.5926 C1824.8874,461.9151 1797.0901,483.0503 1778.2411,497.3818 " fill="none" id="audit.Backend-backto-options.ignoreErrorsBackend" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1856.9234,437.5572,1849.7262,438.0046,1847.371,444.8202,1854.5682,444.3728,1856.9234,437.5572" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[84e956d9e6f8f0b2ac3496bded43193b]
reverse link dynamiccertificates.ControllerRunner to options.DynamicRequestHeaderController--><g id="link_dynamiccertificates.ControllerRunner_options.DynamicRequestHeaderController"><path codeLine="1087" d="M4731.4676,156.0541 C4708.4564,158.257 4683.861,160.2872 4661,161.532 C4382.1722,176.7142 2424.3946,150.7648 2148,190.532 C1849.1261,233.5335 1676.3209,133.8375 1494,374.532 C1466.3213,411.0725 1487.1428,469.4219 1499.9374,497.4613 " fill="none" id="dynamiccertificates.ControllerRunner-backto-options.DynamicRequestHeaderController" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4731.0315,149.063,4751.6271,154.0448,4732.42,162.994,4731.0315,149.063" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7cfe94015cd37551433cc5dc9f2a0088]
reverse link storage.StorageFactory to options.SimpleStorageFactory--><g id="link_storage.StorageFactory_options.SimpleStorageFactory"><path codeLine="1088" d="M2340.264,442.1682 C2334.4477,443.4247 2328.6441,444.568 2323,445.532 C2212.216,464.4533 2179.8875,438.7 2071,466.532 C2043.89,473.4614 2014.9693,486.7222 1994.1968,497.396 " fill="none" id="storage.StorageFactory-backto-options.SimpleStorageFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2338.8034,435.3208,2359.8748,437.557,2342.008,448.9491,2338.8034,435.3208" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e1f5939d0faa1ca82135e086ba2e94f8]
reverse link storage.StorageFactory to options.transformerStorageFactory--><g id="link_storage.StorageFactory_options.transformerStorageFactory"><path codeLine="1089" d="M2357.4942,445.2564 C2317.8206,461.624 2266.1241,482.9516 2231.1467,497.3818 " fill="none" id="storage.StorageFactory-backto-options.transformerStorageFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2354.9983,438.7138,2376.1564,437.5572,2360.3376,451.6557,2354.9983,438.7138" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c973071e36c8da5fd68dba2758d0ddb6]
reverse link routes.ListedPathProvider to routes.ListedPathProviders--><g id="link_routes.ListedPathProvider_routes.ListedPathProviders"><path codeLine="1174" d="M4074.2086,365.9368 C4073.9113,379.6108 4073.5883,394.4688 4073.3511,405.3818 " fill="none" id="routes.ListedPathProvider-backto-routes.ListedPathProviders" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4067.2185,365.4003,4074.6516,345.5572,4081.2152,365.7046,4067.2185,365.4003" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3ebb8967affd14a955251d545f364a62]
reverse link server.completedConfig to server.CompletedConfig--><g id="link_server.completedConfig_server.CompletedConfig"><path codeLine="1577" d="M6202,542.6694 C6202,558.1116 6202,576.4966 6202,589.3818 " fill="none" id="server.completedConfig-backto-server.CompletedConfig" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6202,529.5572,6198,535.5572,6202,541.5572,6206,535.5572,6202,529.5572" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[34cd19e1c0878ddcaf53858fa49dcdb7]
reverse link server.Config to server.RecommendedConfig--><g id="link_server.Config_server.RecommendedConfig"><path codeLine="1578" d="M6291.0096,444.699 C6316.5603,461.1372 6350.212,482.7873 6372.8969,497.3818 " fill="none" id="server.Config-backto-server.RecommendedConfig" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6279.9087,437.5572,6282.7903,444.1675,6290.0005,444.0499,6287.1188,437.4396,6279.9087,437.5572" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1dd2d809faef869d98ccaf66794b7732]
reverse link server.Config to server.completedConfig--><g id="link_server.Config_server.completedConfig"><path codeLine="1579" d="M6239.0264,449.2597 C6229.9697,464.9809 6218.9542,484.1021 6211.3039,497.3818 " fill="none" id="server.Config-backto-server.completedConfig" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="6245.7681,437.5572,6239.307,440.7594,6239.7779,447.9551,6246.239,444.7529,6245.7681,437.5572" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e540d2af256170c91328049afdc46dd7]
reverse link server.GenericAPIServer to server.preparedGenericAPIServer--><g id="link_server.GenericAPIServer_server.preparedGenericAPIServer"><path codeLine="1580" d="M5032,542.6694 C5032,558.1116 5032,576.4966 5032,589.3818 " fill="none" id="server.GenericAPIServer-backto-server.preparedGenericAPIServer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5032,529.5572,5028,535.5572,5032,541.5572,5036,535.5572,5032,529.5572" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[dcf01dabf26d5898b786cfe96989eb11]
reverse link net.Listener to server.tcpKeepAliveListener--><g id="link_net.Listener_server.tcpKeepAliveListener"><path codeLine="1581" d="M5872.7936,350.6065 C5869.5341,351.7519 5866.2467,352.7511 5863,353.532 C5722.2717,387.3812 5353.043,342.0192 5212,374.532 C5184.559,380.8576 5155.4932,394.4731 5134.9169,405.4292 " fill="none" id="net.Listener-backto-server.tcpKeepAliveListener" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="5885.0819,345.6167,5878.0178,344.168,5873.9636,350.1314,5881.0277,351.5802,5885.0819,345.6167" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[38dd6e5c763f73838d2d6d476e63c264]
reverse link routes.ListedPathProvider to server.APIServerHandler--><g id="link_routes.ListedPathProvider_server.APIServerHandler"><path codeLine="1583" d="M4174.4819,347.1016 C4191.6184,349.6239 4209.2893,351.9096 4226,353.532 C4355.2539,366.0807 4683.7302,344.2008 4810,374.532 C4836.5156,380.9013 4864.462,394.5123 4884.2192,405.4557 " fill="none" id="routes.ListedPathProvider-backto-server.APIServerHandler" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4173.4028,354.018,4154.7002,344.0576,4175.5321,340.1809,4173.4028,354.018" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[34609ec85590d6f9cb59e72b8ecccf31]
reverse link routes.ListedPathProvider to server.GenericAPIServer--><g id="link_routes.ListedPathProvider_server.GenericAPIServer"><path codeLine="1584" d="M4174.497,346.9497 C4191.6318,349.4894 4209.2982,351.8203 4226,353.532 C4325.5872,363.7381 4583.0373,337.3875 4676,374.532 C4720.7662,392.4189 4715.2057,423.3374 4758,445.532 C4821.5231,478.4773 4901.7104,495.9618 4958.893,504.9048 " fill="none" id="routes.ListedPathProvider-backto-server.GenericAPIServer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4173.4145,353.8656,4154.7162,343.8971,4175.5498,340.0294,4173.4145,353.8656" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[75e72ff8d6533b028eb2481e4d328b44]
reverse link server.DelegationTarget to server.GenericAPIServer--><g id="link_server.DelegationTarget_server.GenericAPIServer"><path codeLine="1585" d="M5399.4147,442.5948 C5395.2224,443.6162 5391.0641,444.6021 5387,445.532 C5290.0429,467.7159 5177.062,488.4967 5105.0663,501.1079 " fill="none" id="server.DelegationTarget-backto-server.GenericAPIServer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5397.9494,435.7451,5419.0546,437.6351,5401.3773,449.319,5397.9494,435.7451" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ed142eb3dff5286c06bbce0790017971]
reverse link healthz.HealthChecker to server.delayedLivezCheck--><g id="link_healthz.HealthChecker_server.delayedLivezCheck"><path codeLine="1586" d="M7797.7361,350.5494 C7792.4491,351.7282 7787.1593,352.7491 7782,353.532 C7641.8078,374.8051 6644.0038,341.954 6506,374.532 C6480.1059,380.6447 6453.0065,394.2818 6433.8847,405.3004 " fill="none" id="healthz.HealthChecker-backto-server.delayedLivezCheck" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7796.1116,343.7396,7817.2225,345.5648,7799.5811,357.3029,7796.1116,343.7396" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[88691a658859a60251144bea609730b5]
reverse link routes.ListedPathProvider to server.emptyDelegate--><g id="link_routes.ListedPathProvider_server.emptyDelegate"><path codeLine="1587" d="M4174.4884,347.0355 C4191.6241,349.5653 4209.2931,351.8707 4226,353.532 C4283.2097,359.2206 4689.8854,352.5288 4743,374.532 C4786.006,392.3476 4777.2531,427.1032 4820,445.532 C4881.9804,472.2526 5056.0125,458.2718 5123,466.532 C5190.5734,474.8645 5267.1009,489.0159 5320.2978,499.6182 " fill="none" id="routes.ListedPathProvider-backto-server.emptyDelegate" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4173.4078,353.9517,4154.707,343.9877,4175.5397,340.115,4173.4078,353.9517" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2c1387ae516763aea25eebbb0e4fa1b5]
reverse link server.DelegationTarget to server.emptyDelegate--><g id="link_server.DelegationTarget_server.emptyDelegate"><path codeLine="1588" d="M5447.1008,452.0956 C5432.2934,467.2321 5415.0184,484.891 5402.7991,497.3818 " fill="none" id="server.DelegationTarget-backto-server.emptyDelegate" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5442.3334,446.9588,5461.3232,437.5572,5452.3411,456.749,5442.3334,446.9588" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[18be808107ea6f94d120b6032fb44679]
reverse link server.lifecycleSignal to server.namedChannelWrapper--><g id="link_server.lifecycleSignal_server.namedChannelWrapper"><path codeLine="1589" d="M5824.8564,450.1976 C5805.2647,465.7359 5781.7757,484.3651 5765.3633,497.3818 " fill="none" id="server.lifecycleSignal-backto-server.namedChannelWrapper" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5820.7746,444.5006,5840.7943,437.5572,5829.4741,455.4696,5820.7746,444.5006" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ad3ef1eaa8b7c18edce9f120df4b0d03]
reverse link healthz.HealthChecker to server.postStartHookHealthz--><g id="link_healthz.HealthChecker_server.postStartHookHealthz"><path codeLine="1590" d="M7797.7413,350.5838 C7792.4531,351.7547 7787.1616,352.7645 7782,353.532 C7561.9624,386.2497 5997.3861,327.3064 5780,374.532 C5752.066,380.6005 5722.5074,394.3976 5701.7212,405.4823 " fill="none" id="healthz.HealthChecker-backto-server.postStartHookHealthz" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7796.1204,343.7732,7817.2299,345.6144,7799.5796,357.3391,7796.1204,343.7732" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c6fa50de9103565f1183d6454a6eeaa1]
reverse link server.ResourceExpirationEvaluator to server.resourceExpirationEvaluator--><g id="link_server.ResourceExpirationEvaluator_server.resourceExpirationEvaluator"><path codeLine="1591" d="M6041.9821,452.5744 C6027.9334,467.6033 6011.6502,485.0225 6000.0969,497.3818 " fill="none" id="server.ResourceExpirationEvaluator-backto-server.resourceExpirationEvaluator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6037.2485,447.3875,6056.0199,437.5572,6047.4759,456.9479,6037.2485,447.3875" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8b39dcae835633d43a3716669d902f77]
reverse link healthz.HealthChecker to server.shutdownCheck--><g id="link_healthz.HealthChecker_server.shutdownCheck"><path codeLine="1592" d="M7797.7427,350.5937 C7792.4542,351.7624 7787.1622,352.769 7782,353.532 C7650.3695,372.9885 5515.9354,341.6564 5387,374.532 C5363.1677,380.6087 5338.6987,394.4049 5321.632,405.4872 " fill="none" id="healthz.HealthChecker-backto-server.shutdownCheck" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7796.1229,343.7828,7817.232,345.6287,7799.5792,357.3495,7796.1229,343.7828" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[653928c2affc6c911b422a7f7a92fa58]
reverse link storage.ResourceEncodingConfig to storage.DefaultResourceEncodingConfig--><g id="link_storage.ResourceEncodingConfig_storage.DefaultResourceEncodingConfig"><path codeLine="1698" d="M2664.1656,457.9368 C2665.3547,471.6108 2666.6467,486.4688 2667.5956,497.3818 " fill="none" id="storage.ResourceEncodingConfig-backto-storage.DefaultResourceEncodingConfig" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2657.1525,458.0884,2662.3935,437.5572,2671.0999,456.8756,2657.1525,458.0884" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[aabc6cee47b2bd77058d5c1038d517d5]
reverse link storage.StorageFactory to storage.DefaultStorageFactory--><g id="link_storage.StorageFactory_storage.DefaultStorageFactory"><path codeLine="1699" d="M2417.3742,457.9368 C2418.266,471.6108 2419.235,486.4688 2419.9467,497.3818 " fill="none" id="storage.StorageFactory-backto-storage.DefaultStorageFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2410.3616,457.9704,2416.0451,437.5572,2424.332,457.0592,2410.3616,457.9704" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8554f4032ab99caf4088bca87590df6d]
reverse link storage.APIResourceConfigSource to storage.ResourceConfig--><g id="link_storage.APIResourceConfigSource_storage.ResourceConfig"><path codeLine="1700" d="M2896.6043,457.9368 C2896.4557,471.6108 2896.2942,486.4688 2896.1755,497.3818 " fill="none" id="storage.APIResourceConfigSource-backto-storage.ResourceConfig" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2889.6088,457.4799,2896.8258,437.5572,2903.6079,457.6321,2889.6088,457.4799" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f5ed224532fd902db89ef6cad65c3b46]
@startuml
namespace controller {
    class DynamicKMSEncryptionConfigContent << (S,Aquamarine) >> {
        - name string
        - filePath string
        - lastLoadedEncryptionConfigHash string
        - queue workqueue.RateLimitingInterface
        - dynamicTransformers *encryptionconfig.DynamicTransformers

        - watchEncryptionConfigFile(ctx context.Context) error
        - handleWatchEvent(event fsnotify.Event, watcher *fsnotify.Watcher) error
        - runWorker(ctx context.Context) 
        - processNextWorkItem(serverCtx context.Context) bool
        - processEncryptionConfig(ctx context.Context) (*encryptionconfig.EncryptionConfiguration, bool, error)
        - validateNewTransformersHealth(ctx context.Context, kmsPluginHealthzCheck healthz.HealthChecker, kmsPluginCloseGracePeriod time.Duration) error

        + Run(ctx context.Context) 

    }
}


namespace dynamiccertificates {
    interface CAContentProvider  {
        + Name() string
        + CurrentCABundleContent() []byte
        + VerifyOptions() (x509.VerifyOptions, bool)

    }
    interface CertKeyContentProvider  {
        + Name() string
        + CurrentCertKeyContent() ([]byte, []byte)

    }
    class ConfigMapCAController << (S,Aquamarine) >> {
        - name string
        - configmapLister v1.ConfigMapLister
        - configmapNamespace string
        - configmapName string
        - configmapKey string
        - configMapInformer cache.SharedIndexInformer
        - caBundle atomic.Value
        - listeners []Listener
        - queue workqueue.RateLimitingInterface
        - preRunCaches []cache.InformerSynced

        - keyFn() string
        - loadCABundle() error
        - hasCAChanged(caBundle []byte) bool
        - runWorker() 
        - processNextWorkItem() bool

        + AddListener(listener Listener) 
        + RunOnce(ctx context.Context) error
        + Run(ctx context.Context, workers int) 
        + Name() string
        + CurrentCABundleContent() []byte
        + VerifyOptions() (x509.VerifyOptions, bool)

    }
    interface ControllerRunner  {
        + RunOnce(ctx context.Context) error
        + Run(ctx context.Context, workers int) 

    }
    class DynamicCertKeyPairContent << (S,Aquamarine) >> {
        - name string
        - certFile string
        - keyFile string
        - certKeyPair atomic.Value
        - listeners []Listener
        - queue workqueue.RateLimitingInterface

        - loadCertKeyPair() error
        - watchCertKeyFile(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        - handleWatchEvent(e fsnotify.Event, w *fsnotify.Watcher) error
        - runWorker() 
        - processNextWorkItem() bool

        + AddListener(listener Listener) 
        + RunOnce(ctx context.Context) error
        + Run(ctx context.Context, workers int) 
        + Name() string
        + CurrentCertKeyContent() ([]byte, []byte)

    }
    class DynamicFileCAContent << (S,Aquamarine) >> {
        - name string
        - filename string
        - caBundle atomic.Value
        - listeners []Listener
        - queue workqueue.RateLimitingInterface

        - loadCABundle() error
        - hasCAChanged(caBundle []byte) bool
        - watchCAFile(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        - handleWatchEvent(e fsnotify.Event, w *fsnotify.Watcher) error
        - runWorker() 
        - processNextWorkItem() bool

        + AddListener(listener Listener) 
        + RunOnce(ctx context.Context) error
        + Run(ctx context.Context, workers int) 
        + Name() string
        + CurrentCABundleContent() []byte
        + VerifyOptions() (x509.VerifyOptions, bool)

    }
    class DynamicFileSNIContent << (S,Aquamarine) >> {
        - sniNames []string

        + SNINames() []string

    }
    class DynamicServingCertificateController << (S,Aquamarine) >> {
        - baseTLSConfig *tls.Config
        - clientCA CAContentProvider
        - servingCert CertKeyContentProvider
        - sniCerts []SNICertKeyContentProvider
        - currentlyServedContent *dynamicCertificateContent
        - currentServingTLSConfig atomic.Value
        - queue workqueue.RateLimitingInterface
        - eventRecorder events.EventRecorder

        - newTLSContent() (*dynamicCertificateContent, error)
        - syncCerts() error
        - runWorker() 
        - processNextWorkItem() bool

        + BuildNamedCertificates(sniCerts []sniCertKeyContent) (<font color=blue>map</font>[string]*tls.Certificate, error)
        + GetConfigForClient(clientHello *tls.ClientHelloInfo) (*tls.Config, error)
        + RunOnce() error
        + Run(workers int, stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) 
        + Enqueue() 

    }
    interface Listener  {
        + Enqueue() 

    }
    interface Notifier  {
        + AddListener(listener Listener) 

    }
    interface SNICertKeyContentProvider  {
        + SNINames() []string

    }
    class caBundleAndVerifier << (S,Aquamarine) >> {
        - caBundle []byte
        - verifyOptions x509.VerifyOptions

    }
    class caBundleContent << (S,Aquamarine) >> {
        - caBundle []byte

        + Equal(rhs *caBundleContent) bool

    }
    class certKeyContent << (S,Aquamarine) >> {
        - cert []byte
        - key []byte

        + Equal(rhs *certKeyContent) bool

    }
    class dynamicCertificateContent << (S,Aquamarine) >> {
        - clientCA caBundleContent
        - servingCert certKeyContent
        - sniCerts []sniCertKeyContent

        + Equal(rhs *dynamicCertificateContent) bool

    }
    class dynamiccertificates.unionCAContent << (T, #FF7700) >>  {
    }
    class sniCertKeyContent << (S,Aquamarine) >> {
        - sniNames []string

        + Equal(rhs *sniCertKeyContent) bool

    }
    class staticCAContent << (S,Aquamarine) >> {
        - name string
        - caBundle *caBundleAndVerifier

        + Name() string
        + AddListener( Listener) 
        + CurrentCABundleContent() []byte
        + VerifyOptions() (x509.VerifyOptions, bool)

    }
    class staticCertKeyContent << (S,Aquamarine) >> {
        - name string
        - cert []byte
        - key []byte

        + Name() string
        + AddListener( Listener) 
        + CurrentCertKeyContent() ([]byte, []byte)

    }
    class staticSNICertKeyContent << (S,Aquamarine) >> {
        - sniNames []string

        + SNINames() []string
        + AddListener( Listener) 

    }
    class unionCAContent << (S,Aquamarine) >> {
        + Name() string
        + CurrentCABundleContent() []byte
        + VerifyOptions() (x509.VerifyOptions, bool)
        + AddListener(listener Listener) 
        + RunOnce(ctx context.Context) error
        + Run(ctx context.Context, workers int) 

    }
}
"dynamiccertificates.Notifier" *- - "dynamiccertificates.CAContentProvider"
"dynamiccertificates.Notifier" *- - "dynamiccertificates.CertKeyContentProvider"
"dynamiccertificates.DynamicCertKeyPairContent" *- - "dynamiccertificates.DynamicFileSNIContent"
"dynamiccertificates.CertKeyContentProvider" *- - "dynamiccertificates.SNICertKeyContentProvider"
"dynamiccertificates.Notifier" *- - "dynamiccertificates.SNICertKeyContentProvider"
"dynamiccertificates.certKeyContent" *- - "dynamiccertificates.sniCertKeyContent"
"dynamiccertificates.staticCertKeyContent" *- - "dynamiccertificates.staticSNICertKeyContent"

"dynamiccertificates.CAContentProvider" <|- - "dynamiccertificates.ConfigMapCAController"
"dynamiccertificates.ControllerRunner" <|- - "dynamiccertificates.ConfigMapCAController"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.ConfigMapCAController"
"dynamiccertificates.CertKeyContentProvider" <|- - "dynamiccertificates.DynamicCertKeyPairContent"
"dynamiccertificates.ControllerRunner" <|- - "dynamiccertificates.DynamicCertKeyPairContent"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.DynamicCertKeyPairContent"
"dynamiccertificates.CAContentProvider" <|- - "dynamiccertificates.DynamicFileCAContent"
"dynamiccertificates.ControllerRunner" <|- - "dynamiccertificates.DynamicFileCAContent"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.DynamicFileCAContent"
"dynamiccertificates.SNICertKeyContentProvider" <|- - "dynamiccertificates.DynamicFileSNIContent"
"dynamiccertificates.Listener" <|- - "dynamiccertificates.DynamicServingCertificateController"
"dynamiccertificates.CAContentProvider" <|- - "dynamiccertificates.staticCAContent"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.staticCAContent"
"dynamiccertificates.CertKeyContentProvider" <|- - "dynamiccertificates.staticCertKeyContent"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.staticCertKeyContent"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.staticSNICertKeyContent"
"dynamiccertificates.SNICertKeyContentProvider" <|- - "dynamiccertificates.staticSNICertKeyContent"
"dynamiccertificates.CAContentProvider" <|- - "dynamiccertificates.unionCAContent"
"dynamiccertificates.ControllerRunner" <|- - "dynamiccertificates.unionCAContent"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.unionCAContent"

namespace egressselector {
    class EgressSelector << (S,Aquamarine) >> {
        - egressToDialer <font color=blue>map</font>[EgressType]net.DialFunc

        + Lookup(networkContext NetworkContext) (net.DialFunc, error)

    }
    class EgressType << (S,Aquamarine) >> {
        + String() string
        + AsNetworkContext() NetworkContext

    }
    class NetworkContext << (S,Aquamarine) >> {
        + EgressSelectionName EgressType

    }
    class dialerCreator << (S,Aquamarine) >> {
        - connector proxyServerConnector
        - direct bool
        - options metricsOptions

        - createDialer() net.DialFunc

    }
    class egressselector.EgressType << (T, #FF7700) >>  {
    }
    class egressselector.Lookup << (T, #FF7700) >>  {
    }
    class grpcProxier << (S,Aquamarine) >> {
        - tunnel client.Tunnel

        - proxy(ctx context.Context, addr string) (net.Conn, error)

    }
    class httpConnectProxier << (S,Aquamarine) >> {
        - conn net.Conn
        - proxyAddress string

        - proxy(ctx context.Context, addr string) (net.Conn, error)

    }
    class metricsOptions << (S,Aquamarine) >> {
        - transport string
        - protocol string

    }
    interface proxier  {
        - proxy(ctx context.Context, addr string) (net.Conn, error)

    }
    interface proxyServerConnector  {
        - connect( context.Context) (proxier, error)

    }
    class tcpHTTPConnectConnector << (S,Aquamarine) >> {
        - proxyAddress string
        - tlsConfig *tls.Config

        - connect(ctx context.Context) (proxier, error)

    }
    class udsGRPCConnector << (S,Aquamarine) >> {
        - udsName string

        - connect(_ context.Context) (proxier, error)

    }
    class udsHTTPConnectConnector << (S,Aquamarine) >> {
        - udsName string

        - connect(ctx context.Context) (proxier, error)

    }
    class "<font color=blue>func</font>(NetworkContext) (net.DialFunc, error)" as fontcolorbluefuncfontNetworkContextnetDialFuncerror {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}

"egressselector.proxier" <|- - "egressselector.grpcProxier"
"egressselector.proxier" <|- - "egressselector.httpConnectProxier"
"egressselector.proxyServerConnector" <|- - "egressselector.tcpHTTPConnectConnector"
"egressselector.proxyServerConnector" <|- - "egressselector.udsGRPCConnector"
"egressselector.proxyServerConnector" <|- - "egressselector.udsHTTPConnectConnector"

namespace encryptionconfig {
    class DynamicTransformers << (S,Aquamarine) >> {
        - transformTracker *atomic.Value

        + Check(req *http.Request) error
        + Name() string
        + TransformerForResource(resource schema.GroupResource) value.Transformer
        + Set(transformerOverrides <font color=blue>map</font>[schema.GroupResource]value.Transformer, closeTransformers context.CancelFunc, kmsPluginHealthzCheck healthz.HealthChecker, kmsCloseGracePeriod time.Duration) 

    }
    class EncryptionConfiguration << (S,Aquamarine) >> {
        + Transformers <font color=blue>map</font>[schema.GroupResource]value.Transformer
        + HealthChecks []healthz.HealthChecker
        + EncryptionFileContentHash string
        + KMSCloseGracePeriod time.Duration

    }
    interface ResourceTransformers  {
        + TransformerForResource(resource schema.GroupResource) value.Transformer

    }
    class StaticTransformers << (S,Aquamarine) >> {
        + TransformerForResource(resource schema.GroupResource) value.Transformer

    }
    class encryptionconfig.StaticTransformers << (T, #FF7700) >>  {
    }
    class encryptionconfig.blockTransformerFunc << (T, #FF7700) >>  {
    }
    class encryptionconfig.kmsHealthChecker << (T, #FF7700) >>  {
    }
    class encryptionconfig.unionTransformers << (T, #FF7700) >>  {
    }
    interface healthChecker  {
        - toHealthzCheck(idx int) healthz.HealthChecker

    }
    class kmsHealthChecker << (S,Aquamarine) >> {
        + Name() string
        + Check(req *http.Request) error

    }
    class kmsPluginHealthzResponse << (S,Aquamarine) >> {
        - err error
        - received time.Time

    }
    class kmsPluginProbe << (S,Aquamarine) >> {
        - name string
        - ttl time.Duration
        - service envelope.Service
        - lastResponse *kmsPluginHealthzResponse
        - l *sync.Mutex

        - toHealthzCheck(idx int) healthz.HealthChecker
        - check() error

    }
    class kmsState << (S,Aquamarine) >> {
        - v1Used bool
        - kmsTimeoutSum time.Duration

        - accumulate(other *kmsState) 

    }
    class kmsv2PluginProbe << (S,Aquamarine) >> {
        - keyID 
        - name string
        - ttl time.Duration
        - service service.Service
        - lastResponse *kmsPluginHealthzResponse
        - l *sync.Mutex

        - toHealthzCheck(idx int) healthz.HealthChecker
        - check(ctx context.Context) error
        - getCurrentKeyID(ctx context.Context) (string, error)

    }
    class resourceTransformer << (S,Aquamarine) >> {
        - resource schema.GroupResource
        - transformTracker *atomic.Value

        - transformer() value.Transformer

        + TransformFromStorage(ctx context.Context, data []byte, dataCtx value.Context) ([]byte, bool, error)
        + TransformToStorage(ctx context.Context, data []byte, dataCtx value.Context) ([]byte, error)

    }
    class transformTracker << (S,Aquamarine) >> {
        - transformerOverrides <font color=blue>map</font>[schema.GroupResource]value.Transformer
        - kmsPluginHealthzCheck healthz.HealthChecker
        - closeTransformers context.CancelFunc
        - kmsCloseGracePeriod time.Duration

    }
    class unionTransformers << (S,Aquamarine) >> {
        + TransformFromStorage(ctx context.Context, data []byte, dataCtx value.Context) ([]byte, bool, error)
        + TransformToStorage(ctx context.Context, data []byte, dataCtx value.Context) ([]byte, error)

    }
    class "<font color=blue>func</font>(cipher.Block) value.Transformer" as fontcolorbluefuncfontcipherBlockvalueTransformer {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
    class "<font color=blue>map</font>[schema.GroupResource]value.Transformer" as fontcolorbluemapfontschemaGroupResourcevalueTransformer {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
    class "[]healthz.HealthChecker" as healthzHealthChecker {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
    class "[]value.Transformer" as valueTransformer {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}

"encryptionconfig.ResourceTransformers" <|- - "encryptionconfig.DynamicTransformers"
"healthz.HealthChecker" <|- - "encryptionconfig.DynamicTransformers"
"encryptionconfig.ResourceTransformers" <|- - "encryptionconfig.StaticTransformers"
"healthz.HealthChecker" <|- - "encryptionconfig.kmsHealthChecker"
"encryptionconfig.healthChecker" <|- - "encryptionconfig.kmsPluginProbe"
"encryptionconfig.healthChecker" <|- - "encryptionconfig.kmsv2PluginProbe"

namespace filters {
    interface GoawayDecider  {
        + Goaway(r *http.Request) bool

    }
    class PriorityAndFairnessClassification << (S,Aquamarine) >> {
        + FlowSchemaName string
        + FlowSchemaUID types.UID
        + PriorityLevelName string
        + PriorityLevelUID types.UID

    }
    interface RequestWaitGroup  {
        + Add(delta int) error
        + Done() 

    }
    class baseTimeoutWriter << (S,Aquamarine) >> {
        - w http.ResponseWriter
        - handlerHeaders http.Header
        - mu sync.Mutex
        - timedOut bool
        - wroteHeader bool
        - hijacked bool

        - timeout(err *errors.StatusError) 

        + Unwrap() http.ResponseWriter
        + Header() http.Header
        + Write(p []byte) (int, error)
        + Flush() 
        + WriteHeader(code int) 
        + CloseNotify() <font color=blue>chan</font> bool
        + Hijack() (net.Conn, *bufio.ReadWriter, error)

    }
    class filters.isRequestExemptFunc << (T, #FF7700) >>  {
    }
    class filters.shouldRespondWithRetryAfterFunc << (T, #FF7700) >>  {
    }
    class filters.timeoutFunc << (T, #FF7700) >>  {
    }
    class goaway << (S,Aquamarine) >> {
        - handler http.Handler
        - decider GoawayDecider

        + ServeHTTP(w http.ResponseWriter, r *http.Request) 

    }
    class probabilisticGoawayDecider << (S,Aquamarine) >> {
        - chance float64
        - next <font color=blue>func</font>() float64

        + Goaway(r *http.Request) bool

    }
    class requestWatermark << (S,Aquamarine) >> {
        - phase string
        - readOnlyObserver metrics.RatioedGauge
        - lock sync.Mutex
        - readOnlyWatermark int

        - recordMutating(mutatingVal int) 
        - recordReadOnly(readOnlyVal int) 

    }
    class retryAfterParams << (S,Aquamarine) >> {
        + TearDownConnection bool
        + Message string

    }
    class timeoutHandler << (S,Aquamarine) >> {
        - handler http.Handler
        - timeout timeoutFunc

        + ServeHTTP(w http.ResponseWriter, r *http.Request) 

    }
    interface timeoutWriter  {
        - timeout( *errors.StatusError) 

    }
    class "<font color=blue>func</font>(*http.Request) bool" as fontcolorbluefuncfonthttpRequestbool {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
    class "<font color=blue>func</font>(*http.Request) (*http.Request, bool, <font color=blue>func</font>() , *errors.StatusError)" as fontcolorbluefuncfonthttpRequesthttpRequestboolfontcolorbluefuncfonterrorsStatusError {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}

"filters.timeoutWriter" <|- - "filters.baseTimeoutWriter"
"filters.GoawayDecider" <|- - "filters.probabilisticGoawayDecider"

namespace healthz {
    interface HealthChecker  {
        + Name() string
        + Check(req *http.Request) error

    }
    interface cacheSyncWaiter  {
        + WaitForCacheSync(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) <font color=blue>map</font>[reflect.Type]bool

    }
    class healthzCheck << (S,Aquamarine) >> {
        - name string
        - check <font color=blue>func</font>(*http.Request) error

        + Name() string
        + Check(r *http.Request) error

    }
    class informerSync << (S,Aquamarine) >> {
        - cacheSyncWaiter cacheSyncWaiter

        + Name() string
        + Check(_ *http.Request) error

    }
    class log << (S,Aquamarine) >> {
        - startOnce sync.Once
        - lastVerified atomic.Value

        + Name() string
        + Check(_ *http.Request) error

    }
    interface mux  {
        + Handle(pattern string, handler http.Handler) 

    }
    class ping << (S,Aquamarine) >> {
        + Name() string
        + Check(_ *http.Request) error

    }
}

"healthz.HealthChecker" <|- - "healthz.healthzCheck"
"healthz.HealthChecker" <|- - "healthz.informerSync"
"healthz.HealthChecker" <|- - "healthz.log"
"healthz.HealthChecker" <|- - "healthz.ping"

namespace httplog {
    class httplog.ShouldLogRequestPred << (T, #FF7700) >>  {
    }
    class httplog.StacktracePred << (T, #FF7700) >>  {
    }
    class httplog.respLoggerContextKeyType << (T, #FF7700) >>  {
    }
    interface logger  {
        + Addf(format string, data ...<font color=blue>interface</font>{}) 

    }
    class passthroughLogger << (S,Aquamarine) >> {
        + Addf(format string, data ...<font color=blue>interface</font>{}) 

    }
    class respLogger << (S,Aquamarine) >> {
        - hijacked bool
        - statusRecorded bool
        - status int
        - statusStack string
        - mutex sync.Mutex
        - addedInfo strings.Builder
        - addedKeyValuePairs []<font color=blue>interface</font>{}
        - startTime time.Time
        - captureErrorOutput bool
        - req *http.Request
        - userAgent string
        - w http.ResponseWriter
        - logStacktracePred StacktracePred

        - recordStatus(status int) 

        + Unwrap() http.ResponseWriter
        + StacktraceWhen(pred StacktracePred) *respLogger
        + Addf(format string, data ...<font color=blue>interface</font>{}) 
        + AddKeyValue(key string, value <font color=blue>interface</font>{}) 
        + Log() 
        + Header() http.Header
        + Write(b []byte) (int, error)
        + WriteHeader(status int) 
        + Hijack() (net.Conn, *bufio.ReadWriter, error)

    }
}

"httplog.logger" <|- - "httplog.passthroughLogger"
"httplog.logger" <|- - "httplog.respLogger"

namespace metrics {
    class DialMetrics << (S,Aquamarine) >> {
        - clock clock.Clock
        - starts *metrics.CounterVec
        - latencies *metrics.HistogramVec
        - failures *metrics.CounterVec

        + Clock() clock.Clock
        + SetClock(c clock.Clock) 
        + Reset() 
        + ObserveDialStart(protocol string, transport string) 
        + ObserveDialLatency(elapsed time.Duration, protocol string, transport string) 
        + ObserveDialFailure(protocol string, transport string, stage string) 

    }
}


namespace mux {
    class PathRecorderMux << (S,Aquamarine) >> {
        - name string
        - lock sync.Mutex
        - notFoundHandler http.Handler
        - pathToHandler <font color=blue>map</font>[string]http.Handler
        - prefixToHandler <font color=blue>map</font>[string]http.Handler
        - mux atomic.Value
        - exposedPaths []string
        - pathStacks <font color=blue>map</font>[string]string

        - trackCallers(path string) 
        - refreshMuxLocked() 

        + ListedPaths() []string
        + NotFoundHandler(notFoundHandler http.Handler) 
        + Unregister(path string) 
        + Handle(path string, handler http.Handler) 
        + HandleFunc(path string, handler <font color=blue>func</font>(http.ResponseWriter, *http.Request) ) 
        + UnlistedHandle(path string, handler http.Handler) 
        + UnlistedHandleFunc(path string, handler <font color=blue>func</font>(http.ResponseWriter, *http.Request) ) 
        + HandlePrefix(path string, handler http.Handler) 
        + UnlistedHandlePrefix(path string, handler http.Handler) 
        + ServeHTTP(w http.ResponseWriter, r *http.Request) 

    }
    class byPrefixPriority << (S,Aquamarine) >> {
        + Len() int
        + Swap(i int, j int) 
        + Less(i int, j int) bool

    }
    class mux.byPrefixPriority << (T, #FF7700) >>  {
    }
    class pathHandler << (S,Aquamarine) >> {
        - muxName string
        - pathToHandler <font color=blue>map</font>[string]http.Handler
        - prefixHandlers []prefixHandler
        - notFoundHandler http.Handler

        + ServeHTTP(w http.ResponseWriter, r *http.Request) 

    }
    class prefixHandler << (S,Aquamarine) >> {
        - prefix string
        - handler http.Handler

    }
}

"healthz.mux" <|- - "mux.PathRecorderMux"
"routes.ListedPathProvider" <|- - "mux.PathRecorderMux"

namespace options {
    class APIEnablementOptions << (S,Aquamarine) >> {
        + RuntimeConfig flag.ConfigurationMap

        + AddFlags(fs *pflag.FlagSet) 
        + Validate(registries ...GroupRegistry) []error
        + ApplyTo(c *server.Config, defaultResourceConfig *storage.ResourceConfig, registry resourceconfig.GroupVersionRegistry) error

    }
    class AdmissionOptions << (S,Aquamarine) >> {
        + RecommendedPluginOrder []string
        + DefaultOffPlugins sets.String
        + EnablePlugins []string
        + DisablePlugins []string
        + ConfigFile string
        + Plugins *admission.Plugins
        + Decorators admission.Decorators

        - enabledPluginNames() []string
        - defaultEnabledPluginNames() []string

        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(c *server.Config, informers informers.SharedInformerFactory, kubeAPIServerClientConfig *rest.Config, features featuregate.FeatureGate, pluginInitializers ...admission.PluginInitializer) error
        + Validate() []error

    }
    class AuditBatchOptions << (S,Aquamarine) >> {
        + Mode string
        + BatchConfig buffered.BatchConfig

        - wrapBackend(delegate audit.Backend) audit.Backend

        + AddFlags(pluginName string, fs *pflag.FlagSet) 

    }
    class AuditDynamicOptions << (S,Aquamarine) >> {
        + Enabled bool
        + BatchConfig *buffered.BatchConfig

    }
    class AuditLogOptions << (S,Aquamarine) >> {
        + Path string
        + MaxAge int
        + MaxBackups int
        + MaxSize int
        + Format string
        + Compress bool
        + BatchOptions AuditBatchOptions
        + TruncateOptions AuditTruncateOptions
        + GroupVersionString string

        - enabled() bool
        - getWriter() (io.Writer, error)
        - ensureLogFile() error
        - newBackend(w io.Writer) audit.Backend

        + AddFlags(fs *pflag.FlagSet) 
        + Validate() []error

    }
    class AuditOptions << (S,Aquamarine) >> {
        + PolicyFile string
        + LogOptions AuditLogOptions
        + WebhookOptions AuditWebhookOptions

        - newPolicyRuleEvaluator() (audit.PolicyRuleEvaluator, error)

        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(c *server.Config) error

    }
    class AuditTruncateOptions << (S,Aquamarine) >> {
        + Enabled bool
        + TruncateConfig truncate.Config

        - wrapBackend(delegate audit.Backend, gv schema.GroupVersion) audit.Backend

        + Validate(pluginName string) error
        + AddFlags(pluginName string, fs *pflag.FlagSet) 

    }
    class AuditWebhookOptions << (S,Aquamarine) >> {
        + ConfigFile string
        + InitialBackoff time.Duration
        + BatchOptions AuditBatchOptions
        + TruncateOptions AuditTruncateOptions
        + GroupVersionString string

        - enabled() bool
        - newUntruncatedBackend(customDial net.DialFunc) (audit.Backend, error)

        + AddFlags(fs *pflag.FlagSet) 
        + Validate() []error

    }
    class CertKey << (S,Aquamarine) >> {
        + CertFile string
        + KeyFile string

    }
    class ClientCertAuthenticationOptions << (S,Aquamarine) >> {
        + ClientCA string
        + CAContentProvider dynamiccertificates.CAContentProvider

        + GetClientCAContentProvider() (dynamiccertificates.CAContentProvider, error)
        + AddFlags(fs *pflag.FlagSet) 

    }
    class CoreAPIOptions << (S,Aquamarine) >> {
        + CoreAPIKubeconfigPath string

        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(config *server.RecommendedConfig) error
        + Validate() []error

    }
    class DelegatingAuthenticationOptions << (S,Aquamarine) >> {
        + RemoteKubeConfigFile string
        + RemoteKubeConfigFileOptional bool
        + CacheTTL time.Duration
        + ClientCert ClientCertAuthenticationOptions
        + RequestHeader RequestHeaderAuthenticationOptions
        + SkipInClusterLookup bool
        + TolerateInClusterLookupFailure bool
        + WebhookRetryBackoff *wait.Backoff
        + TokenRequestTimeout time.Duration
        + CustomRoundTripperFn transport.WrapperFunc
        + DisableAnonymous bool

        - createRequestHeaderConfig(client kubernetes.Interface) (*authenticatorfactory.RequestHeaderConfig, error)
        - getClient() (kubernetes.Interface, error)

        + WithCustomRetryBackoff(backoff wait.Backoff) 
        + WithRequestTimeout(timeout time.Duration) 
        + WithCustomRoundTripper(rt transport.WrapperFunc) 
        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(authenticationInfo *server.AuthenticationInfo, servingInfo *server.SecureServingInfo, openAPIConfig *common.Config) error

    }
    class DelegatingAuthorizationOptions << (S,Aquamarine) >> {
        + RemoteKubeConfigFile string
        + RemoteKubeConfigFileOptional bool
        + AllowCacheTTL time.Duration
        + DenyCacheTTL time.Duration
        + AlwaysAllowPaths []string
        + AlwaysAllowGroups []string
        + ClientTimeout time.Duration
        + WebhookRetryBackoff *wait.Backoff
        + CustomRoundTripperFn transport.WrapperFunc

        - toAuthorizer(client kubernetes.Interface) (authorizer.Authorizer, error)
        - getClient() (kubernetes.Interface, error)

        + WithAlwaysAllowGroups(groups ...string) *DelegatingAuthorizationOptions
        + WithAlwaysAllowPaths(paths ...string) *DelegatingAuthorizationOptions
        + WithClientTimeout(timeout time.Duration) 
        + WithCustomRetryBackoff(backoff wait.Backoff) 
        + WithCustomRoundTripper(rt transport.WrapperFunc) 
        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(c *server.AuthorizationInfo) error

    }
    class DeprecatedInsecureServingOptions << (S,Aquamarine) >> {
        + BindAddress net.IP
        + BindPort int
        + BindNetwork string
        + Listener net.Listener
        + ListenFunc <font color=blue>func</font>(string, string, net.ListenConfig) (net.Listener, int, error)

        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + AddUnqualifiedFlags(fs *pflag.FlagSet) 
        + ApplyTo(c **server.DeprecatedInsecureServingInfo) error

    }
    class DynamicRequestHeaderController << (S,Aquamarine) >> {
        + RunOnce(ctx context.Context) error
        + Run(ctx context.Context, workers int) 

    }
    class EgressSelectorOptions << (S,Aquamarine) >> {
        + ConfigFile string

        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(c *server.Config) error
        + Validate() []error

    }
    class EtcdOptions << (S,Aquamarine) >> {
        - complete bool
        - resourceTransformers encryptionconfig.ResourceTransformers
        - kmsPluginHealthzChecks []healthz.HealthChecker

        + StorageConfig storagebackend.Config
        + EncryptionProviderConfigFilepath string
        + EncryptionProviderConfigAutomaticReload bool
        + EtcdServersOverrides []string
        + DefaultStorageMediaType string
        + DeleteCollectionWorkers int
        + EnableGarbageCollection bool
        + EnableWatchCache bool
        + DefaultWatchCacheSize int
        + WatchCacheSizes []string
        + SkipHealthEndpoints bool

        - addEtcdHealthEndpoint(c *server.Config) error

        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + Complete(storageObjectCountTracker request.StorageObjectCountTracker, stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}, addPostStartHook <font color=blue>func</font>(string, server.PostStartHookFunc) error) error
        + ApplyTo(c *server.Config) error
        + ApplyWithStorageFactoryTo(factory storage.StorageFactory, c *server.Config) error

    }
    class FeatureOptions << (S,Aquamarine) >> {
        + EnableProfiling bool
        + DebugSocketPath string
        + EnableContentionProfiling bool

        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(c *server.Config) error
        + Validate() []error

    }
    class GeneratableKeyCert << (S,Aquamarine) >> {
        + CertKey CertKey
        + CertDirectory string
        + PairName string
        + GeneratedCert dynamiccertificates.CertKeyContentProvider
        + FixtureDirectory string

    }
    interface GroupRegistry  {
        + IsGroupRegistered(group string) bool

    }
    class RecommendedOptions << (S,Aquamarine) >> {
        + Etcd *EtcdOptions
        + SecureServing *SecureServingOptionsWithLoopback
        + Authentication *DelegatingAuthenticationOptions
        + Authorization *DelegatingAuthorizationOptions
        + Audit *AuditOptions
        + Features *FeatureOptions
        + CoreAPI *CoreAPIOptions
        + FeatureGate featuregate.FeatureGate
        + ExtraAdmissionInitializers <font color=blue>func</font>(*server.RecommendedConfig) ([]admission.PluginInitializer, error)
        + Admission *AdmissionOptions
        + EgressSelector *EgressSelectorOptions
        + Traces *TracingOptions

        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(config *server.RecommendedConfig) error
        + Validate() []error

    }
    class RequestHeaderAuthenticationOptions << (S,Aquamarine) >> {
        + ClientCAFile string
        + UsernameHeaders []string
        + GroupHeaders []string
        + ExtraHeaderPrefixes []string
        + AllowedNames []string

        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + ToAuthenticationRequestHeaderConfig() (*authenticatorfactory.RequestHeaderConfig, error)

    }
    class SecureServingOptions << (S,Aquamarine) >> {
        + BindAddress net.IP
        + BindPort int
        + BindNetwork string
        + Required bool
        + ExternalAddress net.IP
        + Listener net.Listener
        + ServerCert GeneratableKeyCert
        + SNICertKeys []flag.NamedCertKey
        + CipherSuites []string
        + MinTLSVersion string
        + HTTP2MaxStreamsPerConnection int
        + PermitPortSharing bool
        + PermitAddressSharing bool

        + DefaultExternalAddress() (net.IP, error)
        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(config **server.SecureServingInfo) error
        + MaybeDefaultWithSelfSignedCerts(publicAddress string, alternateDNS []string, alternateIPs []net.IP) error
        + WithLoopback() *SecureServingOptionsWithLoopback

    }
    class SecureServingOptionsWithLoopback << (S,Aquamarine) >> {
        + ApplyTo(secureServingInfo **server.SecureServingInfo, loopbackClientConfig **rest.Config) error

    }
    class ServerRunOptions << (S,Aquamarine) >> {
        + AdvertiseAddress net.IP
        + CorsAllowedOriginList []string
        + HSTSDirectives []string
        + ExternalHost string
        + MaxRequestsInFlight int
        + MaxMutatingRequestsInFlight int
        + RequestTimeout time.Duration
        + GoawayChance float64
        + LivezGracePeriod time.Duration
        + MinRequestTimeout int
        + ShutdownDelayDuration time.Duration
        + JSONPatchMaxCopyBytes int64
        + MaxRequestBodyBytes int64
        + EnablePriorityAndFairness bool
        + ShutdownSendRetryAfter bool
        + ShutdownWatchTerminationGracePeriod time.Duration

        + ApplyTo(c *server.Config) error
        + DefaultAdvertiseAddress(secure *SecureServingOptions) error
        + Validate() []error
        + AddUniversalFlags(fs *pflag.FlagSet) 

    }
    class SimpleStorageFactory << (S,Aquamarine) >> {
        + StorageConfig storagebackend.Config

        + NewConfig(resource schema.GroupResource) (*storagebackend.ConfigForResource, error)
        + ResourcePrefix(resource schema.GroupResource) string
        + Backends() []storage.Backend

    }
    class StorageFactoryRestOptionsFactory << (S,Aquamarine) >> {
        + Options EtcdOptions
        + StorageFactory storage.StorageFactory

        + GetRESTOptions(resource schema.GroupResource) (generic.RESTOptions, error)

    }
    class TracingOptions << (S,Aquamarine) >> {
        + ConfigFile string

        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(es *egressselector.EgressSelector, c *server.Config) error
        + Validate() []error

    }
    class ignoreErrorsBackend << (S,Aquamarine) >> {
        + ProcessEvents(ev ...*audit.Event) bool
        + String() string

    }
    class multipleControls << (S,Aquamarine) >> {
        + Control(network string, addr string, conn syscall.RawConn) error

    }
    class options.multipleControls << (T, #FF7700) >>  {
    }
    class transformerStorageFactory << (S,Aquamarine) >> {
        - delegate storage.StorageFactory
        - resourceTransformers encryptionconfig.ResourceTransformers

        + NewConfig(resource schema.GroupResource) (*storagebackend.ConfigForResource, error)
        + ResourcePrefix(resource schema.GroupResource) string
        + Backends() []storage.Backend

    }
    class "[]<font color=blue>func</font>(string, string, syscall.RawConn) error" as fontcolorbluefuncfontstringstringsyscallRawConnerror {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}
"dynamiccertificates.ConfigMapCAController" *- - "options.DynamicRequestHeaderController"
"headerrequest.RequestHeaderAuthRequestController" *- - "options.DynamicRequestHeaderController"
"options.SecureServingOptions" *- - "options.SecureServingOptionsWithLoopback"
"audit.Backend" *- - "options.ignoreErrorsBackend"

"dynamiccertificates.ControllerRunner" <|- - "options.DynamicRequestHeaderController"
"storage.StorageFactory" <|- - "options.SimpleStorageFactory"
"storage.StorageFactory" <|- - "options.transformerStorageFactory"

namespace resourceconfig {
    interface GroupVersionRegistry  {
        + IsGroupRegistered(group string) bool
        + IsVersionRegistered(v schema.GroupVersion) bool
        + PrioritizedVersionsAllGroups() []schema.GroupVersion

    }
}


namespace routes {
    class DebugFlags << (S,Aquamarine) >> {
        - addFlag(flag string) 

        + Install(c *mux.PathRecorderMux, flag string, handler <font color=blue>func</font>(http.ResponseWriter, *http.Request) ) 
        + Index(w http.ResponseWriter, r *http.Request) 

    }
    class DebugSocket << (S,Aquamarine) >> {
        - path string
        - mux *http.ServeMux

        + InstallProfiling() 
        + InstallDebugFlag(flag string, handler <font color=blue>func</font>(http.ResponseWriter, *http.Request) ) 
        + Run(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) error

    }
    class DefaultMetrics << (S,Aquamarine) >> {
        + Install(c *mux.PathRecorderMux) 

    }
    class Index << (S,Aquamarine) >> {
        + Install(pathProvider ListedPathProvider, mux *mux.PathRecorderMux) 

    }
    class IndexLister << (S,Aquamarine) >> {
        + StatusCode int
        + PathProvider ListedPathProvider

        + ServeHTTP(w http.ResponseWriter, r *http.Request) 

    }
    interface ListedPathProvider  {
        + ListedPaths() []string

    }
    class ListedPathProviders << (S,Aquamarine) >> {
        + ListedPaths() []string

    }
    class MetricsWithReset << (S,Aquamarine) >> {
        + Install(c *mux.PathRecorderMux) 

    }
    class OpenAPI << (S,Aquamarine) >> {
        + Config *common.Config

        + InstallV2(c *v3.Container, mux *mux.PathRecorderMux) (*handler.OpenAPIService, *spec.Swagger)
        + InstallV3(c *v3.Container, mux *mux.PathRecorderMux) *handler3.OpenAPIService

    }
    class Profiling << (S,Aquamarine) >> {
        + Install(c *mux.PathRecorderMux) 

    }
    class Version << (S,Aquamarine) >> {
        + Version *version.Info

        - handleVersion(req *v3.Request, resp *v3.Response) 

        + Install(c *v3.Container) 

    }
    class debugFlag << (S,Aquamarine) >> {
        + Flag string

    }
    class routes.ListedPathProviders << (T, #FF7700) >>  {
    }
    class routes.StringFlagSetterFunc << (T, #FF7700) >>  {
    }
}

"routes.ListedPathProvider" <|- - "routes.ListedPathProviders"

namespace server {
    class APIGroupInfo << (S,Aquamarine) >> {
        + PrioritizedVersions []schema.GroupVersion
        + VersionedResourcesStorageMap <font color=blue>map</font>[string]<font color=blue>map</font>[string]rest.Storage
        + OptionsExternalVersion *schema.GroupVersion
        + MetaGroupVersion *schema.GroupVersion
        + Scheme *runtime.Scheme
        + NegotiatedSerializer runtime.NegotiatedSerializer
        + ParameterCodec runtime.ParameterCodec
        + StaticOpenAPISpec *spec.Swagger

        - destroyStorage() 

    }
    class APIServerHandler << (S,Aquamarine) >> {
        + FullHandlerChain http.Handler
        + GoRestfulContainer *restful.Container
        + NonGoRestfulMux *mux.PathRecorderMux
        + Director http.Handler

        + ListedPaths() []string
        + ServeHTTP(w http.ResponseWriter, r *http.Request) 

    }
    class AuthenticationInfo << (S,Aquamarine) >> {
        + APIAudiences authenticator.Audiences
        + Authenticator authenticator.Request

        + ApplyClientCert(clientCA dynamiccertificates.CAContentProvider, servingInfo *SecureServingInfo) error

    }
    class AuthorizationInfo << (S,Aquamarine) >> {
        + Authorizer authorizer.Authorizer

    }
    class CompletedConfig << (S,Aquamarine) >> {
    }
    class Config << (S,Aquamarine) >> {
        - lifecycleSignals lifecycleSignals

        + SecureServing *SecureServingInfo
        + Authentication AuthenticationInfo
        + Authorization AuthorizationInfo
        + LoopbackClientConfig *rest.Config
        + EgressSelector *egressselector.EgressSelector
        + RuleResolver authorizer.RuleResolver
        + AdmissionControl admission.Interface
        + CorsAllowedOriginList []string
        + HSTSDirectives []string
        + FlowControl flowcontrol.Interface
        + EnableIndex bool
        + EnableProfiling bool
        + DebugSocketPath string
        + EnableDiscovery bool
        + EnableContentionProfiling bool
        + EnableMetrics bool
        + DisabledPostStartHooks sets.String
        + PostStartHooks <font color=blue>map</font>[string]PostStartHookConfigEntry
        + Version *version.Info
        + AuditBackend audit.Backend
        + AuditPolicyRuleEvaluator audit.PolicyRuleEvaluator
        + ExternalAddress string
        + TracerProvider tracing.TracerProvider
        + BuildHandlerChainFunc <font color=blue>func</font>(http.Handler, *Config) http.Handler
        + NonLongRunningRequestWaitGroup *waitgroup.SafeWaitGroup
        + WatchRequestWaitGroup *waitgroup.RateLimitedSafeWaitGroup
        + DiscoveryAddresses discovery.Addresses
        + HealthzChecks []healthz.HealthChecker
        + LivezChecks []healthz.HealthChecker
        + ReadyzChecks []healthz.HealthChecker
        + LegacyAPIGroupPrefixes sets.String
        + RequestInfoResolver request.RequestInfoResolver
        + Serializer runtime.NegotiatedSerializer
        + OpenAPIConfig *common.Config
        + OpenAPIV3Config *common.Config
        + SkipOpenAPIInstallation bool
        + RESTOptionsGetter generic.RESTOptionsGetter
        + RequestTimeout time.Duration
        + MinRequestTimeout int
        + LivezGracePeriod time.Duration
        + ShutdownDelayDuration time.Duration
        + JSONPatchMaxCopyBytes int64
        + MaxRequestBodyBytes int64
        + MaxRequestsInFlight int
        + MaxMutatingRequestsInFlight int
        + LongRunningFunc request.LongRunningRequestCheck
        + GoawayChance float64
        + MergedResourceConfig *storage.ResourceConfig
        + StorageObjectCountTracker request.StorageObjectCountTracker
        + ShutdownSendRetryAfter bool
        + PublicAddress net.IP
        + EquivalentResourceRegistry runtime.EquivalentResourceRegistry
        + APIServerID string
        + StorageVersionManager storageversion.Manager
        + AggregatedDiscoveryGroupManager aggregated.ResourceManager
        + ShutdownWatchTerminationGracePeriod time.Duration

        + AddHealthChecks(healthChecks ...healthz.HealthChecker) 
        + AddReadyzChecks(healthChecks ...healthz.HealthChecker) 
        + AddPostStartHook(name string, hook PostStartHookFunc) error
        + AddPostStartHookOrDie(name string, hook PostStartHookFunc) 
        + DrainedNotify() <font color=blue>chan</font> <font color=blue>struct</font>{}
        + Complete(informers informers.SharedInformerFactory) CompletedConfig

    }
    interface DelegationTarget  {
        + UnprotectedHandler() http.Handler
        + PostStartHooks() <font color=blue>map</font>[string]postStartHookEntry
        + PreShutdownHooks() <font color=blue>map</font>[string]preShutdownHookEntry
        + HealthzChecks() []healthz.HealthChecker
        + ListedPaths() []string
        + NextDelegate() DelegationTarget
        + PrepareRun() preparedGenericAPIServer
        + MuxAndDiscoveryCompleteSignals() <font color=blue>map</font>[string]<font color=blue>chan</font> <font color=blue>struct</font>{}
        + Destroy() 

    }
    class DeprecatedInsecureServingInfo << (S,Aquamarine) >> {
        + Listener net.Listener
        + Name string

        + Serve(handler http.Handler, shutdownTimeout time.Duration, stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        + NewLoopbackClientConfig() (*rest.Config, error)

    }
    class GenericAPIServer << (S,Aquamarine) >> {
        - discoveryAddresses discovery.Addresses
        - minRequestTimeout time.Duration
        - legacyAPIGroupPrefixes sets.String
        - admissionControl admission.Interface
        - listedPathProvider routes.ListedPathProvider
        - openAPIConfig *common.Config
        - openAPIV3Config *common.Config
        - skipOpenAPIInstallation bool
        - postStartHookLock sync.Mutex
        - postStartHooks <font color=blue>map</font>[string]postStartHookEntry
        - postStartHooksCalled bool
        - disabledPostStartHooks sets.String
        - preShutdownHookLock sync.Mutex
        - preShutdownHooks <font color=blue>map</font>[string]preShutdownHookEntry
        - preShutdownHooksCalled bool
        - healthzLock sync.Mutex
        - healthzChecks []healthz.HealthChecker
        - healthzChecksInstalled bool
        - livezLock sync.Mutex
        - livezChecks []healthz.HealthChecker
        - livezChecksInstalled bool
        - readyzLock sync.Mutex
        - readyzChecks []healthz.HealthChecker
        - readyzChecksInstalled bool
        - livezGracePeriod time.Duration
        - livezClock clock.Clock
        - delegationTarget DelegationTarget
        - maxRequestBodyBytes int64
        - lifecycleSignals lifecycleSignals
        - destroyFns []<font color=blue>func</font>() 
        - muxAndDiscoveryCompleteSignals <font color=blue>map</font>[string]<font color=blue>chan</font> <font color=blue>struct</font>{}

        + LoopbackClientConfig *rest.Config
        + ShutdownTimeout time.Duration
        + SecureServingInfo *SecureServingInfo
        + ExternalAddress string
        + Serializer runtime.NegotiatedSerializer
        + Handler *APIServerHandler
        + UnprotectedDebugSocket *routes.DebugSocket
        + DiscoveryGroupManager discovery.GroupManager
        + AggregatedDiscoveryGroupManager aggregated.ResourceManager
        + AggregatedLegacyDiscoveryGroupManager aggregated.ResourceManager
        + OpenAPIVersionedService *handler.OpenAPIService
        + OpenAPIV3VersionedService *handler3.OpenAPIService
        + StaticOpenAPISpec *spec.Swagger
        + AuditBackend audit.Backend
        + Authorizer authorizer.Authorizer
        + EquivalentResourceRegistry runtime.EquivalentResourceRegistry
        + NonLongRunningRequestWaitGroup *waitgroup.SafeWaitGroup
        + WatchRequestWaitGroup *waitgroup.RateLimitedSafeWaitGroup
        + ShutdownDelayDuration time.Duration
        + APIServerID string
        + StorageVersionManager storageversion.Manager
        + Version *version.Info
        + ShutdownSendRetryAfter bool
        + ShutdownWatchTerminationGracePeriod time.Duration

        - installAPIResources(apiPrefix string, apiGroupInfo *APIGroupInfo, openAPIModels *spec.Swagger) error
        - getAPIGroupVersion(apiGroupInfo *APIGroupInfo, groupVersion schema.GroupVersion, apiPrefix string) (*endpoints.APIGroupVersion, error)
        - newAPIGroupVersion(apiGroupInfo *APIGroupInfo, groupVersion schema.GroupVersion) *endpoints.APIGroupVersion
        - getOpenAPIModels(apiPrefix string, apiGroupInfos ...*APIGroupInfo) (*spec.Swagger, error)
        - addHealthChecks(livezGracePeriod time.Duration, checks ...healthz.HealthChecker) error
        - addReadyzShutdownCheck(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        - installHealthz() 
        - installReadyz() 
        - installLivez() 
        - isPostStartHookRegistered(name string) bool

        + UnprotectedHandler() http.Handler
        + PostStartHooks() <font color=blue>map</font>[string]postStartHookEntry
        + PreShutdownHooks() <font color=blue>map</font>[string]preShutdownHookEntry
        + HealthzChecks() []healthz.HealthChecker
        + ListedPaths() []string
        + NextDelegate() DelegationTarget
        + RegisterMuxAndDiscoveryCompleteSignal(signalName string, signal <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        + MuxAndDiscoveryCompleteSignals() <font color=blue>map</font>[string]<font color=blue>chan</font> <font color=blue>struct</font>{}
        + RegisterDestroyFunc(destroyFn <font color=blue>func</font>() ) 
        + Destroy() 
        + PrepareRun() preparedGenericAPIServer
        + InstallLegacyAPIGroup(apiPrefix string, apiGroupInfo *APIGroupInfo) error
        + InstallAPIGroups(apiGroupInfos ...*APIGroupInfo) error
        + InstallAPIGroup(apiGroupInfo *APIGroupInfo) error
        + AddHealthChecks(checks ...healthz.HealthChecker) error
        + AddBootSequenceHealthChecks(checks ...healthz.HealthChecker) error
        + AddReadyzChecks(checks ...healthz.HealthChecker) error
        + AddLivezChecks(delay time.Duration, checks ...healthz.HealthChecker) error
        + AddPostStartHook(name string, hook PostStartHookFunc) error
        + AddPostStartHookOrDie(name string, hook PostStartHookFunc) 
        + AddPreShutdownHook(name string, hook PreShutdownHookFunc) error
        + AddPreShutdownHookOrDie(name string, hook PreShutdownHookFunc) 
        + RunPostStartHooks(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) 
        + RunPreShutdownHooks() error

    }
    class InsecureSuperuser << (S,Aquamarine) >> {
        + AuthenticateRequest(req *http.Request) (*authenticator.Response, bool, error)

    }
    class PostStartHookConfigEntry << (S,Aquamarine) >> {
        - hook PostStartHookFunc
        - originatingStack string

    }
    class PostStartHookContext << (S,Aquamarine) >> {
        + LoopbackClientConfig *rest.Config
        + StopCh <font color=blue>chan</font> <font color=blue>struct</font>{}

    }
    interface PostStartHookProvider  {
        + PostStartHook() (string, PostStartHookFunc, error)

    }
    class RecommendedConfig << (S,Aquamarine) >> {
        + SharedInformerFactory informers.SharedInformerFactory
        + ClientConfig *rest.Config

        + Complete() CompletedConfig

    }
    interface ResourceExpirationEvaluator  {
        + RemoveDeletedKinds(groupName string, versioner runtime.ObjectVersioner, versionedResourcesStorageMap <font color=blue>map</font>[string]<font color=blue>map</font>[string]rest.Storage) 
        + ShouldServeForVersion(majorRemoved int, minorRemoved int) bool

    }
    class SecureServingInfo << (S,Aquamarine) >> {
        + Listener net.Listener
        + Cert dynamiccertificates.CertKeyContentProvider
        + SNICerts []dynamiccertificates.SNICertKeyContentProvider
        + ClientCA dynamiccertificates.CAContentProvider
        + MinTLSVersion uint16
        + CipherSuites []uint16
        + HTTP2MaxStreamsPerConnection int
        + DisableHTTP2 bool

        - tlsConfig(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) (*tls.Config, error)

        + HostPort() (string, int, error)
        + NewClientConfig(caCert []byte) (*rest.Config, error)
        + NewLoopbackClientConfig(token string, loopbackCert []byte) (*rest.Config, error)
        + Serve(handler http.Handler, shutdownTimeout time.Duration, stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) (<font color=blue>chan</font> <font color=blue>struct</font>{}, <font color=blue>chan</font> <font color=blue>struct</font>{}, error)

    }
    class completedConfig << (S,Aquamarine) >> {
        + SharedInformerFactory informers.SharedInformerFactory

        + New(name string, delegationTarget DelegationTarget) (*GenericAPIServer, error)

    }
    class delayedLivezCheck << (S,Aquamarine) >> {
        - check healthz.HealthChecker
        - startCheck time.Time
        - clock clock.Clock

        + Name() string
        + Check(req *http.Request) error

    }
    class director << (S,Aquamarine) >> {
        - name string
        - goRestfulContainer *restful.Container
        - nonGoRestfulMux *mux.PathRecorderMux

        + ServeHTTP(w http.ResponseWriter, req *http.Request) 

    }
    class emptyDelegate << (S,Aquamarine) >> {
        - handler http.Handler

        + UnprotectedHandler() http.Handler
        + PostStartHooks() <font color=blue>map</font>[string]postStartHookEntry
        + PreShutdownHooks() <font color=blue>map</font>[string]preShutdownHookEntry
        + HealthzChecks() []healthz.HealthChecker
        + ListedPaths() []string
        + NextDelegate() DelegationTarget
        + PrepareRun() preparedGenericAPIServer
        + MuxAndDiscoveryCompleteSignals() <font color=blue>map</font>[string]<font color=blue>chan</font> <font color=blue>struct</font>{}
        + Destroy() 

    }
    interface lifecycleSignal  {
        + Signal() 
        + Signaled() <font color=blue>chan</font> <font color=blue>struct</font>{}
        + Name() string

    }
    class lifecycleSignals << (S,Aquamarine) >> {
        + ShutdownInitiated lifecycleSignal
        + AfterShutdownDelayDuration lifecycleSignal
        + PreShutdownHooksStopped lifecycleSignal
        + NotAcceptingNewRequest lifecycleSignal
        + InFlightRequestsDrained lifecycleSignal
        + HTTPServerStoppedListening lifecycleSignal
        + HasBeenReady lifecycleSignal
        + MuxAndDiscoveryComplete lifecycleSignal

        + ShuttingDown() <font color=blue>chan</font> <font color=blue>struct</font>{}

    }
    class namedChannelWrapper << (S,Aquamarine) >> {
        - name string
        - once sync.Once
        - ch <font color=blue>chan</font> <font color=blue>struct</font>{}

        + Signal() 
        + Signaled() <font color=blue>chan</font> <font color=blue>struct</font>{}
        + Name() string

    }
    class postStartHookEntry << (S,Aquamarine) >> {
        - hook PostStartHookFunc
        - originatingStack string
        - done <font color=blue>chan</font> <font color=blue>struct</font>{}

    }
    class postStartHookHealthz << (S,Aquamarine) >> {
        - name string
        - done <font color=blue>chan</font> <font color=blue>struct</font>{}

        + Name() string
        + Check(req *http.Request) error

    }
    class preShutdownHookEntry << (S,Aquamarine) >> {
        - hook PreShutdownHookFunc

    }
    class preparedGenericAPIServer << (S,Aquamarine) >> {
        + Run(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        + NonBlockingRun(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}, shutdownTimeout time.Duration) (<font color=blue>chan</font> <font color=blue>struct</font>{}, <font color=blue>chan</font> <font color=blue>struct</font>{}, error)

    }
    interface removedInterface  {
        + APILifecycleRemoved() (int, int)

    }
    class resourceExpirationEvaluator << (S,Aquamarine) >> {
        - currentMajor int
        - currentMinor int
        - isAlpha bool
        - strictRemovedHandlingInAlpha bool
        - serveRemovedAPIsOneMoreRelease bool

        - shouldServe(gv schema.GroupVersion, versioner runtime.ObjectVersioner, resourceServingInfo rest.Storage) bool

        + ShouldServeForVersion(majorRemoved int, minorRemoved int) bool
        + RemoveDeletedKinds(groupName string, versioner runtime.ObjectVersioner, versionedResourcesStorageMap <font color=blue>map</font>[string]<font color=blue>map</font>[string]rest.Storage) 

    }
    class server.HandlerChainBuilderFn << (T, #FF7700) >>  {
    }
    class server.PostStartHookFunc << (T, #FF7700) >>  {
    }
    class server.PreShutdownHookFunc << (T, #FF7700) >>  {
    }
    class shutdownCheck << (S,Aquamarine) >> {
        + StopCh <font color=blue>chan</font> <font color=blue>struct</font>{}

        + Name() string
        + Check(req *http.Request) error

    }
    class tcpKeepAliveListener << (S,Aquamarine) >> {
        + Accept() (net.Conn, error)

    }
    class tlsHandshakeErrorWriter << (S,Aquamarine) >> {
        - out io.Writer

        + Write(p []byte) (int, error)

    }
    class "<font color=blue>func</font>(http.Handler) http.Handler" as fontcolorbluefuncfonthttpHandlerhttpHandler {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}
"server.completedConfig" *- - "server.CompletedConfig"
"server.Config" *- - "server.RecommendedConfig"
"server.Config" *- - "server.completedConfig"
"server.GenericAPIServer" *- - "server.preparedGenericAPIServer"
"net.Listener" *- - "server.tcpKeepAliveListener"

"routes.ListedPathProvider" <|- - "server.APIServerHandler"
"routes.ListedPathProvider" <|- - "server.GenericAPIServer"
"server.DelegationTarget" <|- - "server.GenericAPIServer"
"healthz.HealthChecker" <|- - "server.delayedLivezCheck"
"routes.ListedPathProvider" <|- - "server.emptyDelegate"
"server.DelegationTarget" <|- - "server.emptyDelegate"
"server.lifecycleSignal" <|- - "server.namedChannelWrapper"
"healthz.HealthChecker" <|- - "server.postStartHookHealthz"
"server.ResourceExpirationEvaluator" <|- - "server.resourceExpirationEvaluator"
"healthz.HealthChecker" <|- - "server.shutdownCheck"

namespace storage {
    interface APIResourceConfigSource  {
        + ResourceEnabled(resource schema.GroupVersionResource) bool
        + AnyResourceForGroupEnabled(group string) bool

    }
    class Backend << (S,Aquamarine) >> {
        + Server string
        + TLSConfig *tls.Config

    }
    class DefaultResourceEncodingConfig << (S,Aquamarine) >> {
        - resources <font color=blue>map</font>[schema.GroupResource]*OverridingResourceEncoding
        - scheme *runtime.Scheme

        + SetResourceEncoding(resourceBeingStored schema.GroupResource, externalEncodingVersion schema.GroupVersion, internalVersion schema.GroupVersion) 
        + StorageEncodingFor(resource schema.GroupResource) (schema.GroupVersion, error)
        + InMemoryEncodingFor(resource schema.GroupResource) (schema.GroupVersion, error)

    }
    class DefaultStorageFactory << (S,Aquamarine) >> {
        - newStorageCodecFn <font color=blue>func</font>(StorageCodecConfig) (runtime.Codec, runtime.GroupVersioner, error)

        + StorageConfig storagebackend.Config
        + Overrides <font color=blue>map</font>[schema.GroupResource]groupResourceOverrides
        + DefaultResourcePrefixes <font color=blue>map</font>[schema.GroupResource]string
        + DefaultMediaType string
        + DefaultSerializer runtime.StorageSerializer
        + ResourceEncodingConfig ResourceEncodingConfig
        + APIResourceConfigSource APIResourceConfigSource

        - getStorageGroupResource(groupResource schema.GroupResource) schema.GroupResource

        + SetEtcdLocation(groupResource schema.GroupResource, location []string) 
        + SetEtcdPrefix(groupResource schema.GroupResource, prefix string) 
        + SetDisableAPIListChunking(groupResource schema.GroupResource) 
        + SetResourceEtcdPrefix(groupResource schema.GroupResource, prefix string) 
        + SetSerializer(groupResource schema.GroupResource, mediaType string, serializer runtime.StorageSerializer) 
        + AddCohabitatingResources(groupResources ...schema.GroupResource) 
        + AddSerializationChains(encoderDecoratorFn <font color=blue>func</font>(runtime.Encoder) runtime.Encoder, decoderDecoratorFn <font color=blue>func</font>([]runtime.Decoder) []runtime.Decoder, groupResources ...schema.GroupResource) 
        + NewConfig(groupResource schema.GroupResource) (*storagebackend.ConfigForResource, error)
        + Backends() []Backend
        + ResourcePrefix(groupResource schema.GroupResource) string

    }
    class OverridingResourceEncoding << (S,Aquamarine) >> {
        + ExternalResourceEncoding schema.GroupVersion
        + InternalResourceEncoding schema.GroupVersion

    }
    class ResourceConfig << (S,Aquamarine) >> {
        + GroupVersionConfigs <font color=blue>map</font>[schema.GroupVersion]bool
        + ResourceConfigs <font color=blue>map</font>[schema.GroupVersionResource]bool

        - removeMatchingResourcePreferences(matcher <font color=blue>func</font>(schema.GroupVersionResource) bool) 
        - versionEnabled(version schema.GroupVersion) bool

        + DisableMatchingVersions(matcher <font color=blue>func</font>(schema.GroupVersion) bool) 
        + EnableMatchingVersions(matcher <font color=blue>func</font>(schema.GroupVersion) bool) 
        + DisableVersions(versions ...schema.GroupVersion) 
        + EnableVersions(versions ...schema.GroupVersion) 
        + DisableResources(resources ...schema.GroupVersionResource) 
        + EnableResources(resources ...schema.GroupVersionResource) 
        + ResourceEnabled(resource schema.GroupVersionResource) bool
        + AnyResourceForGroupEnabled(group string) bool

    }
    interface ResourceEncodingConfig  {
        + StorageEncodingFor( schema.GroupResource) (schema.GroupVersion, error)
        + InMemoryEncodingFor( schema.GroupResource) (schema.GroupVersion, error)

    }
    class StorageCodecConfig << (S,Aquamarine) >> {
        + StorageMediaType string
        + StorageSerializer runtime.StorageSerializer
        + StorageVersion schema.GroupVersion
        + MemoryVersion schema.GroupVersion
        + Config storagebackend.Config
        + EncoderDecoratorFn <font color=blue>func</font>(runtime.Encoder) runtime.Encoder
        + DecoderDecoratorFn <font color=blue>func</font>([]runtime.Decoder) []runtime.Decoder

    }
    interface StorageFactory  {
        + NewConfig(groupResource schema.GroupResource) (*storagebackend.ConfigForResource, error)
        + ResourcePrefix(groupResource schema.GroupResource) string
        + Backends() []Backend

    }
    class groupResourceOverrides << (S,Aquamarine) >> {
        - etcdLocation []string
        - etcdPrefix string
        - etcdResourcePrefix string
        - mediaType string
        - serializer runtime.StorageSerializer
        - cohabitatingResources []schema.GroupResource
        - encoderDecoratorFn <font color=blue>func</font>(runtime.Encoder) runtime.Encoder
        - decoderDecoratorFn <font color=blue>func</font>([]runtime.Decoder) []runtime.Decoder
        - disablePaging bool

        + Apply(config *storagebackend.Config, options *StorageCodecConfig) 

    }
}

"storage.ResourceEncodingConfig" <|- - "storage.DefaultResourceEncodingConfig"
"storage.StorageFactory" <|- - "storage.DefaultStorageFactory"
"storage.APIResourceConfigSource" <|- - "storage.ResourceConfig"

hide fields
hide methods
@enduml

@startuml
namespace controller {
    class DynamicKMSEncryptionConfigContent << (S,Aquamarine) >> {
        - name string
        - filePath string
        - lastLoadedEncryptionConfigHash string
        - queue workqueue.RateLimitingInterface
        - dynamicTransformers *encryptionconfig.DynamicTransformers

        - watchEncryptionConfigFile(ctx context.Context) error
        - handleWatchEvent(event fsnotify.Event, watcher *fsnotify.Watcher) error
        - runWorker(ctx context.Context) 
        - processNextWorkItem(serverCtx context.Context) bool
        - processEncryptionConfig(ctx context.Context) (*encryptionconfig.EncryptionConfiguration, bool, error)
        - validateNewTransformersHealth(ctx context.Context, kmsPluginHealthzCheck healthz.HealthChecker, kmsPluginCloseGracePeriod time.Duration) error

        + Run(ctx context.Context) 

    }
}


namespace dynamiccertificates {
    interface CAContentProvider  {
        + Name() string
        + CurrentCABundleContent() []byte
        + VerifyOptions() (x509.VerifyOptions, bool)

    }
    interface CertKeyContentProvider  {
        + Name() string
        + CurrentCertKeyContent() ([]byte, []byte)

    }
    class ConfigMapCAController << (S,Aquamarine) >> {
        - name string
        - configmapLister v1.ConfigMapLister
        - configmapNamespace string
        - configmapName string
        - configmapKey string
        - configMapInformer cache.SharedIndexInformer
        - caBundle atomic.Value
        - listeners []Listener
        - queue workqueue.RateLimitingInterface
        - preRunCaches []cache.InformerSynced

        - keyFn() string
        - loadCABundle() error
        - hasCAChanged(caBundle []byte) bool
        - runWorker() 
        - processNextWorkItem() bool

        + AddListener(listener Listener) 
        + RunOnce(ctx context.Context) error
        + Run(ctx context.Context, workers int) 
        + Name() string
        + CurrentCABundleContent() []byte
        + VerifyOptions() (x509.VerifyOptions, bool)

    }
    interface ControllerRunner  {
        + RunOnce(ctx context.Context) error
        + Run(ctx context.Context, workers int) 

    }
    class DynamicCertKeyPairContent << (S,Aquamarine) >> {
        - name string
        - certFile string
        - keyFile string
        - certKeyPair atomic.Value
        - listeners []Listener
        - queue workqueue.RateLimitingInterface

        - loadCertKeyPair() error
        - watchCertKeyFile(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        - handleWatchEvent(e fsnotify.Event, w *fsnotify.Watcher) error
        - runWorker() 
        - processNextWorkItem() bool

        + AddListener(listener Listener) 
        + RunOnce(ctx context.Context) error
        + Run(ctx context.Context, workers int) 
        + Name() string
        + CurrentCertKeyContent() ([]byte, []byte)

    }
    class DynamicFileCAContent << (S,Aquamarine) >> {
        - name string
        - filename string
        - caBundle atomic.Value
        - listeners []Listener
        - queue workqueue.RateLimitingInterface

        - loadCABundle() error
        - hasCAChanged(caBundle []byte) bool
        - watchCAFile(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        - handleWatchEvent(e fsnotify.Event, w *fsnotify.Watcher) error
        - runWorker() 
        - processNextWorkItem() bool

        + AddListener(listener Listener) 
        + RunOnce(ctx context.Context) error
        + Run(ctx context.Context, workers int) 
        + Name() string
        + CurrentCABundleContent() []byte
        + VerifyOptions() (x509.VerifyOptions, bool)

    }
    class DynamicFileSNIContent << (S,Aquamarine) >> {
        - sniNames []string

        + SNINames() []string

    }
    class DynamicServingCertificateController << (S,Aquamarine) >> {
        - baseTLSConfig *tls.Config
        - clientCA CAContentProvider
        - servingCert CertKeyContentProvider
        - sniCerts []SNICertKeyContentProvider
        - currentlyServedContent *dynamicCertificateContent
        - currentServingTLSConfig atomic.Value
        - queue workqueue.RateLimitingInterface
        - eventRecorder events.EventRecorder

        - newTLSContent() (*dynamicCertificateContent, error)
        - syncCerts() error
        - runWorker() 
        - processNextWorkItem() bool

        + BuildNamedCertificates(sniCerts []sniCertKeyContent) (<font color=blue>map</font>[string]*tls.Certificate, error)
        + GetConfigForClient(clientHello *tls.ClientHelloInfo) (*tls.Config, error)
        + RunOnce() error
        + Run(workers int, stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) 
        + Enqueue() 

    }
    interface Listener  {
        + Enqueue() 

    }
    interface Notifier  {
        + AddListener(listener Listener) 

    }
    interface SNICertKeyContentProvider  {
        + SNINames() []string

    }
    class caBundleAndVerifier << (S,Aquamarine) >> {
        - caBundle []byte
        - verifyOptions x509.VerifyOptions

    }
    class caBundleContent << (S,Aquamarine) >> {
        - caBundle []byte

        + Equal(rhs *caBundleContent) bool

    }
    class certKeyContent << (S,Aquamarine) >> {
        - cert []byte
        - key []byte

        + Equal(rhs *certKeyContent) bool

    }
    class dynamicCertificateContent << (S,Aquamarine) >> {
        - clientCA caBundleContent
        - servingCert certKeyContent
        - sniCerts []sniCertKeyContent

        + Equal(rhs *dynamicCertificateContent) bool

    }
    class dynamiccertificates.unionCAContent << (T, #FF7700) >>  {
    }
    class sniCertKeyContent << (S,Aquamarine) >> {
        - sniNames []string

        + Equal(rhs *sniCertKeyContent) bool

    }
    class staticCAContent << (S,Aquamarine) >> {
        - name string
        - caBundle *caBundleAndVerifier

        + Name() string
        + AddListener( Listener) 
        + CurrentCABundleContent() []byte
        + VerifyOptions() (x509.VerifyOptions, bool)

    }
    class staticCertKeyContent << (S,Aquamarine) >> {
        - name string
        - cert []byte
        - key []byte

        + Name() string
        + AddListener( Listener) 
        + CurrentCertKeyContent() ([]byte, []byte)

    }
    class staticSNICertKeyContent << (S,Aquamarine) >> {
        - sniNames []string

        + SNINames() []string
        + AddListener( Listener) 

    }
    class unionCAContent << (S,Aquamarine) >> {
        + Name() string
        + CurrentCABundleContent() []byte
        + VerifyOptions() (x509.VerifyOptions, bool)
        + AddListener(listener Listener) 
        + RunOnce(ctx context.Context) error
        + Run(ctx context.Context, workers int) 

    }
}
"dynamiccertificates.Notifier" *- - "dynamiccertificates.CAContentProvider"
"dynamiccertificates.Notifier" *- - "dynamiccertificates.CertKeyContentProvider"
"dynamiccertificates.DynamicCertKeyPairContent" *- - "dynamiccertificates.DynamicFileSNIContent"
"dynamiccertificates.CertKeyContentProvider" *- - "dynamiccertificates.SNICertKeyContentProvider"
"dynamiccertificates.Notifier" *- - "dynamiccertificates.SNICertKeyContentProvider"
"dynamiccertificates.certKeyContent" *- - "dynamiccertificates.sniCertKeyContent"
"dynamiccertificates.staticCertKeyContent" *- - "dynamiccertificates.staticSNICertKeyContent"

"dynamiccertificates.CAContentProvider" <|- - "dynamiccertificates.ConfigMapCAController"
"dynamiccertificates.ControllerRunner" <|- - "dynamiccertificates.ConfigMapCAController"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.ConfigMapCAController"
"dynamiccertificates.CertKeyContentProvider" <|- - "dynamiccertificates.DynamicCertKeyPairContent"
"dynamiccertificates.ControllerRunner" <|- - "dynamiccertificates.DynamicCertKeyPairContent"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.DynamicCertKeyPairContent"
"dynamiccertificates.CAContentProvider" <|- - "dynamiccertificates.DynamicFileCAContent"
"dynamiccertificates.ControllerRunner" <|- - "dynamiccertificates.DynamicFileCAContent"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.DynamicFileCAContent"
"dynamiccertificates.SNICertKeyContentProvider" <|- - "dynamiccertificates.DynamicFileSNIContent"
"dynamiccertificates.Listener" <|- - "dynamiccertificates.DynamicServingCertificateController"
"dynamiccertificates.CAContentProvider" <|- - "dynamiccertificates.staticCAContent"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.staticCAContent"
"dynamiccertificates.CertKeyContentProvider" <|- - "dynamiccertificates.staticCertKeyContent"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.staticCertKeyContent"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.staticSNICertKeyContent"
"dynamiccertificates.SNICertKeyContentProvider" <|- - "dynamiccertificates.staticSNICertKeyContent"
"dynamiccertificates.CAContentProvider" <|- - "dynamiccertificates.unionCAContent"
"dynamiccertificates.ControllerRunner" <|- - "dynamiccertificates.unionCAContent"
"dynamiccertificates.Notifier" <|- - "dynamiccertificates.unionCAContent"

namespace egressselector {
    class EgressSelector << (S,Aquamarine) >> {
        - egressToDialer <font color=blue>map</font>[EgressType]net.DialFunc

        + Lookup(networkContext NetworkContext) (net.DialFunc, error)

    }
    class EgressType << (S,Aquamarine) >> {
        + String() string
        + AsNetworkContext() NetworkContext

    }
    class NetworkContext << (S,Aquamarine) >> {
        + EgressSelectionName EgressType

    }
    class dialerCreator << (S,Aquamarine) >> {
        - connector proxyServerConnector
        - direct bool
        - options metricsOptions

        - createDialer() net.DialFunc

    }
    class egressselector.EgressType << (T, #FF7700) >>  {
    }
    class egressselector.Lookup << (T, #FF7700) >>  {
    }
    class grpcProxier << (S,Aquamarine) >> {
        - tunnel client.Tunnel

        - proxy(ctx context.Context, addr string) (net.Conn, error)

    }
    class httpConnectProxier << (S,Aquamarine) >> {
        - conn net.Conn
        - proxyAddress string

        - proxy(ctx context.Context, addr string) (net.Conn, error)

    }
    class metricsOptions << (S,Aquamarine) >> {
        - transport string
        - protocol string

    }
    interface proxier  {
        - proxy(ctx context.Context, addr string) (net.Conn, error)

    }
    interface proxyServerConnector  {
        - connect( context.Context) (proxier, error)

    }
    class tcpHTTPConnectConnector << (S,Aquamarine) >> {
        - proxyAddress string
        - tlsConfig *tls.Config

        - connect(ctx context.Context) (proxier, error)

    }
    class udsGRPCConnector << (S,Aquamarine) >> {
        - udsName string

        - connect(_ context.Context) (proxier, error)

    }
    class udsHTTPConnectConnector << (S,Aquamarine) >> {
        - udsName string

        - connect(ctx context.Context) (proxier, error)

    }
    class "<font color=blue>func</font>(NetworkContext) (net.DialFunc, error)" as fontcolorbluefuncfontNetworkContextnetDialFuncerror {
    }
}

"egressselector.proxier" <|- - "egressselector.grpcProxier"
"egressselector.proxier" <|- - "egressselector.httpConnectProxier"
"egressselector.proxyServerConnector" <|- - "egressselector.tcpHTTPConnectConnector"
"egressselector.proxyServerConnector" <|- - "egressselector.udsGRPCConnector"
"egressselector.proxyServerConnector" <|- - "egressselector.udsHTTPConnectConnector"

namespace encryptionconfig {
    class DynamicTransformers << (S,Aquamarine) >> {
        - transformTracker *atomic.Value

        + Check(req *http.Request) error
        + Name() string
        + TransformerForResource(resource schema.GroupResource) value.Transformer
        + Set(transformerOverrides <font color=blue>map</font>[schema.GroupResource]value.Transformer, closeTransformers context.CancelFunc, kmsPluginHealthzCheck healthz.HealthChecker, kmsCloseGracePeriod time.Duration) 

    }
    class EncryptionConfiguration << (S,Aquamarine) >> {
        + Transformers <font color=blue>map</font>[schema.GroupResource]value.Transformer
        + HealthChecks []healthz.HealthChecker
        + EncryptionFileContentHash string
        + KMSCloseGracePeriod time.Duration

    }
    interface ResourceTransformers  {
        + TransformerForResource(resource schema.GroupResource) value.Transformer

    }
    class StaticTransformers << (S,Aquamarine) >> {
        + TransformerForResource(resource schema.GroupResource) value.Transformer

    }
    class encryptionconfig.StaticTransformers << (T, #FF7700) >>  {
    }
    class encryptionconfig.blockTransformerFunc << (T, #FF7700) >>  {
    }
    class encryptionconfig.kmsHealthChecker << (T, #FF7700) >>  {
    }
    class encryptionconfig.unionTransformers << (T, #FF7700) >>  {
    }
    interface healthChecker  {
        - toHealthzCheck(idx int) healthz.HealthChecker

    }
    class kmsHealthChecker << (S,Aquamarine) >> {
        + Name() string
        + Check(req *http.Request) error

    }
    class kmsPluginHealthzResponse << (S,Aquamarine) >> {
        - err error
        - received time.Time

    }
    class kmsPluginProbe << (S,Aquamarine) >> {
        - name string
        - ttl time.Duration
        - service envelope.Service
        - lastResponse *kmsPluginHealthzResponse
        - l *sync.Mutex

        - toHealthzCheck(idx int) healthz.HealthChecker
        - check() error

    }
    class kmsState << (S,Aquamarine) >> {
        - v1Used bool
        - kmsTimeoutSum time.Duration

        - accumulate(other *kmsState) 

    }
    class kmsv2PluginProbe << (S,Aquamarine) >> {
        - keyID 
        - name string
        - ttl time.Duration
        - service service.Service
        - lastResponse *kmsPluginHealthzResponse
        - l *sync.Mutex

        - toHealthzCheck(idx int) healthz.HealthChecker
        - check(ctx context.Context) error
        - getCurrentKeyID(ctx context.Context) (string, error)

    }
    class resourceTransformer << (S,Aquamarine) >> {
        - resource schema.GroupResource
        - transformTracker *atomic.Value

        - transformer() value.Transformer

        + TransformFromStorage(ctx context.Context, data []byte, dataCtx value.Context) ([]byte, bool, error)
        + TransformToStorage(ctx context.Context, data []byte, dataCtx value.Context) ([]byte, error)

    }
    class transformTracker << (S,Aquamarine) >> {
        - transformerOverrides <font color=blue>map</font>[schema.GroupResource]value.Transformer
        - kmsPluginHealthzCheck healthz.HealthChecker
        - closeTransformers context.CancelFunc
        - kmsCloseGracePeriod time.Duration

    }
    class unionTransformers << (S,Aquamarine) >> {
        + TransformFromStorage(ctx context.Context, data []byte, dataCtx value.Context) ([]byte, bool, error)
        + TransformToStorage(ctx context.Context, data []byte, dataCtx value.Context) ([]byte, error)

    }
    class "<font color=blue>func</font>(cipher.Block) value.Transformer" as fontcolorbluefuncfontcipherBlockvalueTransformer {
    }
    class "<font color=blue>map</font>[schema.GroupResource]value.Transformer" as fontcolorbluemapfontschemaGroupResourcevalueTransformer {
    }
    class "[]healthz.HealthChecker" as healthzHealthChecker {
    }
    class "[]value.Transformer" as valueTransformer {
    }
}

"encryptionconfig.ResourceTransformers" <|- - "encryptionconfig.DynamicTransformers"
"healthz.HealthChecker" <|- - "encryptionconfig.DynamicTransformers"
"encryptionconfig.ResourceTransformers" <|- - "encryptionconfig.StaticTransformers"
"healthz.HealthChecker" <|- - "encryptionconfig.kmsHealthChecker"
"encryptionconfig.healthChecker" <|- - "encryptionconfig.kmsPluginProbe"
"encryptionconfig.healthChecker" <|- - "encryptionconfig.kmsv2PluginProbe"

namespace filters {
    interface GoawayDecider  {
        + Goaway(r *http.Request) bool

    }
    class PriorityAndFairnessClassification << (S,Aquamarine) >> {
        + FlowSchemaName string
        + FlowSchemaUID types.UID
        + PriorityLevelName string
        + PriorityLevelUID types.UID

    }
    interface RequestWaitGroup  {
        + Add(delta int) error
        + Done() 

    }
    class baseTimeoutWriter << (S,Aquamarine) >> {
        - w http.ResponseWriter
        - handlerHeaders http.Header
        - mu sync.Mutex
        - timedOut bool
        - wroteHeader bool
        - hijacked bool

        - timeout(err *errors.StatusError) 

        + Unwrap() http.ResponseWriter
        + Header() http.Header
        + Write(p []byte) (int, error)
        + Flush() 
        + WriteHeader(code int) 
        + CloseNotify() <font color=blue>chan</font> bool
        + Hijack() (net.Conn, *bufio.ReadWriter, error)

    }
    class filters.isRequestExemptFunc << (T, #FF7700) >>  {
    }
    class filters.shouldRespondWithRetryAfterFunc << (T, #FF7700) >>  {
    }
    class filters.timeoutFunc << (T, #FF7700) >>  {
    }
    class goaway << (S,Aquamarine) >> {
        - handler http.Handler
        - decider GoawayDecider

        + ServeHTTP(w http.ResponseWriter, r *http.Request) 

    }
    class probabilisticGoawayDecider << (S,Aquamarine) >> {
        - chance float64
        - next <font color=blue>func</font>() float64

        + Goaway(r *http.Request) bool

    }
    class requestWatermark << (S,Aquamarine) >> {
        - phase string
        - readOnlyObserver metrics.RatioedGauge
        - lock sync.Mutex
        - readOnlyWatermark int

        - recordMutating(mutatingVal int) 
        - recordReadOnly(readOnlyVal int) 

    }
    class retryAfterParams << (S,Aquamarine) >> {
        + TearDownConnection bool
        + Message string

    }
    class timeoutHandler << (S,Aquamarine) >> {
        - handler http.Handler
        - timeout timeoutFunc

        + ServeHTTP(w http.ResponseWriter, r *http.Request) 

    }
    interface timeoutWriter  {
        - timeout( *errors.StatusError) 

    }
    class "<font color=blue>func</font>(*http.Request) bool" as fontcolorbluefuncfonthttpRequestbool {
    }
    class "<font color=blue>func</font>(*http.Request) (*http.Request, bool, <font color=blue>func</font>() , *errors.StatusError)" as fontcolorbluefuncfonthttpRequesthttpRequestboolfontcolorbluefuncfonterrorsStatusError {
    }
}

"filters.timeoutWriter" <|- - "filters.baseTimeoutWriter"
"filters.GoawayDecider" <|- - "filters.probabilisticGoawayDecider"

namespace healthz {
    interface HealthChecker  {
        + Name() string
        + Check(req *http.Request) error

    }
    interface cacheSyncWaiter  {
        + WaitForCacheSync(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) <font color=blue>map</font>[reflect.Type]bool

    }
    class healthzCheck << (S,Aquamarine) >> {
        - name string
        - check <font color=blue>func</font>(*http.Request) error

        + Name() string
        + Check(r *http.Request) error

    }
    class informerSync << (S,Aquamarine) >> {
        - cacheSyncWaiter cacheSyncWaiter

        + Name() string
        + Check(_ *http.Request) error

    }
    class log << (S,Aquamarine) >> {
        - startOnce sync.Once
        - lastVerified atomic.Value

        + Name() string
        + Check(_ *http.Request) error

    }
    interface mux  {
        + Handle(pattern string, handler http.Handler) 

    }
    class ping << (S,Aquamarine) >> {
        + Name() string
        + Check(_ *http.Request) error

    }
}

"healthz.HealthChecker" <|- - "healthz.healthzCheck"
"healthz.HealthChecker" <|- - "healthz.informerSync"
"healthz.HealthChecker" <|- - "healthz.log"
"healthz.HealthChecker" <|- - "healthz.ping"

namespace httplog {
    class httplog.ShouldLogRequestPred << (T, #FF7700) >>  {
    }
    class httplog.StacktracePred << (T, #FF7700) >>  {
    }
    class httplog.respLoggerContextKeyType << (T, #FF7700) >>  {
    }
    interface logger  {
        + Addf(format string, data ...<font color=blue>interface</font>{}) 

    }
    class passthroughLogger << (S,Aquamarine) >> {
        + Addf(format string, data ...<font color=blue>interface</font>{}) 

    }
    class respLogger << (S,Aquamarine) >> {
        - hijacked bool
        - statusRecorded bool
        - status int
        - statusStack string
        - mutex sync.Mutex
        - addedInfo strings.Builder
        - addedKeyValuePairs []<font color=blue>interface</font>{}
        - startTime time.Time
        - captureErrorOutput bool
        - req *http.Request
        - userAgent string
        - w http.ResponseWriter
        - logStacktracePred StacktracePred

        - recordStatus(status int) 

        + Unwrap() http.ResponseWriter
        + StacktraceWhen(pred StacktracePred) *respLogger
        + Addf(format string, data ...<font color=blue>interface</font>{}) 
        + AddKeyValue(key string, value <font color=blue>interface</font>{}) 
        + Log() 
        + Header() http.Header
        + Write(b []byte) (int, error)
        + WriteHeader(status int) 
        + Hijack() (net.Conn, *bufio.ReadWriter, error)

    }
}

"httplog.logger" <|- - "httplog.passthroughLogger"
"httplog.logger" <|- - "httplog.respLogger"

namespace metrics {
    class DialMetrics << (S,Aquamarine) >> {
        - clock clock.Clock
        - starts *metrics.CounterVec
        - latencies *metrics.HistogramVec
        - failures *metrics.CounterVec

        + Clock() clock.Clock
        + SetClock(c clock.Clock) 
        + Reset() 
        + ObserveDialStart(protocol string, transport string) 
        + ObserveDialLatency(elapsed time.Duration, protocol string, transport string) 
        + ObserveDialFailure(protocol string, transport string, stage string) 

    }
}


namespace mux {
    class PathRecorderMux << (S,Aquamarine) >> {
        - name string
        - lock sync.Mutex
        - notFoundHandler http.Handler
        - pathToHandler <font color=blue>map</font>[string]http.Handler
        - prefixToHandler <font color=blue>map</font>[string]http.Handler
        - mux atomic.Value
        - exposedPaths []string
        - pathStacks <font color=blue>map</font>[string]string

        - trackCallers(path string) 
        - refreshMuxLocked() 

        + ListedPaths() []string
        + NotFoundHandler(notFoundHandler http.Handler) 
        + Unregister(path string) 
        + Handle(path string, handler http.Handler) 
        + HandleFunc(path string, handler <font color=blue>func</font>(http.ResponseWriter, *http.Request) ) 
        + UnlistedHandle(path string, handler http.Handler) 
        + UnlistedHandleFunc(path string, handler <font color=blue>func</font>(http.ResponseWriter, *http.Request) ) 
        + HandlePrefix(path string, handler http.Handler) 
        + UnlistedHandlePrefix(path string, handler http.Handler) 
        + ServeHTTP(w http.ResponseWriter, r *http.Request) 

    }
    class byPrefixPriority << (S,Aquamarine) >> {
        + Len() int
        + Swap(i int, j int) 
        + Less(i int, j int) bool

    }
    class mux.byPrefixPriority << (T, #FF7700) >>  {
    }
    class pathHandler << (S,Aquamarine) >> {
        - muxName string
        - pathToHandler <font color=blue>map</font>[string]http.Handler
        - prefixHandlers []prefixHandler
        - notFoundHandler http.Handler

        + ServeHTTP(w http.ResponseWriter, r *http.Request) 

    }
    class prefixHandler << (S,Aquamarine) >> {
        - prefix string
        - handler http.Handler

    }
}

"healthz.mux" <|- - "mux.PathRecorderMux"
"routes.ListedPathProvider" <|- - "mux.PathRecorderMux"

namespace options {
    class APIEnablementOptions << (S,Aquamarine) >> {
        + RuntimeConfig flag.ConfigurationMap

        + AddFlags(fs *pflag.FlagSet) 
        + Validate(registries ...GroupRegistry) []error
        + ApplyTo(c *server.Config, defaultResourceConfig *storage.ResourceConfig, registry resourceconfig.GroupVersionRegistry) error

    }
    class AdmissionOptions << (S,Aquamarine) >> {
        + RecommendedPluginOrder []string
        + DefaultOffPlugins sets.String
        + EnablePlugins []string
        + DisablePlugins []string
        + ConfigFile string
        + Plugins *admission.Plugins
        + Decorators admission.Decorators

        - enabledPluginNames() []string
        - defaultEnabledPluginNames() []string

        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(c *server.Config, informers informers.SharedInformerFactory, kubeAPIServerClientConfig *rest.Config, features featuregate.FeatureGate, pluginInitializers ...admission.PluginInitializer) error
        + Validate() []error

    }
    class AuditBatchOptions << (S,Aquamarine) >> {
        + Mode string
        + BatchConfig buffered.BatchConfig

        - wrapBackend(delegate audit.Backend) audit.Backend

        + AddFlags(pluginName string, fs *pflag.FlagSet) 

    }
    class AuditDynamicOptions << (S,Aquamarine) >> {
        + Enabled bool
        + BatchConfig *buffered.BatchConfig

    }
    class AuditLogOptions << (S,Aquamarine) >> {
        + Path string
        + MaxAge int
        + MaxBackups int
        + MaxSize int
        + Format string
        + Compress bool
        + BatchOptions AuditBatchOptions
        + TruncateOptions AuditTruncateOptions
        + GroupVersionString string

        - enabled() bool
        - getWriter() (io.Writer, error)
        - ensureLogFile() error
        - newBackend(w io.Writer) audit.Backend

        + AddFlags(fs *pflag.FlagSet) 
        + Validate() []error

    }
    class AuditOptions << (S,Aquamarine) >> {
        + PolicyFile string
        + LogOptions AuditLogOptions
        + WebhookOptions AuditWebhookOptions

        - newPolicyRuleEvaluator() (audit.PolicyRuleEvaluator, error)

        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(c *server.Config) error

    }
    class AuditTruncateOptions << (S,Aquamarine) >> {
        + Enabled bool
        + TruncateConfig truncate.Config

        - wrapBackend(delegate audit.Backend, gv schema.GroupVersion) audit.Backend

        + Validate(pluginName string) error
        + AddFlags(pluginName string, fs *pflag.FlagSet) 

    }
    class AuditWebhookOptions << (S,Aquamarine) >> {
        + ConfigFile string
        + InitialBackoff time.Duration
        + BatchOptions AuditBatchOptions
        + TruncateOptions AuditTruncateOptions
        + GroupVersionString string

        - enabled() bool
        - newUntruncatedBackend(customDial net.DialFunc) (audit.Backend, error)

        + AddFlags(fs *pflag.FlagSet) 
        + Validate() []error

    }
    class CertKey << (S,Aquamarine) >> {
        + CertFile string
        + KeyFile string

    }
    class ClientCertAuthenticationOptions << (S,Aquamarine) >> {
        + ClientCA string
        + CAContentProvider dynamiccertificates.CAContentProvider

        + GetClientCAContentProvider() (dynamiccertificates.CAContentProvider, error)
        + AddFlags(fs *pflag.FlagSet) 

    }
    class CoreAPIOptions << (S,Aquamarine) >> {
        + CoreAPIKubeconfigPath string

        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(config *server.RecommendedConfig) error
        + Validate() []error

    }
    class DelegatingAuthenticationOptions << (S,Aquamarine) >> {
        + RemoteKubeConfigFile string
        + RemoteKubeConfigFileOptional bool
        + CacheTTL time.Duration
        + ClientCert ClientCertAuthenticationOptions
        + RequestHeader RequestHeaderAuthenticationOptions
        + SkipInClusterLookup bool
        + TolerateInClusterLookupFailure bool
        + WebhookRetryBackoff *wait.Backoff
        + TokenRequestTimeout time.Duration
        + CustomRoundTripperFn transport.WrapperFunc
        + DisableAnonymous bool

        - createRequestHeaderConfig(client kubernetes.Interface) (*authenticatorfactory.RequestHeaderConfig, error)
        - getClient() (kubernetes.Interface, error)

        + WithCustomRetryBackoff(backoff wait.Backoff) 
        + WithRequestTimeout(timeout time.Duration) 
        + WithCustomRoundTripper(rt transport.WrapperFunc) 
        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(authenticationInfo *server.AuthenticationInfo, servingInfo *server.SecureServingInfo, openAPIConfig *common.Config) error

    }
    class DelegatingAuthorizationOptions << (S,Aquamarine) >> {
        + RemoteKubeConfigFile string
        + RemoteKubeConfigFileOptional bool
        + AllowCacheTTL time.Duration
        + DenyCacheTTL time.Duration
        + AlwaysAllowPaths []string
        + AlwaysAllowGroups []string
        + ClientTimeout time.Duration
        + WebhookRetryBackoff *wait.Backoff
        + CustomRoundTripperFn transport.WrapperFunc

        - toAuthorizer(client kubernetes.Interface) (authorizer.Authorizer, error)
        - getClient() (kubernetes.Interface, error)

        + WithAlwaysAllowGroups(groups ...string) *DelegatingAuthorizationOptions
        + WithAlwaysAllowPaths(paths ...string) *DelegatingAuthorizationOptions
        + WithClientTimeout(timeout time.Duration) 
        + WithCustomRetryBackoff(backoff wait.Backoff) 
        + WithCustomRoundTripper(rt transport.WrapperFunc) 
        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(c *server.AuthorizationInfo) error

    }
    class DeprecatedInsecureServingOptions << (S,Aquamarine) >> {
        + BindAddress net.IP
        + BindPort int
        + BindNetwork string
        + Listener net.Listener
        + ListenFunc <font color=blue>func</font>(string, string, net.ListenConfig) (net.Listener, int, error)

        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + AddUnqualifiedFlags(fs *pflag.FlagSet) 
        + ApplyTo(c **server.DeprecatedInsecureServingInfo) error

    }
    class DynamicRequestHeaderController << (S,Aquamarine) >> {
        + RunOnce(ctx context.Context) error
        + Run(ctx context.Context, workers int) 

    }
    class EgressSelectorOptions << (S,Aquamarine) >> {
        + ConfigFile string

        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(c *server.Config) error
        + Validate() []error

    }
    class EtcdOptions << (S,Aquamarine) >> {
        - complete bool
        - resourceTransformers encryptionconfig.ResourceTransformers
        - kmsPluginHealthzChecks []healthz.HealthChecker

        + StorageConfig storagebackend.Config
        + EncryptionProviderConfigFilepath string
        + EncryptionProviderConfigAutomaticReload bool
        + EtcdServersOverrides []string
        + DefaultStorageMediaType string
        + DeleteCollectionWorkers int
        + EnableGarbageCollection bool
        + EnableWatchCache bool
        + DefaultWatchCacheSize int
        + WatchCacheSizes []string
        + SkipHealthEndpoints bool

        - addEtcdHealthEndpoint(c *server.Config) error

        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + Complete(storageObjectCountTracker request.StorageObjectCountTracker, stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}, addPostStartHook <font color=blue>func</font>(string, server.PostStartHookFunc) error) error
        + ApplyTo(c *server.Config) error
        + ApplyWithStorageFactoryTo(factory storage.StorageFactory, c *server.Config) error

    }
    class FeatureOptions << (S,Aquamarine) >> {
        + EnableProfiling bool
        + DebugSocketPath string
        + EnableContentionProfiling bool

        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(c *server.Config) error
        + Validate() []error

    }
    class GeneratableKeyCert << (S,Aquamarine) >> {
        + CertKey CertKey
        + CertDirectory string
        + PairName string
        + GeneratedCert dynamiccertificates.CertKeyContentProvider
        + FixtureDirectory string

    }
    interface GroupRegistry  {
        + IsGroupRegistered(group string) bool

    }
    class RecommendedOptions << (S,Aquamarine) >> {
        + Etcd *EtcdOptions
        + SecureServing *SecureServingOptionsWithLoopback
        + Authentication *DelegatingAuthenticationOptions
        + Authorization *DelegatingAuthorizationOptions
        + Audit *AuditOptions
        + Features *FeatureOptions
        + CoreAPI *CoreAPIOptions
        + FeatureGate featuregate.FeatureGate
        + ExtraAdmissionInitializers <font color=blue>func</font>(*server.RecommendedConfig) ([]admission.PluginInitializer, error)
        + Admission *AdmissionOptions
        + EgressSelector *EgressSelectorOptions
        + Traces *TracingOptions

        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(config *server.RecommendedConfig) error
        + Validate() []error

    }
    class RequestHeaderAuthenticationOptions << (S,Aquamarine) >> {
        + ClientCAFile string
        + UsernameHeaders []string
        + GroupHeaders []string
        + ExtraHeaderPrefixes []string
        + AllowedNames []string

        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + ToAuthenticationRequestHeaderConfig() (*authenticatorfactory.RequestHeaderConfig, error)

    }
    class SecureServingOptions << (S,Aquamarine) >> {
        + BindAddress net.IP
        + BindPort int
        + BindNetwork string
        + Required bool
        + ExternalAddress net.IP
        + Listener net.Listener
        + ServerCert GeneratableKeyCert
        + SNICertKeys []flag.NamedCertKey
        + CipherSuites []string
        + MinTLSVersion string
        + HTTP2MaxStreamsPerConnection int
        + PermitPortSharing bool
        + PermitAddressSharing bool

        + DefaultExternalAddress() (net.IP, error)
        + Validate() []error
        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(config **server.SecureServingInfo) error
        + MaybeDefaultWithSelfSignedCerts(publicAddress string, alternateDNS []string, alternateIPs []net.IP) error
        + WithLoopback() *SecureServingOptionsWithLoopback

    }
    class SecureServingOptionsWithLoopback << (S,Aquamarine) >> {
        + ApplyTo(secureServingInfo **server.SecureServingInfo, loopbackClientConfig **rest.Config) error

    }
    class ServerRunOptions << (S,Aquamarine) >> {
        + AdvertiseAddress net.IP
        + CorsAllowedOriginList []string
        + HSTSDirectives []string
        + ExternalHost string
        + MaxRequestsInFlight int
        + MaxMutatingRequestsInFlight int
        + RequestTimeout time.Duration
        + GoawayChance float64
        + LivezGracePeriod time.Duration
        + MinRequestTimeout int
        + ShutdownDelayDuration time.Duration
        + JSONPatchMaxCopyBytes int64
        + MaxRequestBodyBytes int64
        + EnablePriorityAndFairness bool
        + ShutdownSendRetryAfter bool
        + ShutdownWatchTerminationGracePeriod time.Duration

        + ApplyTo(c *server.Config) error
        + DefaultAdvertiseAddress(secure *SecureServingOptions) error
        + Validate() []error
        + AddUniversalFlags(fs *pflag.FlagSet) 

    }
    class SimpleStorageFactory << (S,Aquamarine) >> {
        + StorageConfig storagebackend.Config

        + NewConfig(resource schema.GroupResource) (*storagebackend.ConfigForResource, error)
        + ResourcePrefix(resource schema.GroupResource) string
        + Backends() []storage.Backend

    }
    class StorageFactoryRestOptionsFactory << (S,Aquamarine) >> {
        + Options EtcdOptions
        + StorageFactory storage.StorageFactory

        + GetRESTOptions(resource schema.GroupResource) (generic.RESTOptions, error)

    }
    class TracingOptions << (S,Aquamarine) >> {
        + ConfigFile string

        + AddFlags(fs *pflag.FlagSet) 
        + ApplyTo(es *egressselector.EgressSelector, c *server.Config) error
        + Validate() []error

    }
    class ignoreErrorsBackend << (S,Aquamarine) >> {
        + ProcessEvents(ev ...*audit.Event) bool
        + String() string

    }
    class multipleControls << (S,Aquamarine) >> {
        + Control(network string, addr string, conn syscall.RawConn) error

    }
    class options.multipleControls << (T, #FF7700) >>  {
    }
    class transformerStorageFactory << (S,Aquamarine) >> {
        - delegate storage.StorageFactory
        - resourceTransformers encryptionconfig.ResourceTransformers

        + NewConfig(resource schema.GroupResource) (*storagebackend.ConfigForResource, error)
        + ResourcePrefix(resource schema.GroupResource) string
        + Backends() []storage.Backend

    }
    class "[]<font color=blue>func</font>(string, string, syscall.RawConn) error" as fontcolorbluefuncfontstringstringsyscallRawConnerror {
    }
}
"dynamiccertificates.ConfigMapCAController" *- - "options.DynamicRequestHeaderController"
"headerrequest.RequestHeaderAuthRequestController" *- - "options.DynamicRequestHeaderController"
"options.SecureServingOptions" *- - "options.SecureServingOptionsWithLoopback"
"audit.Backend" *- - "options.ignoreErrorsBackend"

"dynamiccertificates.ControllerRunner" <|- - "options.DynamicRequestHeaderController"
"storage.StorageFactory" <|- - "options.SimpleStorageFactory"
"storage.StorageFactory" <|- - "options.transformerStorageFactory"

namespace resourceconfig {
    interface GroupVersionRegistry  {
        + IsGroupRegistered(group string) bool
        + IsVersionRegistered(v schema.GroupVersion) bool
        + PrioritizedVersionsAllGroups() []schema.GroupVersion

    }
}


namespace routes {
    class DebugFlags << (S,Aquamarine) >> {
        - addFlag(flag string) 

        + Install(c *mux.PathRecorderMux, flag string, handler <font color=blue>func</font>(http.ResponseWriter, *http.Request) ) 
        + Index(w http.ResponseWriter, r *http.Request) 

    }
    class DebugSocket << (S,Aquamarine) >> {
        - path string
        - mux *http.ServeMux

        + InstallProfiling() 
        + InstallDebugFlag(flag string, handler <font color=blue>func</font>(http.ResponseWriter, *http.Request) ) 
        + Run(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) error

    }
    class DefaultMetrics << (S,Aquamarine) >> {
        + Install(c *mux.PathRecorderMux) 

    }
    class Index << (S,Aquamarine) >> {
        + Install(pathProvider ListedPathProvider, mux *mux.PathRecorderMux) 

    }
    class IndexLister << (S,Aquamarine) >> {
        + StatusCode int
        + PathProvider ListedPathProvider

        + ServeHTTP(w http.ResponseWriter, r *http.Request) 

    }
    interface ListedPathProvider  {
        + ListedPaths() []string

    }
    class ListedPathProviders << (S,Aquamarine) >> {
        + ListedPaths() []string

    }
    class MetricsWithReset << (S,Aquamarine) >> {
        + Install(c *mux.PathRecorderMux) 

    }
    class OpenAPI << (S,Aquamarine) >> {
        + Config *common.Config

        + InstallV2(c *v3.Container, mux *mux.PathRecorderMux) (*handler.OpenAPIService, *spec.Swagger)
        + InstallV3(c *v3.Container, mux *mux.PathRecorderMux) *handler3.OpenAPIService

    }
    class Profiling << (S,Aquamarine) >> {
        + Install(c *mux.PathRecorderMux) 

    }
    class Version << (S,Aquamarine) >> {
        + Version *version.Info

        - handleVersion(req *v3.Request, resp *v3.Response) 

        + Install(c *v3.Container) 

    }
    class debugFlag << (S,Aquamarine) >> {
        + Flag string

    }
    class routes.ListedPathProviders << (T, #FF7700) >>  {
    }
    class routes.StringFlagSetterFunc << (T, #FF7700) >>  {
    }
}

"routes.ListedPathProvider" <|- - "routes.ListedPathProviders"

namespace server {
    class APIGroupInfo << (S,Aquamarine) >> {
        + PrioritizedVersions []schema.GroupVersion
        + VersionedResourcesStorageMap <font color=blue>map</font>[string]<font color=blue>map</font>[string]rest.Storage
        + OptionsExternalVersion *schema.GroupVersion
        + MetaGroupVersion *schema.GroupVersion
        + Scheme *runtime.Scheme
        + NegotiatedSerializer runtime.NegotiatedSerializer
        + ParameterCodec runtime.ParameterCodec
        + StaticOpenAPISpec *spec.Swagger

        - destroyStorage() 

    }
    class APIServerHandler << (S,Aquamarine) >> {
        + FullHandlerChain http.Handler
        + GoRestfulContainer *restful.Container
        + NonGoRestfulMux *mux.PathRecorderMux
        + Director http.Handler

        + ListedPaths() []string
        + ServeHTTP(w http.ResponseWriter, r *http.Request) 

    }
    class AuthenticationInfo << (S,Aquamarine) >> {
        + APIAudiences authenticator.Audiences
        + Authenticator authenticator.Request

        + ApplyClientCert(clientCA dynamiccertificates.CAContentProvider, servingInfo *SecureServingInfo) error

    }
    class AuthorizationInfo << (S,Aquamarine) >> {
        + Authorizer authorizer.Authorizer

    }
    class CompletedConfig << (S,Aquamarine) >> {
    }
    class Config << (S,Aquamarine) >> {
        - lifecycleSignals lifecycleSignals

        + SecureServing *SecureServingInfo
        + Authentication AuthenticationInfo
        + Authorization AuthorizationInfo
        + LoopbackClientConfig *rest.Config
        + EgressSelector *egressselector.EgressSelector
        + RuleResolver authorizer.RuleResolver
        + AdmissionControl admission.Interface
        + CorsAllowedOriginList []string
        + HSTSDirectives []string
        + FlowControl flowcontrol.Interface
        + EnableIndex bool
        + EnableProfiling bool
        + DebugSocketPath string
        + EnableDiscovery bool
        + EnableContentionProfiling bool
        + EnableMetrics bool
        + DisabledPostStartHooks sets.String
        + PostStartHooks <font color=blue>map</font>[string]PostStartHookConfigEntry
        + Version *version.Info
        + AuditBackend audit.Backend
        + AuditPolicyRuleEvaluator audit.PolicyRuleEvaluator
        + ExternalAddress string
        + TracerProvider tracing.TracerProvider
        + BuildHandlerChainFunc <font color=blue>func</font>(http.Handler, *Config) http.Handler
        + NonLongRunningRequestWaitGroup *waitgroup.SafeWaitGroup
        + WatchRequestWaitGroup *waitgroup.RateLimitedSafeWaitGroup
        + DiscoveryAddresses discovery.Addresses
        + HealthzChecks []healthz.HealthChecker
        + LivezChecks []healthz.HealthChecker
        + ReadyzChecks []healthz.HealthChecker
        + LegacyAPIGroupPrefixes sets.String
        + RequestInfoResolver request.RequestInfoResolver
        + Serializer runtime.NegotiatedSerializer
        + OpenAPIConfig *common.Config
        + OpenAPIV3Config *common.Config
        + SkipOpenAPIInstallation bool
        + RESTOptionsGetter generic.RESTOptionsGetter
        + RequestTimeout time.Duration
        + MinRequestTimeout int
        + LivezGracePeriod time.Duration
        + ShutdownDelayDuration time.Duration
        + JSONPatchMaxCopyBytes int64
        + MaxRequestBodyBytes int64
        + MaxRequestsInFlight int
        + MaxMutatingRequestsInFlight int
        + LongRunningFunc request.LongRunningRequestCheck
        + GoawayChance float64
        + MergedResourceConfig *storage.ResourceConfig
        + StorageObjectCountTracker request.StorageObjectCountTracker
        + ShutdownSendRetryAfter bool
        + PublicAddress net.IP
        + EquivalentResourceRegistry runtime.EquivalentResourceRegistry
        + APIServerID string
        + StorageVersionManager storageversion.Manager
        + AggregatedDiscoveryGroupManager aggregated.ResourceManager
        + ShutdownWatchTerminationGracePeriod time.Duration

        + AddHealthChecks(healthChecks ...healthz.HealthChecker) 
        + AddReadyzChecks(healthChecks ...healthz.HealthChecker) 
        + AddPostStartHook(name string, hook PostStartHookFunc) error
        + AddPostStartHookOrDie(name string, hook PostStartHookFunc) 
        + DrainedNotify() <font color=blue>chan</font> <font color=blue>struct</font>{}
        + Complete(informers informers.SharedInformerFactory) CompletedConfig

    }
    interface DelegationTarget  {
        + UnprotectedHandler() http.Handler
        + PostStartHooks() <font color=blue>map</font>[string]postStartHookEntry
        + PreShutdownHooks() <font color=blue>map</font>[string]preShutdownHookEntry
        + HealthzChecks() []healthz.HealthChecker
        + ListedPaths() []string
        + NextDelegate() DelegationTarget
        + PrepareRun() preparedGenericAPIServer
        + MuxAndDiscoveryCompleteSignals() <font color=blue>map</font>[string]<font color=blue>chan</font> <font color=blue>struct</font>{}
        + Destroy() 

    }
    class DeprecatedInsecureServingInfo << (S,Aquamarine) >> {
        + Listener net.Listener
        + Name string

        + Serve(handler http.Handler, shutdownTimeout time.Duration, stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        + NewLoopbackClientConfig() (*rest.Config, error)

    }
    class GenericAPIServer << (S,Aquamarine) >> {
        - discoveryAddresses discovery.Addresses
        - minRequestTimeout time.Duration
        - legacyAPIGroupPrefixes sets.String
        - admissionControl admission.Interface
        - listedPathProvider routes.ListedPathProvider
        - openAPIConfig *common.Config
        - openAPIV3Config *common.Config
        - skipOpenAPIInstallation bool
        - postStartHookLock sync.Mutex
        - postStartHooks <font color=blue>map</font>[string]postStartHookEntry
        - postStartHooksCalled bool
        - disabledPostStartHooks sets.String
        - preShutdownHookLock sync.Mutex
        - preShutdownHooks <font color=blue>map</font>[string]preShutdownHookEntry
        - preShutdownHooksCalled bool
        - healthzLock sync.Mutex
        - healthzChecks []healthz.HealthChecker
        - healthzChecksInstalled bool
        - livezLock sync.Mutex
        - livezChecks []healthz.HealthChecker
        - livezChecksInstalled bool
        - readyzLock sync.Mutex
        - readyzChecks []healthz.HealthChecker
        - readyzChecksInstalled bool
        - livezGracePeriod time.Duration
        - livezClock clock.Clock
        - delegationTarget DelegationTarget
        - maxRequestBodyBytes int64
        - lifecycleSignals lifecycleSignals
        - destroyFns []<font color=blue>func</font>() 
        - muxAndDiscoveryCompleteSignals <font color=blue>map</font>[string]<font color=blue>chan</font> <font color=blue>struct</font>{}

        + LoopbackClientConfig *rest.Config
        + ShutdownTimeout time.Duration
        + SecureServingInfo *SecureServingInfo
        + ExternalAddress string
        + Serializer runtime.NegotiatedSerializer
        + Handler *APIServerHandler
        + UnprotectedDebugSocket *routes.DebugSocket
        + DiscoveryGroupManager discovery.GroupManager
        + AggregatedDiscoveryGroupManager aggregated.ResourceManager
        + AggregatedLegacyDiscoveryGroupManager aggregated.ResourceManager
        + OpenAPIVersionedService *handler.OpenAPIService
        + OpenAPIV3VersionedService *handler3.OpenAPIService
        + StaticOpenAPISpec *spec.Swagger
        + AuditBackend audit.Backend
        + Authorizer authorizer.Authorizer
        + EquivalentResourceRegistry runtime.EquivalentResourceRegistry
        + NonLongRunningRequestWaitGroup *waitgroup.SafeWaitGroup
        + WatchRequestWaitGroup *waitgroup.RateLimitedSafeWaitGroup
        + ShutdownDelayDuration time.Duration
        + APIServerID string
        + StorageVersionManager storageversion.Manager
        + Version *version.Info
        + ShutdownSendRetryAfter bool
        + ShutdownWatchTerminationGracePeriod time.Duration

        - installAPIResources(apiPrefix string, apiGroupInfo *APIGroupInfo, openAPIModels *spec.Swagger) error
        - getAPIGroupVersion(apiGroupInfo *APIGroupInfo, groupVersion schema.GroupVersion, apiPrefix string) (*endpoints.APIGroupVersion, error)
        - newAPIGroupVersion(apiGroupInfo *APIGroupInfo, groupVersion schema.GroupVersion) *endpoints.APIGroupVersion
        - getOpenAPIModels(apiPrefix string, apiGroupInfos ...*APIGroupInfo) (*spec.Swagger, error)
        - addHealthChecks(livezGracePeriod time.Duration, checks ...healthz.HealthChecker) error
        - addReadyzShutdownCheck(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        - installHealthz() 
        - installReadyz() 
        - installLivez() 
        - isPostStartHookRegistered(name string) bool

        + UnprotectedHandler() http.Handler
        + PostStartHooks() <font color=blue>map</font>[string]postStartHookEntry
        + PreShutdownHooks() <font color=blue>map</font>[string]preShutdownHookEntry
        + HealthzChecks() []healthz.HealthChecker
        + ListedPaths() []string
        + NextDelegate() DelegationTarget
        + RegisterMuxAndDiscoveryCompleteSignal(signalName string, signal <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        + MuxAndDiscoveryCompleteSignals() <font color=blue>map</font>[string]<font color=blue>chan</font> <font color=blue>struct</font>{}
        + RegisterDestroyFunc(destroyFn <font color=blue>func</font>() ) 
        + Destroy() 
        + PrepareRun() preparedGenericAPIServer
        + InstallLegacyAPIGroup(apiPrefix string, apiGroupInfo *APIGroupInfo) error
        + InstallAPIGroups(apiGroupInfos ...*APIGroupInfo) error
        + InstallAPIGroup(apiGroupInfo *APIGroupInfo) error
        + AddHealthChecks(checks ...healthz.HealthChecker) error
        + AddBootSequenceHealthChecks(checks ...healthz.HealthChecker) error
        + AddReadyzChecks(checks ...healthz.HealthChecker) error
        + AddLivezChecks(delay time.Duration, checks ...healthz.HealthChecker) error
        + AddPostStartHook(name string, hook PostStartHookFunc) error
        + AddPostStartHookOrDie(name string, hook PostStartHookFunc) 
        + AddPreShutdownHook(name string, hook PreShutdownHookFunc) error
        + AddPreShutdownHookOrDie(name string, hook PreShutdownHookFunc) 
        + RunPostStartHooks(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) 
        + RunPreShutdownHooks() error

    }
    class InsecureSuperuser << (S,Aquamarine) >> {
        + AuthenticateRequest(req *http.Request) (*authenticator.Response, bool, error)

    }
    class PostStartHookConfigEntry << (S,Aquamarine) >> {
        - hook PostStartHookFunc
        - originatingStack string

    }
    class PostStartHookContext << (S,Aquamarine) >> {
        + LoopbackClientConfig *rest.Config
        + StopCh <font color=blue>chan</font> <font color=blue>struct</font>{}

    }
    interface PostStartHookProvider  {
        + PostStartHook() (string, PostStartHookFunc, error)

    }
    class RecommendedConfig << (S,Aquamarine) >> {
        + SharedInformerFactory informers.SharedInformerFactory
        + ClientConfig *rest.Config

        + Complete() CompletedConfig

    }
    interface ResourceExpirationEvaluator  {
        + RemoveDeletedKinds(groupName string, versioner runtime.ObjectVersioner, versionedResourcesStorageMap <font color=blue>map</font>[string]<font color=blue>map</font>[string]rest.Storage) 
        + ShouldServeForVersion(majorRemoved int, minorRemoved int) bool

    }
    class SecureServingInfo << (S,Aquamarine) >> {
        + Listener net.Listener
        + Cert dynamiccertificates.CertKeyContentProvider
        + SNICerts []dynamiccertificates.SNICertKeyContentProvider
        + ClientCA dynamiccertificates.CAContentProvider
        + MinTLSVersion uint16
        + CipherSuites []uint16
        + HTTP2MaxStreamsPerConnection int
        + DisableHTTP2 bool

        - tlsConfig(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) (*tls.Config, error)

        + HostPort() (string, int, error)
        + NewClientConfig(caCert []byte) (*rest.Config, error)
        + NewLoopbackClientConfig(token string, loopbackCert []byte) (*rest.Config, error)
        + Serve(handler http.Handler, shutdownTimeout time.Duration, stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) (<font color=blue>chan</font> <font color=blue>struct</font>{}, <font color=blue>chan</font> <font color=blue>struct</font>{}, error)

    }
    class completedConfig << (S,Aquamarine) >> {
        + SharedInformerFactory informers.SharedInformerFactory

        + New(name string, delegationTarget DelegationTarget) (*GenericAPIServer, error)

    }
    class delayedLivezCheck << (S,Aquamarine) >> {
        - check healthz.HealthChecker
        - startCheck time.Time
        - clock clock.Clock

        + Name() string
        + Check(req *http.Request) error

    }
    class director << (S,Aquamarine) >> {
        - name string
        - goRestfulContainer *restful.Container
        - nonGoRestfulMux *mux.PathRecorderMux

        + ServeHTTP(w http.ResponseWriter, req *http.Request) 

    }
    class emptyDelegate << (S,Aquamarine) >> {
        - handler http.Handler

        + UnprotectedHandler() http.Handler
        + PostStartHooks() <font color=blue>map</font>[string]postStartHookEntry
        + PreShutdownHooks() <font color=blue>map</font>[string]preShutdownHookEntry
        + HealthzChecks() []healthz.HealthChecker
        + ListedPaths() []string
        + NextDelegate() DelegationTarget
        + PrepareRun() preparedGenericAPIServer
        + MuxAndDiscoveryCompleteSignals() <font color=blue>map</font>[string]<font color=blue>chan</font> <font color=blue>struct</font>{}
        + Destroy() 

    }
    interface lifecycleSignal  {
        + Signal() 
        + Signaled() <font color=blue>chan</font> <font color=blue>struct</font>{}
        + Name() string

    }
    class lifecycleSignals << (S,Aquamarine) >> {
        + ShutdownInitiated lifecycleSignal
        + AfterShutdownDelayDuration lifecycleSignal
        + PreShutdownHooksStopped lifecycleSignal
        + NotAcceptingNewRequest lifecycleSignal
        + InFlightRequestsDrained lifecycleSignal
        + HTTPServerStoppedListening lifecycleSignal
        + HasBeenReady lifecycleSignal
        + MuxAndDiscoveryComplete lifecycleSignal

        + ShuttingDown() <font color=blue>chan</font> <font color=blue>struct</font>{}

    }
    class namedChannelWrapper << (S,Aquamarine) >> {
        - name string
        - once sync.Once
        - ch <font color=blue>chan</font> <font color=blue>struct</font>{}

        + Signal() 
        + Signaled() <font color=blue>chan</font> <font color=blue>struct</font>{}
        + Name() string

    }
    class postStartHookEntry << (S,Aquamarine) >> {
        - hook PostStartHookFunc
        - originatingStack string
        - done <font color=blue>chan</font> <font color=blue>struct</font>{}

    }
    class postStartHookHealthz << (S,Aquamarine) >> {
        - name string
        - done <font color=blue>chan</font> <font color=blue>struct</font>{}

        + Name() string
        + Check(req *http.Request) error

    }
    class preShutdownHookEntry << (S,Aquamarine) >> {
        - hook PreShutdownHookFunc

    }
    class preparedGenericAPIServer << (S,Aquamarine) >> {
        + Run(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        + NonBlockingRun(stopCh <font color=blue>chan</font> <font color=blue>struct</font>{}, shutdownTimeout time.Duration) (<font color=blue>chan</font> <font color=blue>struct</font>{}, <font color=blue>chan</font> <font color=blue>struct</font>{}, error)

    }
    interface removedInterface  {
        + APILifecycleRemoved() (int, int)

    }
    class resourceExpirationEvaluator << (S,Aquamarine) >> {
        - currentMajor int
        - currentMinor int
        - isAlpha bool
        - strictRemovedHandlingInAlpha bool
        - serveRemovedAPIsOneMoreRelease bool

        - shouldServe(gv schema.GroupVersion, versioner runtime.ObjectVersioner, resourceServingInfo rest.Storage) bool

        + ShouldServeForVersion(majorRemoved int, minorRemoved int) bool
        + RemoveDeletedKinds(groupName string, versioner runtime.ObjectVersioner, versionedResourcesStorageMap <font color=blue>map</font>[string]<font color=blue>map</font>[string]rest.Storage) 

    }
    class server.HandlerChainBuilderFn << (T, #FF7700) >>  {
    }
    class server.PostStartHookFunc << (T, #FF7700) >>  {
    }
    class server.PreShutdownHookFunc << (T, #FF7700) >>  {
    }
    class shutdownCheck << (S,Aquamarine) >> {
        + StopCh <font color=blue>chan</font> <font color=blue>struct</font>{}

        + Name() string
        + Check(req *http.Request) error

    }
    class tcpKeepAliveListener << (S,Aquamarine) >> {
        + Accept() (net.Conn, error)

    }
    class tlsHandshakeErrorWriter << (S,Aquamarine) >> {
        - out io.Writer

        + Write(p []byte) (int, error)

    }
    class "<font color=blue>func</font>(http.Handler) http.Handler" as fontcolorbluefuncfonthttpHandlerhttpHandler {
    }
}
"server.completedConfig" *- - "server.CompletedConfig"
"server.Config" *- - "server.RecommendedConfig"
"server.Config" *- - "server.completedConfig"
"server.GenericAPIServer" *- - "server.preparedGenericAPIServer"
"net.Listener" *- - "server.tcpKeepAliveListener"

"routes.ListedPathProvider" <|- - "server.APIServerHandler"
"routes.ListedPathProvider" <|- - "server.GenericAPIServer"
"server.DelegationTarget" <|- - "server.GenericAPIServer"
"healthz.HealthChecker" <|- - "server.delayedLivezCheck"
"routes.ListedPathProvider" <|- - "server.emptyDelegate"
"server.DelegationTarget" <|- - "server.emptyDelegate"
"server.lifecycleSignal" <|- - "server.namedChannelWrapper"
"healthz.HealthChecker" <|- - "server.postStartHookHealthz"
"server.ResourceExpirationEvaluator" <|- - "server.resourceExpirationEvaluator"
"healthz.HealthChecker" <|- - "server.shutdownCheck"

namespace storage {
    interface APIResourceConfigSource  {
        + ResourceEnabled(resource schema.GroupVersionResource) bool
        + AnyResourceForGroupEnabled(group string) bool

    }
    class Backend << (S,Aquamarine) >> {
        + Server string
        + TLSConfig *tls.Config

    }
    class DefaultResourceEncodingConfig << (S,Aquamarine) >> {
        - resources <font color=blue>map</font>[schema.GroupResource]*OverridingResourceEncoding
        - scheme *runtime.Scheme

        + SetResourceEncoding(resourceBeingStored schema.GroupResource, externalEncodingVersion schema.GroupVersion, internalVersion schema.GroupVersion) 
        + StorageEncodingFor(resource schema.GroupResource) (schema.GroupVersion, error)
        + InMemoryEncodingFor(resource schema.GroupResource) (schema.GroupVersion, error)

    }
    class DefaultStorageFactory << (S,Aquamarine) >> {
        - newStorageCodecFn <font color=blue>func</font>(StorageCodecConfig) (runtime.Codec, runtime.GroupVersioner, error)

        + StorageConfig storagebackend.Config
        + Overrides <font color=blue>map</font>[schema.GroupResource]groupResourceOverrides
        + DefaultResourcePrefixes <font color=blue>map</font>[schema.GroupResource]string
        + DefaultMediaType string
        + DefaultSerializer runtime.StorageSerializer
        + ResourceEncodingConfig ResourceEncodingConfig
        + APIResourceConfigSource APIResourceConfigSource

        - getStorageGroupResource(groupResource schema.GroupResource) schema.GroupResource

        + SetEtcdLocation(groupResource schema.GroupResource, location []string) 
        + SetEtcdPrefix(groupResource schema.GroupResource, prefix string) 
        + SetDisableAPIListChunking(groupResource schema.GroupResource) 
        + SetResourceEtcdPrefix(groupResource schema.GroupResource, prefix string) 
        + SetSerializer(groupResource schema.GroupResource, mediaType string, serializer runtime.StorageSerializer) 
        + AddCohabitatingResources(groupResources ...schema.GroupResource) 
        + AddSerializationChains(encoderDecoratorFn <font color=blue>func</font>(runtime.Encoder) runtime.Encoder, decoderDecoratorFn <font color=blue>func</font>([]runtime.Decoder) []runtime.Decoder, groupResources ...schema.GroupResource) 
        + NewConfig(groupResource schema.GroupResource) (*storagebackend.ConfigForResource, error)
        + Backends() []Backend
        + ResourcePrefix(groupResource schema.GroupResource) string

    }
    class OverridingResourceEncoding << (S,Aquamarine) >> {
        + ExternalResourceEncoding schema.GroupVersion
        + InternalResourceEncoding schema.GroupVersion

    }
    class ResourceConfig << (S,Aquamarine) >> {
        + GroupVersionConfigs <font color=blue>map</font>[schema.GroupVersion]bool
        + ResourceConfigs <font color=blue>map</font>[schema.GroupVersionResource]bool

        - removeMatchingResourcePreferences(matcher <font color=blue>func</font>(schema.GroupVersionResource) bool) 
        - versionEnabled(version schema.GroupVersion) bool

        + DisableMatchingVersions(matcher <font color=blue>func</font>(schema.GroupVersion) bool) 
        + EnableMatchingVersions(matcher <font color=blue>func</font>(schema.GroupVersion) bool) 
        + DisableVersions(versions ...schema.GroupVersion) 
        + EnableVersions(versions ...schema.GroupVersion) 
        + DisableResources(resources ...schema.GroupVersionResource) 
        + EnableResources(resources ...schema.GroupVersionResource) 
        + ResourceEnabled(resource schema.GroupVersionResource) bool
        + AnyResourceForGroupEnabled(group string) bool

    }
    interface ResourceEncodingConfig  {
        + StorageEncodingFor( schema.GroupResource) (schema.GroupVersion, error)
        + InMemoryEncodingFor( schema.GroupResource) (schema.GroupVersion, error)

    }
    class StorageCodecConfig << (S,Aquamarine) >> {
        + StorageMediaType string
        + StorageSerializer runtime.StorageSerializer
        + StorageVersion schema.GroupVersion
        + MemoryVersion schema.GroupVersion
        + Config storagebackend.Config
        + EncoderDecoratorFn <font color=blue>func</font>(runtime.Encoder) runtime.Encoder
        + DecoderDecoratorFn <font color=blue>func</font>([]runtime.Decoder) []runtime.Decoder

    }
    interface StorageFactory  {
        + NewConfig(groupResource schema.GroupResource) (*storagebackend.ConfigForResource, error)
        + ResourcePrefix(groupResource schema.GroupResource) string
        + Backends() []Backend

    }
    class groupResourceOverrides << (S,Aquamarine) >> {
        - etcdLocation []string
        - etcdPrefix string
        - etcdResourcePrefix string
        - mediaType string
        - serializer runtime.StorageSerializer
        - cohabitatingResources []schema.GroupResource
        - encoderDecoratorFn <font color=blue>func</font>(runtime.Encoder) runtime.Encoder
        - decoderDecoratorFn <font color=blue>func</font>([]runtime.Decoder) []runtime.Decoder
        - disablePaging bool

        + Apply(config *storagebackend.Config, options *StorageCodecConfig) 

    }
}

"storage.ResourceEncodingConfig" <|- - "storage.DefaultResourceEncodingConfig"
"storage.StorageFactory" <|- - "storage.DefaultStorageFactory"
"storage.APIResourceConfigSource" <|- - "storage.ResourceConfig"

hide fields
hide methods
@enduml

PlantUML version 1.2022.7(Tue Aug 23 01:01:30 CST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: zh
Country: CN
--></g></svg>