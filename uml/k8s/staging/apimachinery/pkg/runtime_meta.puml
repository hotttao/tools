@startuml
namespace runtime {
    class Allocator << (S,Aquamarine) >> {
        - buf []byte

        + Allocate(n uint64) []byte

    }
    interface CacheableObject  {
        + CacheEncode(id Identifier, encode <font color=blue>func</font>(Object, io.Writer) error, w io.Writer) error
        + GetObject() Object

    }
    interface ClientNegotiator  {
        + Encoder(contentType string, params <font color=blue>map</font>[string]string) (Encoder, error)
        + Decoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, error)
        + StreamDecoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, Serializer, Framer, error)

    }
    interface Decoder  {
        + Decode(data []byte, defaults *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    interface Encoder  {
        + Encode(obj Object, w io.Writer) error
        + Identifier() Identifier

    }
    interface EncoderWithAllocator  {
        + EncodeWithAllocator(obj Object, w io.Writer, memAlloc MemoryAllocator) error

    }
    interface EquivalentResourceMapper  {
        + EquivalentResourcesFor(resource schema.GroupVersionResource, subresource string) []schema.GroupVersionResource
        + KindFor(resource schema.GroupVersionResource, subresource string) schema.GroupVersionKind

    }
    interface EquivalentResourceRegistry  {
        + RegisterKindFor(resource schema.GroupVersionResource, subresource string, kind schema.GroupVersionKind) 

    }
    interface Framer  {
        + NewFrameReader(r io.ReadCloser) io.ReadCloser
        + NewFrameWriter(w io.Writer) io.Writer

    }
    interface GroupVersioner  {
        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    interface MemoryAllocator  {
        + Allocate(n uint64) []byte

    }
    class MultiObjectTyper << (S,Aquamarine) >> {
        + ObjectKinds(obj Object) ([]schema.GroupVersionKind, bool, error)
        + Recognizes(gvk schema.GroupVersionKind) bool

    }
    interface Namer  {
        + Name(obj Object) (string, error)
        + Namespace(obj Object) (string, error)

    }
    class NegotiateError << (S,Aquamarine) >> {
        + ContentType string
        + Stream bool

        + Error() string

    }
    interface NegotiatedSerializer  {
        + SupportedMediaTypes() []SerializerInfo
        + EncoderForVersion(serializer Encoder, gv GroupVersioner) Encoder
        + DecoderToVersion(serializer Decoder, gv GroupVersioner) Decoder

    }
    interface NestedObjectDecoder  {
        + DecodeNestedObjects(d Decoder) error

    }
    interface NestedObjectEncoder  {
        + EncodeNestedObjects(e Encoder) error

    }
    class NoopDecoder << (S,Aquamarine) >> {
        + Decode(data []byte, gvk *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    class NoopEncoder << (S,Aquamarine) >> {
        + Encode(obj Object, w io.Writer) error
        + Identifier() Identifier

    }
    interface Object  {
        + GetObjectKind() schema.ObjectKind
        + DeepCopyObject() Object

    }
    interface ObjectConvertor  {
        + Convert(in <font color=blue>interface</font>{}, out <font color=blue>interface</font>{}, context <font color=blue>interface</font>{}) error
        + ConvertToVersion(in Object, gv GroupVersioner) (Object, error)
        + ConvertFieldLabel(gvk schema.GroupVersionKind, label string, value string) (string, string, error)

    }
    interface ObjectCreater  {
        + New(kind schema.GroupVersionKind) (Object, error)

    }
    interface ObjectDefaulter  {
        + Default(in Object) 

    }
    interface ObjectTyper  {
        + ObjectKinds( Object) ([]schema.GroupVersionKind, bool, error)
        + Recognizes(gvk schema.GroupVersionKind) bool

    }
    interface ObjectVersioner  {
        + ConvertToVersion(in Object, gv GroupVersioner) (Object, error)

    }
    class Pair << (S,Aquamarine) >> {
        + Name string

    }
    interface ParameterCodec  {
        + DecodeParameters(parameters url.Values, from schema.GroupVersion, into Object) error
        + EncodeParameters(obj Object, to schema.GroupVersion) (url.Values, error)

    }
    interface ProtobufMarshaller  {
        + MarshalTo(data []byte) (int, error)

    }
    interface ProtobufReverseMarshaller  {
        + MarshalToSizedBuffer(data []byte) (int, error)

    }
    class RawExtension << (S,Aquamarine) >> {
        + Raw []byte
        + Object Object

        + UnmarshalJSON(in []byte) error
        + MarshalJSON() ([]byte, error)
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + DeepCopyInto(out *RawExtension) 
        + DeepCopy() *RawExtension

    }
    interface ResourceVersioner  {
        + SetResourceVersion(obj Object, version string) error
        + ResourceVersion(obj Object) (string, error)

    }
    class Scheme << (S,Aquamarine) >> {
        - gvkToType <font color=blue>map</font>[schema.GroupVersionKind]reflect.Type
        - typeToGVK <font color=blue>map</font>[reflect.Type][]schema.GroupVersionKind
        - unversionedTypes <font color=blue>map</font>[reflect.Type]schema.GroupVersionKind
        - unversionedKinds <font color=blue>map</font>[string]reflect.Type
        - fieldLabelConversionFuncs <font color=blue>map</font>[schema.GroupVersionKind]FieldLabelConversionFunc
        - defaulterFuncs <font color=blue>map</font>[reflect.Type]<font color=blue>func</font>(<font color=blue>interface</font>{}) 
        - converter *conversion.Converter
        - versionPriority <font color=blue>map</font>[string][]string
        - observedVersions []schema.GroupVersion
        - schemeName string

        - convertToVersion(copy bool, in Object, target GroupVersioner) (Object, error)
        - unstructuredToTyped(in Unstructured) (Object, error)
        - generateConvertMeta(in <font color=blue>interface</font>{}) *conversion.Meta
        - addObservedVersion(version schema.GroupVersion) 

        + Converter() *conversion.Converter
        + AddUnversionedTypes(version schema.GroupVersion, types ...Object) 
        + AddKnownTypes(gv schema.GroupVersion, types ...Object) 
        + AddKnownTypeWithName(gvk schema.GroupVersionKind, obj Object) 
        + KnownTypes(gv schema.GroupVersion) <font color=blue>map</font>[string]reflect.Type
        + VersionsForGroupKind(gk schema.GroupKind) []schema.GroupVersion
        + AllKnownTypes() <font color=blue>map</font>[schema.GroupVersionKind]reflect.Type
        + ObjectKinds(obj Object) ([]schema.GroupVersionKind, bool, error)
        + Recognizes(gvk schema.GroupVersionKind) bool
        + IsUnversioned(obj Object) (bool, bool)
        + New(kind schema.GroupVersionKind) (Object, error)
        + AddIgnoredConversionType(from <font color=blue>interface</font>{}, to <font color=blue>interface</font>{}) error
        + AddConversionFunc(a <font color=blue>interface</font>{}, b <font color=blue>interface</font>{}, fn conversion.ConversionFunc) error
        + AddGeneratedConversionFunc(a <font color=blue>interface</font>{}, b <font color=blue>interface</font>{}, fn conversion.ConversionFunc) error
        + AddFieldLabelConversionFunc(gvk schema.GroupVersionKind, conversionFunc FieldLabelConversionFunc) error
        + AddTypeDefaultingFunc(srcType Object, fn <font color=blue>func</font>(<font color=blue>interface</font>{}) ) 
        + Default(src Object) 
        + Convert(in <font color=blue>interface</font>{}, out <font color=blue>interface</font>{}, context <font color=blue>interface</font>{}) error
        + ConvertFieldLabel(gvk schema.GroupVersionKind, label string, value string) (string, string, error)
        + ConvertToVersion(in Object, target GroupVersioner) (Object, error)
        + UnsafeConvertToVersion(in Object, target GroupVersioner) (Object, error)
        + SetVersionPriority(versions ...schema.GroupVersion) error
        + PrioritizedVersionsForGroup(group string) []schema.GroupVersion
        + PrioritizedVersionsAllGroups() []schema.GroupVersion
        + PreferredVersionAllGroups() []schema.GroupVersion
        + IsGroupRegistered(group string) bool
        + IsVersionRegistered(version schema.GroupVersion) bool
        + Name() string

    }
    class SchemeBuilder << (S,Aquamarine) >> {
        + AddToScheme(s *Scheme) error
        + Register(funcs ...<font color=blue>func</font>(*Scheme) error) 

    }
    interface Serializer  {
    }
    class SerializerInfo << (S,Aquamarine) >> {
        + MediaType string
        + MediaTypeType string
        + MediaTypeSubType string
        + EncodesAsText bool
        + Serializer Serializer
        + PrettySerializer Serializer
        + StrictSerializer Serializer
        + StreamSerializer *StreamSerializerInfo

    }
    class SimpleAllocator << (S,Aquamarine) >> {
        + Allocate(n uint64) []byte

    }
    interface StorageSerializer  {
        + SupportedMediaTypes() []SerializerInfo
        + UniversalDeserializer() Decoder
        + EncoderForVersion(serializer Encoder, gv GroupVersioner) Encoder
        + DecoderToVersion(serializer Decoder, gv GroupVersioner) Decoder

    }
    class StreamSerializerInfo << (S,Aquamarine) >> {
        + EncodesAsText bool

    }
    class TypeMeta << (S,Aquamarine) >> {
        + APIVersion string
        + Kind string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SetGroupVersionKind(gvk schema.GroupVersionKind) 
        + GroupVersionKind() schema.GroupVersionKind
        + GetObjectKind() schema.ObjectKind

    }
    class Unknown << (S,Aquamarine) >> {
        + Raw []byte
        + ContentEncoding string
        + ContentType string

        + UnmarshalJSON(in []byte) error
        + MarshalJSON() ([]byte, error)
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + NestedMarshalTo(data []byte, b ProtobufMarshaller, size uint64) (int, error)
        + DeepCopyInto(out *Unknown) 
        + DeepCopy() *Unknown
        + DeepCopyObject() Object

    }
    interface Unstructured  {
        + NewEmptyInstance() Unstructured
        + UnstructuredContent() <font color=blue>map</font>[string]<font color=blue>interface</font>{}
        + SetUnstructuredContent( <font color=blue>map</font>[string]<font color=blue>interface</font>{}) 
        + IsList() bool
        + EachListItem( <font color=blue>func</font>(Object) error) error

    }
    interface UnstructuredConverter  {
        + ToUnstructured(obj <font color=blue>interface</font>{}) (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)
        + FromUnstructured(u <font color=blue>map</font>[string]<font color=blue>interface</font>{}, obj <font color=blue>interface</font>{}) error

    }
    class WithVersionEncoder << (S,Aquamarine) >> {
        + Version GroupVersioner

        + Encode(obj Object, stream io.Writer) error

    }
    class WithoutVersionDecoder << (S,Aquamarine) >> {
        + Decode(data []byte, defaults *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    class base64Serializer << (S,Aquamarine) >> {
        - identifier Identifier

        - doEncode(obj Object, stream io.Writer) error

        + Encode(obj Object, stream io.Writer) error
        + Identifier() Identifier
        + Decode(data []byte, defaults *schema.GroupVersionKind, into Object) (Object, *schema.GroupVersionKind, error)

    }
    class buffer << (S,Aquamarine) >> {
        - lines []bufferedLine

        - addLine(line string, indent int) 
        - flushLines(w io.Writer) error

    }
    class bufferedLine << (S,Aquamarine) >> {
        - line string
        - indentation int

    }
    class clientNegotiator << (S,Aquamarine) >> {
        - serializer NegotiatedSerializer
        - encode GroupVersioner

        + Encoder(contentType string, params <font color=blue>map</font>[string]string) (Encoder, error)
        + Decoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, error)
        + StreamDecoder(contentType string, params <font color=blue>map</font>[string]string) (Decoder, Serializer, Framer, error)

    }
    class codec << (S,Aquamarine) >> {
    }
    class defaultFramer << (S,Aquamarine) >> {
        + NewFrameReader(r io.ReadCloser) io.ReadCloser
        + NewFrameWriter(w io.Writer) io.Writer

    }
    class disabledGroupVersioner << (S,Aquamarine) >> {
        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    class encodable << (S,Aquamarine) >> {
        - obj Object
        - versions []schema.GroupVersion

        + E Encoder

        + GetObjectKind() schema.ObjectKind
        + DeepCopyObject() Object
        + UnmarshalJSON(in []byte) error
        + MarshalJSON() ([]byte, error)

    }
    class equivalentResourceRegistry << (S,Aquamarine) >> {
        - keyFunc <font color=blue>func</font>(schema.GroupResource) string
        - resources <font color=blue>map</font>[string]<font color=blue>map</font>[string][]schema.GroupVersionResource
        - kinds <font color=blue>map</font>[schema.GroupVersionResource]<font color=blue>map</font>[string]schema.GroupVersionKind
        - keys <font color=blue>map</font>[schema.GroupResource]string
        - mutex sync.RWMutex

        + EquivalentResourcesFor(resource schema.GroupVersionResource, subresource string) []schema.GroupVersionResource
        + KindFor(resource schema.GroupVersionResource, subresource string) schema.GroupVersionKind
        + RegisterKindFor(resource schema.GroupVersionResource, subresource string, kind schema.GroupVersionKind) 

    }
    class fieldInfo << (S,Aquamarine) >> {
        - name string
        - nameValue reflect.Value
        - omitempty bool

    }
    class fieldsCache << (S,Aquamarine) >> {
        - value atomic.Value

    }
    class fromUnstructuredContext << (S,Aquamarine) >> {
        - isInlined bool
        - matchedKeys []<font color=blue>map</font>[string]<font color=blue>struct</font>{}
        - parentPath []string
        - returnUnknownFields bool
        - unknownFieldErrors []error

        - pushMatchedKeyTracker() 
        - recordMatchedKey(key string) 
        - popAndVerifyMatchedKeys(mapValue reflect.Value) 
        - recordUnknownField(field string) 
        - pushIndex(index int) 
        - pushKey(key string) 

    }
    class internalGroupVersioner << (S,Aquamarine) >> {
        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    class missingKindErr << (S,Aquamarine) >> {
        - data string

        + Error() string

    }
    class missingVersionErr << (S,Aquamarine) >> {
        - data string

        + Error() string

    }
    class multiGroupVersioner << (S,Aquamarine) >> {
        - target schema.GroupVersion
        - acceptedGroupKinds []schema.GroupKind
        - coerce bool

        + KindForGroupVersionKinds(kinds []schema.GroupVersionKind) (schema.GroupVersionKind, bool)
        + Identifier() string

    }
    class notRegisteredErr << (S,Aquamarine) >> {
        - schemeName string
        - gvk schema.GroupVersionKind
        - target GroupVersioner
        - t reflect.Type

        + Error() string

    }
    class parameterCodec << (S,Aquamarine) >> {
        - typer ObjectTyper
        - convertor ObjectConvertor
        - creator ObjectCreater
        - defaulter ObjectDefaulter

        + DecodeParameters(parameters url.Values, from schema.GroupVersion, into Object) error
        + EncodeParameters(obj Object, to schema.GroupVersion) (url.Values, error)

    }
    class runtime.Codec << (T, #FF7700) >>  {
    }
    class runtime.FieldLabelConversionFunc << (T, #FF7700) >>  {
    }
    class runtime.Identifier << (T, #FF7700) >>  {
    }
    class runtime.KubeTypes << (T, #FF7700) >>  {
    }
    class runtime.MultiObjectTyper << (T, #FF7700) >>  {
    }
    class runtime.SchemeBuilder << (T, #FF7700) >>  {
    }
    class runtime.fieldsCacheMap << (T, #FF7700) >>  {
    }
    class simpleNegotiatedSerializer << (S,Aquamarine) >> {
        - info SerializerInfo

        + SupportedMediaTypes() []SerializerInfo
        + EncoderForVersion(e Encoder, _ GroupVersioner) Encoder
        + DecoderToVersion(d Decoder, _gv GroupVersioner) Decoder

    }
    class strictDecodingError << (S,Aquamarine) >> {
        - errors []error

        + Error() string
        + Errors() []error

    }
    class structField << (S,Aquamarine) >> {
        - structType reflect.Type
        - field int

    }
    class unsafeObjectConvertor << (S,Aquamarine) >> {
        + ConvertToVersion(in Object, outVersion GroupVersioner) (Object, error)

    }
    class unstructuredConverter << (S,Aquamarine) >> {
        - mismatchDetection bool
        - comparison conversion.Equalities

        + FromUnstructuredWithValidation(u <font color=blue>map</font>[string]<font color=blue>interface</font>{}, obj <font color=blue>interface</font>{}, returnUnknownFields bool) error
        + FromUnstructured(u <font color=blue>map</font>[string]<font color=blue>interface</font>{}, obj <font color=blue>interface</font>{}) error
        + ToUnstructured(obj <font color=blue>interface</font>{}) (<font color=blue>map</font>[string]<font color=blue>interface</font>{}, error)

    }
}
"runtime.MemoryAllocator" <|-- "runtime.Allocator"
"runtime.ObjectTyper" <|-- "runtime.MultiObjectTyper"
"runtime.Decoder" <|-- "runtime.NoopDecoder"
"runtime.Encoder" <|-- "runtime.NoopEncoder"
"runtime.ProtobufMarshaller" <|-- "runtime.RawExtension"
"runtime.ProtobufReverseMarshaller" <|-- "runtime.RawExtension"
"runtime.ObjectConvertor" <|-- "runtime.Scheme"
"runtime.ObjectCreater" <|-- "runtime.Scheme"
"runtime.ObjectDefaulter" <|-- "runtime.Scheme"
"runtime.ObjectTyper" <|-- "runtime.Scheme"
"runtime.ObjectVersioner" <|-- "runtime.Scheme"
"runtime.MemoryAllocator" <|-- "runtime.SimpleAllocator"
"runtime.ProtobufMarshaller" <|-- "runtime.TypeMeta"
"runtime.ProtobufReverseMarshaller" <|-- "runtime.TypeMeta"
"runtime.ProtobufMarshaller" <|-- "runtime.Unknown"
"runtime.ProtobufReverseMarshaller" <|-- "runtime.Unknown"
"runtime.Decoder" <|-- "runtime.WithoutVersionDecoder"
"runtime.Decoder" <|-- "runtime.base64Serializer"
"runtime.Encoder" <|-- "runtime.base64Serializer"
"runtime.ClientNegotiator" <|-- "runtime.clientNegotiator"
"runtime.Framer" <|-- "runtime.defaultFramer"
"runtime.GroupVersioner" <|-- "runtime.disabledGroupVersioner"
"runtime.Object" <|-- "runtime.encodable"
"runtime.EquivalentResourceMapper" <|-- "runtime.equivalentResourceRegistry"
"runtime.EquivalentResourceRegistry" <|-- "runtime.equivalentResourceRegistry"
"runtime.GroupVersioner" <|-- "runtime.internalGroupVersioner"
"runtime.GroupVersioner" <|-- "runtime.multiGroupVersioner"
"runtime.ParameterCodec" <|-- "runtime.parameterCodec"
"runtime.NegotiatedSerializer" <|-- "runtime.simpleNegotiatedSerializer"
"runtime.ObjectVersioner" <|-- "runtime.unsafeObjectConvertor"
"runtime.UnstructuredConverter" <|-- "runtime.unstructuredConverter"

namespace v1 {
    class APIGroup << (S,Aquamarine) >> {
        + Name string
        + Versions []GroupVersionForDiscovery
        + PreferredVersion GroupVersionForDiscovery
        + ServerAddressByClientCIDRs []ServerAddressByClientCIDR

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIGroup) 
        + DeepCopy() *APIGroup
        + DeepCopyObject() runtime.Object

    }
    class APIGroupList << (S,Aquamarine) >> {
        + Groups []APIGroup

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIGroupList) 
        + DeepCopy() *APIGroupList
        + DeepCopyObject() runtime.Object

    }
    class APIResource << (S,Aquamarine) >> {
        + Name string
        + SingularName string
        + Namespaced bool
        + Group string
        + Version string
        + Kind string
        + Verbs Verbs
        + ShortNames []string
        + Categories []string
        + StorageVersionHash string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIResource) 
        + DeepCopy() *APIResource

    }
    class APIResourceList << (S,Aquamarine) >> {
        + GroupVersion string
        + APIResources []APIResource

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIResourceList) 
        + DeepCopy() *APIResourceList
        + DeepCopyObject() runtime.Object

    }
    class APIVersions << (S,Aquamarine) >> {
        + Versions []string
        + ServerAddressByClientCIDRs []ServerAddressByClientCIDR

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + GoString() string
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *APIVersions) 
        + DeepCopy() *APIVersions
        + DeepCopyObject() runtime.Object

    }
    class ApplyOptions << (S,Aquamarine) >> {
        + DryRun []string
        + Force bool
        + FieldManager string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + ToPatchOptions() PatchOptions
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ApplyOptions) 
        + DeepCopy() *ApplyOptions

    }
    interface Common  {
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 

    }
    class Condition << (S,Aquamarine) >> {
        + Type string
        + Status ConditionStatus
        + ObservedGeneration int64
        + LastTransitionTime Time
        + Reason string
        + Message string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Condition) 
        + DeepCopy() *Condition

    }
    class CreateOptions << (S,Aquamarine) >> {
        + DryRun []string
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *CreateOptions) 
        + DeepCopy() *CreateOptions
        + DeepCopyObject() runtime.Object

    }
    class DeleteOptions << (S,Aquamarine) >> {
        + GracePeriodSeconds *int64
        + Preconditions *Preconditions
        + OrphanDependents *bool
        + PropagationPolicy *DeletionPropagation
        + DryRun []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *DeleteOptions) 
        + DeepCopy() *DeleteOptions
        + DeepCopyObject() runtime.Object

    }
    class Duration << (S,Aquamarine) >> {
        + UnmarshalJSON(b []byte) error
        + MarshalJSON() ([]byte, error)
        + ToUnstructured() <font color=blue>interface</font>{}
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + DeepCopyInto(out *Duration) 
        + DeepCopy() *Duration

    }
    class FieldsV1 << (S,Aquamarine) >> {
        + Raw []byte

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + String() string
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *FieldsV1) 
        + DeepCopy() *FieldsV1

    }
    class GetOptions << (S,Aquamarine) >> {
        + ResourceVersion string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *GetOptions) 
        + DeepCopy() *GetOptions
        + DeepCopyObject() runtime.Object

    }
    class GroupKind << (S,Aquamarine) >> {
        + Group string
        + Kind string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupKind) 
        + DeepCopy() *GroupKind

    }
    class GroupResource << (S,Aquamarine) >> {
        + Group string
        + Resource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupResource) 
        + DeepCopy() *GroupResource

    }
    class GroupVersion << (S,Aquamarine) >> {
        + Group string
        + Version string

        - unmarshal(value []byte) error

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + Empty() bool
        + String() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(value []byte) error
        + UnmarshalText(value []byte) error
        + DeepCopyInto(out *GroupVersion) 
        + DeepCopy() *GroupVersion

    }
    class GroupVersionForDiscovery << (S,Aquamarine) >> {
        + GroupVersion string
        + Version string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *GroupVersionForDiscovery) 
        + DeepCopy() *GroupVersionForDiscovery

    }
    class GroupVersionKind << (S,Aquamarine) >> {
        + Group string
        + Version string
        + Kind string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupVersionKind) 
        + DeepCopy() *GroupVersionKind

    }
    class GroupVersionResource << (S,Aquamarine) >> {
        + Group string
        + Version string
        + Resource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *GroupVersionResource) 
        + DeepCopy() *GroupVersionResource

    }
    class InternalEvent << (S,Aquamarine) >> {
        + GetObjectKind() schema.ObjectKind
        + DeepCopyObject() runtime.Object
        + DeepCopyInto(out *InternalEvent) 
        + DeepCopy() *InternalEvent

    }
    class LabelSelector << (S,Aquamarine) >> {
        + MatchLabels <font color=blue>map</font>[string]string
        + MatchExpressions []LabelSelectorRequirement

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *LabelSelector) 
        + DeepCopy() *LabelSelector

    }
    class LabelSelectorRequirement << (S,Aquamarine) >> {
        + Key string
        + Operator LabelSelectorOperator
        + Values []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *LabelSelectorRequirement) 
        + DeepCopy() *LabelSelectorRequirement

    }
    class List << (S,Aquamarine) >> {
        + Items []runtime.RawExtension

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *List) 
        + DeepCopy() *List
        + DeepCopyObject() runtime.Object

    }
    interface ListInterface  {
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 

    }
    class ListMeta << (S,Aquamarine) >> {
        + SelfLink string
        + ResourceVersion string
        + Continue string
        + RemainingItemCount *int64

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetContinue() string
        + SetContinue(c string) 
        + GetRemainingItemCount() *int64
        + SetRemainingItemCount(c *int64) 
        + GetListMeta() ListInterface
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ListMeta) 
        + DeepCopy() *ListMeta

    }
    interface ListMetaAccessor  {
        + GetListMeta() ListInterface

    }
    class ListOptions << (S,Aquamarine) >> {
        + LabelSelector string
        + FieldSelector string
        + Watch bool
        + AllowWatchBookmarks bool
        + ResourceVersion string
        + ResourceVersionMatch ResourceVersionMatch
        + TimeoutSeconds *int64
        + Limit int64
        + Continue string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ListOptions) 
        + DeepCopy() *ListOptions
        + DeepCopyObject() runtime.Object

    }
    class ManagedFieldsEntry << (S,Aquamarine) >> {
        + Manager string
        + Operation ManagedFieldsOperationType
        + APIVersion string
        + Time *Time
        + FieldsType string
        + FieldsV1 *FieldsV1
        + Subresource string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ManagedFieldsEntry) 
        + DeepCopy() *ManagedFieldsEntry

    }
    class MicroTime << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + DeepCopyInto(out *MicroTime) 
        + IsZero() bool
        + Before(u *MicroTime) bool
        + Equal(u *MicroTime) bool
        + BeforeTime(u *Time) bool
        + EqualTime(u *Time) bool
        + UnmarshalJSON(b []byte) error
        + UnmarshalQueryParameter(str string) error
        + MarshalJSON() ([]byte, error)
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + MarshalQueryParameter() (string, error)
        + Fuzz(c gofuzz.Continue) 
        + ProtoMicroTime() *Timestamp
        + Size() int
        + Unmarshal(data []byte) error
        + Marshal() ([]byte, error)
        + MarshalTo(data []byte) (int, error)
        + MarshalToSizedBuffer(data []byte) (int, error)
        + DeepCopy() *MicroTime

    }
    interface Object  {
        + GetNamespace() string
        + SetNamespace(namespace string) 
        + GetName() string
        + SetName(name string) 
        + GetGenerateName() string
        + SetGenerateName(name string) 
        + GetUID() types.UID
        + SetUID(uid types.UID) 
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetGeneration() int64
        + SetGeneration(generation int64) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetCreationTimestamp() Time
        + SetCreationTimestamp(timestamp Time) 
        + GetDeletionTimestamp() *Time
        + SetDeletionTimestamp(timestamp *Time) 
        + GetDeletionGracePeriodSeconds() *int64
        + SetDeletionGracePeriodSeconds( *int64) 
        + GetLabels() <font color=blue>map</font>[string]string
        + SetLabels(labels <font color=blue>map</font>[string]string) 
        + GetAnnotations() <font color=blue>map</font>[string]string
        + SetAnnotations(annotations <font color=blue>map</font>[string]string) 
        + GetFinalizers() []string
        + SetFinalizers(finalizers []string) 
        + GetOwnerReferences() []OwnerReference
        + SetOwnerReferences( []OwnerReference) 
        + GetManagedFields() []ManagedFieldsEntry
        + SetManagedFields(managedFields []ManagedFieldsEntry) 

    }
    class ObjectMeta << (S,Aquamarine) >> {
        + Name string
        + GenerateName string
        + Namespace string
        + SelfLink string
        + UID types.UID
        + ResourceVersion string
        + Generation int64
        + CreationTimestamp Time
        + DeletionTimestamp *Time
        + DeletionGracePeriodSeconds *int64
        + Labels <font color=blue>map</font>[string]string
        + Annotations <font color=blue>map</font>[string]string
        + OwnerReferences []OwnerReference
        + Finalizers []string
        + ManagedFields []ManagedFieldsEntry

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectMeta() Object
        + GetNamespace() string
        + SetNamespace(namespace string) 
        + GetName() string
        + SetName(name string) 
        + GetGenerateName() string
        + SetGenerateName(generateName string) 
        + GetUID() types.UID
        + SetUID(uid types.UID) 
        + GetResourceVersion() string
        + SetResourceVersion(version string) 
        + GetGeneration() int64
        + SetGeneration(generation int64) 
        + GetSelfLink() string
        + SetSelfLink(selfLink string) 
        + GetCreationTimestamp() Time
        + SetCreationTimestamp(creationTimestamp Time) 
        + GetDeletionTimestamp() *Time
        + SetDeletionTimestamp(deletionTimestamp *Time) 
        + GetDeletionGracePeriodSeconds() *int64
        + SetDeletionGracePeriodSeconds(deletionGracePeriodSeconds *int64) 
        + GetLabels() <font color=blue>map</font>[string]string
        + SetLabels(labels <font color=blue>map</font>[string]string) 
        + GetAnnotations() <font color=blue>map</font>[string]string
        + SetAnnotations(annotations <font color=blue>map</font>[string]string) 
        + GetFinalizers() []string
        + SetFinalizers(finalizers []string) 
        + GetOwnerReferences() []OwnerReference
        + SetOwnerReferences(references []OwnerReference) 
        + GetManagedFields() []ManagedFieldsEntry
        + SetManagedFields(managedFields []ManagedFieldsEntry) 
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ObjectMeta) 
        + DeepCopy() *ObjectMeta

    }
    interface ObjectMetaAccessor  {
        + GetObjectMeta() Object

    }
    class OwnerReference << (S,Aquamarine) >> {
        + APIVersion string
        + Kind string
        + Name string
        + UID types.UID
        + Controller *bool
        + BlockOwnerDeletion *bool

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *OwnerReference) 
        + DeepCopy() *OwnerReference

    }
    class PartialObjectMetadata << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PartialObjectMetadata) 
        + DeepCopy() *PartialObjectMetadata
        + DeepCopyObject() runtime.Object

    }
    class PartialObjectMetadataList << (S,Aquamarine) >> {
        + Items []PartialObjectMetadata

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PartialObjectMetadataList) 
        + DeepCopy() *PartialObjectMetadataList
        + DeepCopyObject() runtime.Object

    }
    class Patch << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Patch) 
        + DeepCopy() *Patch

    }
    class PatchOptions << (S,Aquamarine) >> {
        + DryRun []string
        + Force *bool
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *PatchOptions) 
        + DeepCopy() *PatchOptions
        + DeepCopyObject() runtime.Object

    }
    class Preconditions << (S,Aquamarine) >> {
        + UID *types.UID
        + ResourceVersion *string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Preconditions) 
        + DeepCopy() *Preconditions

    }
    class RootPaths << (S,Aquamarine) >> {
        + Paths []string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *RootPaths) 
        + DeepCopy() *RootPaths

    }
    class ServerAddressByClientCIDR << (S,Aquamarine) >> {
        + ClientCIDR string
        + ServerAddress string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *ServerAddressByClientCIDR) 
        + DeepCopy() *ServerAddressByClientCIDR

    }
    class Status << (S,Aquamarine) >> {
        + Status string
        + Message string
        + Reason StatusReason
        + Details *StatusDetails
        + Code int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Status) 
        + DeepCopy() *Status
        + DeepCopyObject() runtime.Object

    }
    class StatusCause << (S,Aquamarine) >> {
        + Type CauseType
        + Message string
        + Field string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *StatusCause) 
        + DeepCopy() *StatusCause

    }
    class StatusDetails << (S,Aquamarine) >> {
        + Name string
        + Group string
        + Kind string
        + UID types.UID
        + Causes []StatusCause
        + RetryAfterSeconds int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *StatusDetails) 
        + DeepCopy() *StatusDetails

    }
    class Table << (S,Aquamarine) >> {
        + ColumnDefinitions []TableColumnDefinition
        + Rows []TableRow

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *Table) 
        + DeepCopy() *Table
        + DeepCopyObject() runtime.Object

    }
    class TableColumnDefinition << (S,Aquamarine) >> {
        + Name string
        + Type string
        + Format string
        + Description string
        + Priority int32

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableColumnDefinition) 
        + DeepCopy() *TableColumnDefinition

    }
    class TableOptions << (S,Aquamarine) >> {
        + NoHeaders bool
        + IncludeObject IncludeObjectPolicy

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableOptions) 
        + DeepCopy() *TableOptions
        + DeepCopyObject() runtime.Object

    }
    class TableRow << (S,Aquamarine) >> {
        + Cells []<font color=blue>interface</font>{}
        + Conditions []TableRowCondition
        + Object runtime.RawExtension

        + DeepCopy() *TableRow
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableRow) 

    }
    class TableRowCondition << (S,Aquamarine) >> {
        + Type RowConditionType
        + Status ConditionStatus
        + Reason string
        + Message string

        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *TableRowCondition) 
        + DeepCopy() *TableRowCondition

    }
    class Time << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + DeepCopyInto(out *Time) 
        + IsZero() bool
        + Before(u *Time) bool
        + Equal(u *Time) bool
        + Rfc3339Copy() Time
        + UnmarshalJSON(b []byte) error
        + UnmarshalQueryParameter(str string) error
        + MarshalJSON() ([]byte, error)
        + ToUnstructured() <font color=blue>interface</font>{}
        + OpenAPISchemaType() []string
        + OpenAPISchemaFormat() string
        + MarshalQueryParameter() (string, error)
        + Fuzz(c gofuzz.Continue) 
        + ProtoTime() *Timestamp
        + Size() int
        + Unmarshal(data []byte) error
        + Marshal() ([]byte, error)
        + MarshalTo(data []byte) (int, error)
        + MarshalToSizedBuffer(data []byte) (int, error)
        + DeepCopy() *Time

    }
    class Timestamp << (S,Aquamarine) >> {
        + Seconds int64
        + Nanos int32

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + DeepCopyInto(out *Timestamp) 
        + DeepCopy() *Timestamp

    }
    interface Type  {
        + GetAPIVersion() string
        + SetAPIVersion(version string) 
        + GetKind() string
        + SetKind(kind string) 

    }
    class TypeMeta << (S,Aquamarine) >> {
        + Kind string
        + APIVersion string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectKind() schema.ObjectKind
        + SetGroupVersionKind(gvk schema.GroupVersionKind) 
        + GroupVersionKind() schema.GroupVersionKind
        + SwaggerDoc() <font color=blue>map</font>[string]string

    }
    class UpdateOptions << (S,Aquamarine) >> {
        + DryRun []string
        + FieldManager string
        + FieldValidation string

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + SwaggerDoc() <font color=blue>map</font>[string]string
        + DeepCopyInto(out *UpdateOptions) 
        + DeepCopy() *UpdateOptions
        + DeepCopyObject() runtime.Object

    }
    class Verbs << (S,Aquamarine) >> {
        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + Unmarshal(dAtA []byte) error
        + String() string
        + DeepCopyInto(out *Verbs) 
        + DeepCopy() Verbs

    }
    class WatchEvent << (S,Aquamarine) >> {
        + Type string
        + Object runtime.RawExtension

        + Reset() 
        + ProtoMessage() 
        + Descriptor() ([]byte, []int)
        + XXX_Unmarshal(b []byte) error
        + XXX_Marshal(b []byte, deterministic bool) ([]byte, error)
        + XXX_Merge(src proto.Message) 
        + XXX_Size() int
        + XXX_DiscardUnknown() 
        + Marshal() ([]byte, error)
        + MarshalTo(dAtA []byte) (int, error)
        + MarshalToSizedBuffer(dAtA []byte) (int, error)
        + Size() int
        + String() string
        + Unmarshal(dAtA []byte) error
        + GetObjectKind() schema.ObjectKind
        + DeepCopyInto(out *WatchEvent) 
        + DeepCopy() *WatchEvent
        + DeepCopyObject() runtime.Object

    }
    class v1.CauseType << (T, #FF7700) >>  {
    }
    class v1.ConditionStatus << (T, #FF7700) >>  {
    }
    class v1.DeletionPropagation << (T, #FF7700) >>  {
    }
    class v1.IncludeObjectPolicy << (T, #FF7700) >>  {
    }
    class v1.InternalEvent << (T, #FF7700) >>  {
    }
    class v1.LabelSelectorOperator << (T, #FF7700) >>  {
    }
    class v1.ManagedFieldsOperationType << (T, #FF7700) >>  {
    }
    class v1.ResourceVersionMatch << (T, #FF7700) >>  {
    }
    class v1.RowConditionType << (T, #FF7700) >>  {
    }
    class v1.StatusReason << (T, #FF7700) >>  {
    }
    class v1.Verbs << (T, #FF7700) >>  {
    }
    class "watch.Event" as watchEvent {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}
"runtime.ProtobufMarshaller" <|-- "v1.APIGroup"
"runtime.ProtobufReverseMarshaller" <|-- "v1.APIGroup"
"runtime.ProtobufMarshaller" <|-- "v1.APIGroupList"
"runtime.ProtobufReverseMarshaller" <|-- "v1.APIGroupList"
"runtime.ProtobufMarshaller" <|-- "v1.APIResource"
"runtime.ProtobufReverseMarshaller" <|-- "v1.APIResource"
"runtime.ProtobufMarshaller" <|-- "v1.APIResourceList"
"runtime.ProtobufReverseMarshaller" <|-- "v1.APIResourceList"
"runtime.ProtobufMarshaller" <|-- "v1.APIVersions"
"runtime.ProtobufReverseMarshaller" <|-- "v1.APIVersions"
"runtime.ProtobufMarshaller" <|-- "v1.ApplyOptions"
"runtime.ProtobufReverseMarshaller" <|-- "v1.ApplyOptions"
"runtime.ProtobufMarshaller" <|-- "v1.Condition"
"runtime.ProtobufReverseMarshaller" <|-- "v1.Condition"
"runtime.ProtobufMarshaller" <|-- "v1.CreateOptions"
"runtime.ProtobufReverseMarshaller" <|-- "v1.CreateOptions"
"runtime.ProtobufMarshaller" <|-- "v1.DeleteOptions"
"runtime.ProtobufReverseMarshaller" <|-- "v1.DeleteOptions"
"runtime.ProtobufMarshaller" <|-- "v1.Duration"
"runtime.ProtobufReverseMarshaller" <|-- "v1.Duration"
"runtime.ProtobufMarshaller" <|-- "v1.FieldsV1"
"runtime.ProtobufReverseMarshaller" <|-- "v1.FieldsV1"
"runtime.ProtobufMarshaller" <|-- "v1.GetOptions"
"runtime.ProtobufReverseMarshaller" <|-- "v1.GetOptions"
"runtime.ProtobufMarshaller" <|-- "v1.GroupKind"
"runtime.ProtobufReverseMarshaller" <|-- "v1.GroupKind"
"runtime.ProtobufMarshaller" <|-- "v1.GroupResource"
"runtime.ProtobufReverseMarshaller" <|-- "v1.GroupResource"
"runtime.ProtobufMarshaller" <|-- "v1.GroupVersion"
"runtime.ProtobufReverseMarshaller" <|-- "v1.GroupVersion"
"runtime.ProtobufMarshaller" <|-- "v1.GroupVersionForDiscovery"
"runtime.ProtobufReverseMarshaller" <|-- "v1.GroupVersionForDiscovery"
"runtime.ProtobufMarshaller" <|-- "v1.GroupVersionKind"
"runtime.ProtobufReverseMarshaller" <|-- "v1.GroupVersionKind"
"runtime.ProtobufMarshaller" <|-- "v1.GroupVersionResource"
"runtime.ProtobufReverseMarshaller" <|-- "v1.GroupVersionResource"
"runtime.Object" <|-- "v1.InternalEvent"
"runtime.ProtobufMarshaller" <|-- "v1.LabelSelector"
"runtime.ProtobufReverseMarshaller" <|-- "v1.LabelSelector"
"runtime.ProtobufMarshaller" <|-- "v1.LabelSelectorRequirement"
"runtime.ProtobufReverseMarshaller" <|-- "v1.LabelSelectorRequirement"
"runtime.ProtobufMarshaller" <|-- "v1.List"
"runtime.ProtobufReverseMarshaller" <|-- "v1.List"
"runtime.ProtobufMarshaller" <|-- "v1.ListMeta"
"runtime.ProtobufReverseMarshaller" <|-- "v1.ListMeta"
"v1.Common" <|-- "v1.ListMeta"
"v1.ListInterface" <|-- "v1.ListMeta"
"v1.ListMetaAccessor" <|-- "v1.ListMeta"
"runtime.ProtobufMarshaller" <|-- "v1.ListOptions"
"runtime.ProtobufReverseMarshaller" <|-- "v1.ListOptions"
"runtime.ProtobufMarshaller" <|-- "v1.ManagedFieldsEntry"
"runtime.ProtobufReverseMarshaller" <|-- "v1.ManagedFieldsEntry"
"runtime.ProtobufMarshaller" <|-- "v1.MicroTime"
"runtime.ProtobufReverseMarshaller" <|-- "v1.MicroTime"
"runtime.ProtobufMarshaller" <|-- "v1.ObjectMeta"
"runtime.ProtobufReverseMarshaller" <|-- "v1.ObjectMeta"
"v1.Common" <|-- "v1.ObjectMeta"
"v1.Object" <|-- "v1.ObjectMeta"
"v1.ObjectMetaAccessor" <|-- "v1.ObjectMeta"
"runtime.ProtobufMarshaller" <|-- "v1.OwnerReference"
"runtime.ProtobufReverseMarshaller" <|-- "v1.OwnerReference"
"runtime.ProtobufMarshaller" <|-- "v1.PartialObjectMetadata"
"runtime.ProtobufReverseMarshaller" <|-- "v1.PartialObjectMetadata"
"runtime.ProtobufMarshaller" <|-- "v1.PartialObjectMetadataList"
"runtime.ProtobufReverseMarshaller" <|-- "v1.PartialObjectMetadataList"
"runtime.ProtobufMarshaller" <|-- "v1.Patch"
"runtime.ProtobufReverseMarshaller" <|-- "v1.Patch"
"runtime.ProtobufMarshaller" <|-- "v1.PatchOptions"
"runtime.ProtobufReverseMarshaller" <|-- "v1.PatchOptions"
"runtime.ProtobufMarshaller" <|-- "v1.Preconditions"
"runtime.ProtobufReverseMarshaller" <|-- "v1.Preconditions"
"runtime.ProtobufMarshaller" <|-- "v1.RootPaths"
"runtime.ProtobufReverseMarshaller" <|-- "v1.RootPaths"
"runtime.ProtobufMarshaller" <|-- "v1.ServerAddressByClientCIDR"
"runtime.ProtobufReverseMarshaller" <|-- "v1.ServerAddressByClientCIDR"
"runtime.ProtobufMarshaller" <|-- "v1.Status"
"runtime.ProtobufReverseMarshaller" <|-- "v1.Status"
"runtime.ProtobufMarshaller" <|-- "v1.StatusCause"
"runtime.ProtobufReverseMarshaller" <|-- "v1.StatusCause"
"runtime.ProtobufMarshaller" <|-- "v1.StatusDetails"
"runtime.ProtobufReverseMarshaller" <|-- "v1.StatusDetails"
"runtime.ProtobufMarshaller" <|-- "v1.TableOptions"
"runtime.ProtobufReverseMarshaller" <|-- "v1.TableOptions"
"runtime.ProtobufMarshaller" <|-- "v1.Time"
"runtime.ProtobufReverseMarshaller" <|-- "v1.Time"
"runtime.ProtobufMarshaller" <|-- "v1.Timestamp"
"runtime.ProtobufReverseMarshaller" <|-- "v1.Timestamp"
"runtime.ProtobufMarshaller" <|-- "v1.TypeMeta"
"runtime.ProtobufReverseMarshaller" <|-- "v1.TypeMeta"
"runtime.ProtobufMarshaller" <|-- "v1.UpdateOptions"
"runtime.ProtobufReverseMarshaller" <|-- "v1.UpdateOptions"
"runtime.ProtobufMarshaller" <|-- "v1.Verbs"
"runtime.ProtobufReverseMarshaller" <|-- "v1.Verbs"
"runtime.Object" <|-- "v1.WatchEvent"
"runtime.ProtobufMarshaller" <|-- "v1.WatchEvent"
"runtime.ProtobufReverseMarshaller" <|-- "v1.WatchEvent"

hide methods
@enduml
